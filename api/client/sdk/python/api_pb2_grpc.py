# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import api_pb2 as api__pb2


class OpenStorageClusterStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Enumerate = channel.unary_unary(
        '/openstorage.api.OpenStorageCluster/Enumerate',
        request_serializer=api__pb2.ClusterEnumerateRequest.SerializeToString,
        response_deserializer=api__pb2.ClusterEnumerateResponse.FromString,
        )
    self.Inspect = channel.unary_unary(
        '/openstorage.api.OpenStorageCluster/Inspect',
        request_serializer=api__pb2.ClusterInspectRequest.SerializeToString,
        response_deserializer=api__pb2.ClusterInspectResponse.FromString,
        )
    self.AlertEnumerate = channel.unary_unary(
        '/openstorage.api.OpenStorageCluster/AlertEnumerate',
        request_serializer=api__pb2.ClusterAlertEnumerateRequest.SerializeToString,
        response_deserializer=api__pb2.ClusterAlertEnumerateResponse.FromString,
        )
    self.AlertClear = channel.unary_unary(
        '/openstorage.api.OpenStorageCluster/AlertClear',
        request_serializer=api__pb2.ClusterAlertClearRequest.SerializeToString,
        response_deserializer=api__pb2.ClusterAlertClearResponse.FromString,
        )
    self.AlertErase = channel.unary_unary(
        '/openstorage.api.OpenStorageCluster/AlertErase',
        request_serializer=api__pb2.ClusterAlertEraseRequest.SerializeToString,
        response_deserializer=api__pb2.ClusterAlertEraseResponse.FromString,
        )


class OpenStorageClusterServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Enumerate(self, request, context):
    """Enumerate lists all the nodes in the cluster.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Inspect(self, request, context):
    """Inspect the node given a UUID.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AlertEnumerate(self, request, context):
    """Get a list of alerts from the storage cluster
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AlertClear(self, request, context):
    """Clear the alert for a given resource
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AlertErase(self, request, context):
    """Erases an alert for a given resource
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OpenStorageClusterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Enumerate': grpc.unary_unary_rpc_method_handler(
          servicer.Enumerate,
          request_deserializer=api__pb2.ClusterEnumerateRequest.FromString,
          response_serializer=api__pb2.ClusterEnumerateResponse.SerializeToString,
      ),
      'Inspect': grpc.unary_unary_rpc_method_handler(
          servicer.Inspect,
          request_deserializer=api__pb2.ClusterInspectRequest.FromString,
          response_serializer=api__pb2.ClusterInspectResponse.SerializeToString,
      ),
      'AlertEnumerate': grpc.unary_unary_rpc_method_handler(
          servicer.AlertEnumerate,
          request_deserializer=api__pb2.ClusterAlertEnumerateRequest.FromString,
          response_serializer=api__pb2.ClusterAlertEnumerateResponse.SerializeToString,
      ),
      'AlertClear': grpc.unary_unary_rpc_method_handler(
          servicer.AlertClear,
          request_deserializer=api__pb2.ClusterAlertClearRequest.FromString,
          response_serializer=api__pb2.ClusterAlertClearResponse.SerializeToString,
      ),
      'AlertErase': grpc.unary_unary_rpc_method_handler(
          servicer.AlertErase,
          request_deserializer=api__pb2.ClusterAlertEraseRequest.FromString,
          response_serializer=api__pb2.ClusterAlertEraseResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'openstorage.api.OpenStorageCluster', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class OpenStorageVolumeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Create',
        request_serializer=api__pb2.OpenStorageVolumeCreateRequest.SerializeToString,
        response_deserializer=api__pb2.OpenStorageVolumeCreateResponse.FromString,
        )
    self.CreateFromVolumeID = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/CreateFromVolumeID',
        request_serializer=api__pb2.VolumeCreateFromVolumeIDRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeCreateFromVolumeIDResponse.FromString,
        )
    self.Delete = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Delete',
        request_serializer=api__pb2.VolumeDeleteRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeDeleteResponse.FromString,
        )
    self.Inspect = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Inspect',
        request_serializer=api__pb2.VolumeInspectRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeInspectResponse.FromString,
        )
    self.Enumerate = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Enumerate',
        request_serializer=api__pb2.VolumeEnumerateRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeEnumerateResponse.FromString,
        )
    self.SnapshotCreate = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/SnapshotCreate',
        request_serializer=api__pb2.VolumeSnapshotCreateRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeSnapshotCreateResponse.FromString,
        )
    self.SnapshotRestore = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/SnapshotRestore',
        request_serializer=api__pb2.VolumeSnapshotRestoreRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeSnapshotRestoreResponse.FromString,
        )
    self.SnapshotEnumerate = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/SnapshotEnumerate',
        request_serializer=api__pb2.VolumeSnapshotEnumerateRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeSnapshotEnumerateResponse.FromString,
        )
    self.Attach = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Attach',
        request_serializer=api__pb2.VolumeAttachRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeAttachResponse.FromString,
        )
    self.Detach = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Detach',
        request_serializer=api__pb2.VolumeDetachRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeDetachResponse.FromString,
        )
    self.Mount = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Mount',
        request_serializer=api__pb2.VolumeMountRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeMountResponse.FromString,
        )
    self.Unmount = channel.unary_unary(
        '/openstorage.api.OpenStorageVolume/Unmount',
        request_serializer=api__pb2.VolumeUnmountRequest.SerializeToString,
        response_deserializer=api__pb2.VolumeUnmountResponse.FromString,
        )


class OpenStorageVolumeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    """Creates a new volume
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateFromVolumeID(self, request, context):
    """CreateFromVolumeID creates a new volume cloned from an existing volume
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    """Delete a volume
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Inspect(self, request, context):
    """Get information on a volume
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Enumerate(self, request, context):
    """Get a list of volumes
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SnapshotCreate(self, request, context):
    """Create a snapshot of a volume. This creates an immutable (read-only),
    point-in-time snapshot of a volume.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SnapshotRestore(self, request, context):
    """Restores a volume to a specified snapshot
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SnapshotEnumerate(self, request, context):
    """List the number of snapshots for a specific volume
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Attach(self, request, context):
    """Attach device to host                                                      
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Detach(self, request, context):
    """Detaches the volume from the node.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Mount(self, request, context):
    """Attaches the volume to a node.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Unmount(self, request, context):
    """Unmount volume at specified path                                           
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OpenStorageVolumeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=api__pb2.OpenStorageVolumeCreateRequest.FromString,
          response_serializer=api__pb2.OpenStorageVolumeCreateResponse.SerializeToString,
      ),
      'CreateFromVolumeID': grpc.unary_unary_rpc_method_handler(
          servicer.CreateFromVolumeID,
          request_deserializer=api__pb2.VolumeCreateFromVolumeIDRequest.FromString,
          response_serializer=api__pb2.VolumeCreateFromVolumeIDResponse.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=api__pb2.VolumeDeleteRequest.FromString,
          response_serializer=api__pb2.VolumeDeleteResponse.SerializeToString,
      ),
      'Inspect': grpc.unary_unary_rpc_method_handler(
          servicer.Inspect,
          request_deserializer=api__pb2.VolumeInspectRequest.FromString,
          response_serializer=api__pb2.VolumeInspectResponse.SerializeToString,
      ),
      'Enumerate': grpc.unary_unary_rpc_method_handler(
          servicer.Enumerate,
          request_deserializer=api__pb2.VolumeEnumerateRequest.FromString,
          response_serializer=api__pb2.VolumeEnumerateResponse.SerializeToString,
      ),
      'SnapshotCreate': grpc.unary_unary_rpc_method_handler(
          servicer.SnapshotCreate,
          request_deserializer=api__pb2.VolumeSnapshotCreateRequest.FromString,
          response_serializer=api__pb2.VolumeSnapshotCreateResponse.SerializeToString,
      ),
      'SnapshotRestore': grpc.unary_unary_rpc_method_handler(
          servicer.SnapshotRestore,
          request_deserializer=api__pb2.VolumeSnapshotRestoreRequest.FromString,
          response_serializer=api__pb2.VolumeSnapshotRestoreResponse.SerializeToString,
      ),
      'SnapshotEnumerate': grpc.unary_unary_rpc_method_handler(
          servicer.SnapshotEnumerate,
          request_deserializer=api__pb2.VolumeSnapshotEnumerateRequest.FromString,
          response_serializer=api__pb2.VolumeSnapshotEnumerateResponse.SerializeToString,
      ),
      'Attach': grpc.unary_unary_rpc_method_handler(
          servicer.Attach,
          request_deserializer=api__pb2.VolumeAttachRequest.FromString,
          response_serializer=api__pb2.VolumeAttachResponse.SerializeToString,
      ),
      'Detach': grpc.unary_unary_rpc_method_handler(
          servicer.Detach,
          request_deserializer=api__pb2.VolumeDetachRequest.FromString,
          response_serializer=api__pb2.VolumeDetachResponse.SerializeToString,
      ),
      'Mount': grpc.unary_unary_rpc_method_handler(
          servicer.Mount,
          request_deserializer=api__pb2.VolumeMountRequest.FromString,
          response_serializer=api__pb2.VolumeMountResponse.SerializeToString,
      ),
      'Unmount': grpc.unary_unary_rpc_method_handler(
          servicer.Unmount,
          request_deserializer=api__pb2.VolumeUnmountRequest.FromString,
          response_serializer=api__pb2.VolumeUnmountResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'openstorage.api.OpenStorageVolume', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
