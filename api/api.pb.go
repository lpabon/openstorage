// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_STATUS_NONE                     Status = 0
	Status_STATUS_INIT                     Status = 1
	Status_STATUS_OK                       Status = 2
	Status_STATUS_OFFLINE                  Status = 3
	Status_STATUS_ERROR                    Status = 4
	Status_STATUS_NOT_IN_QUORUM            Status = 5
	Status_STATUS_DECOMMISSION             Status = 6
	Status_STATUS_MAINTENANCE              Status = 7
	Status_STATUS_STORAGE_DOWN             Status = 8
	Status_STATUS_STORAGE_DEGRADED         Status = 9
	Status_STATUS_NEEDS_REBOOT             Status = 10
	Status_STATUS_STORAGE_REBALANCE        Status = 11
	Status_STATUS_STORAGE_DRIVE_REPLACE    Status = 12
	Status_STATUS_NOT_IN_QUORUM_NO_STORAGE Status = 13
	// Add statuses before MAX and update the number for MAX
	Status_STATUS_MAX Status = 14
)

var Status_name = map[int32]string{
	0:  "STATUS_NONE",
	1:  "STATUS_INIT",
	2:  "STATUS_OK",
	3:  "STATUS_OFFLINE",
	4:  "STATUS_ERROR",
	5:  "STATUS_NOT_IN_QUORUM",
	6:  "STATUS_DECOMMISSION",
	7:  "STATUS_MAINTENANCE",
	8:  "STATUS_STORAGE_DOWN",
	9:  "STATUS_STORAGE_DEGRADED",
	10: "STATUS_NEEDS_REBOOT",
	11: "STATUS_STORAGE_REBALANCE",
	12: "STATUS_STORAGE_DRIVE_REPLACE",
	13: "STATUS_NOT_IN_QUORUM_NO_STORAGE",
	14: "STATUS_MAX",
}
var Status_value = map[string]int32{
	"STATUS_NONE":                     0,
	"STATUS_INIT":                     1,
	"STATUS_OK":                       2,
	"STATUS_OFFLINE":                  3,
	"STATUS_ERROR":                    4,
	"STATUS_NOT_IN_QUORUM":            5,
	"STATUS_DECOMMISSION":             6,
	"STATUS_MAINTENANCE":              7,
	"STATUS_STORAGE_DOWN":             8,
	"STATUS_STORAGE_DEGRADED":         9,
	"STATUS_NEEDS_REBOOT":             10,
	"STATUS_STORAGE_REBALANCE":        11,
	"STATUS_STORAGE_DRIVE_REPLACE":    12,
	"STATUS_NOT_IN_QUORUM_NO_STORAGE": 13,
	"STATUS_MAX":                      14,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{0}
}

type DriverType int32

const (
	DriverType_DRIVER_TYPE_NONE      DriverType = 0
	DriverType_DRIVER_TYPE_FILE      DriverType = 1
	DriverType_DRIVER_TYPE_BLOCK     DriverType = 2
	DriverType_DRIVER_TYPE_OBJECT    DriverType = 3
	DriverType_DRIVER_TYPE_CLUSTERED DriverType = 4
	DriverType_DRIVER_TYPE_GRAPH     DriverType = 5
)

var DriverType_name = map[int32]string{
	0: "DRIVER_TYPE_NONE",
	1: "DRIVER_TYPE_FILE",
	2: "DRIVER_TYPE_BLOCK",
	3: "DRIVER_TYPE_OBJECT",
	4: "DRIVER_TYPE_CLUSTERED",
	5: "DRIVER_TYPE_GRAPH",
}
var DriverType_value = map[string]int32{
	"DRIVER_TYPE_NONE":      0,
	"DRIVER_TYPE_FILE":      1,
	"DRIVER_TYPE_BLOCK":     2,
	"DRIVER_TYPE_OBJECT":    3,
	"DRIVER_TYPE_CLUSTERED": 4,
	"DRIVER_TYPE_GRAPH":     5,
}

func (x DriverType) String() string {
	return proto.EnumName(DriverType_name, int32(x))
}
func (DriverType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{1}
}

type FSType int32

const (
	FSType_FS_TYPE_NONE  FSType = 0
	FSType_FS_TYPE_BTRFS FSType = 1
	FSType_FS_TYPE_EXT4  FSType = 2
	FSType_FS_TYPE_FUSE  FSType = 3
	FSType_FS_TYPE_NFS   FSType = 4
	FSType_FS_TYPE_VFS   FSType = 5
	FSType_FS_TYPE_XFS   FSType = 6
	FSType_FS_TYPE_ZFS   FSType = 7
)

var FSType_name = map[int32]string{
	0: "FS_TYPE_NONE",
	1: "FS_TYPE_BTRFS",
	2: "FS_TYPE_EXT4",
	3: "FS_TYPE_FUSE",
	4: "FS_TYPE_NFS",
	5: "FS_TYPE_VFS",
	6: "FS_TYPE_XFS",
	7: "FS_TYPE_ZFS",
}
var FSType_value = map[string]int32{
	"FS_TYPE_NONE":  0,
	"FS_TYPE_BTRFS": 1,
	"FS_TYPE_EXT4":  2,
	"FS_TYPE_FUSE":  3,
	"FS_TYPE_NFS":   4,
	"FS_TYPE_VFS":   5,
	"FS_TYPE_XFS":   6,
	"FS_TYPE_ZFS":   7,
}

func (x FSType) String() string {
	return proto.EnumName(FSType_name, int32(x))
}
func (FSType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{2}
}

type GraphDriverChangeType int32

const (
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE     GraphDriverChangeType = 0
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_MODIFIED GraphDriverChangeType = 1
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_ADDED    GraphDriverChangeType = 2
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_DELETED  GraphDriverChangeType = 3
)

var GraphDriverChangeType_name = map[int32]string{
	0: "GRAPH_DRIVER_CHANGE_TYPE_NONE",
	1: "GRAPH_DRIVER_CHANGE_TYPE_MODIFIED",
	2: "GRAPH_DRIVER_CHANGE_TYPE_ADDED",
	3: "GRAPH_DRIVER_CHANGE_TYPE_DELETED",
}
var GraphDriverChangeType_value = map[string]int32{
	"GRAPH_DRIVER_CHANGE_TYPE_NONE":     0,
	"GRAPH_DRIVER_CHANGE_TYPE_MODIFIED": 1,
	"GRAPH_DRIVER_CHANGE_TYPE_ADDED":    2,
	"GRAPH_DRIVER_CHANGE_TYPE_DELETED":  3,
}

func (x GraphDriverChangeType) String() string {
	return proto.EnumName(GraphDriverChangeType_name, int32(x))
}
func (GraphDriverChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{3}
}

type SeverityType int32

const (
	SeverityType_SEVERITY_TYPE_NONE    SeverityType = 0
	SeverityType_SEVERITY_TYPE_ALARM   SeverityType = 1
	SeverityType_SEVERITY_TYPE_WARNING SeverityType = 2
	SeverityType_SEVERITY_TYPE_NOTIFY  SeverityType = 3
)

var SeverityType_name = map[int32]string{
	0: "SEVERITY_TYPE_NONE",
	1: "SEVERITY_TYPE_ALARM",
	2: "SEVERITY_TYPE_WARNING",
	3: "SEVERITY_TYPE_NOTIFY",
}
var SeverityType_value = map[string]int32{
	"SEVERITY_TYPE_NONE":    0,
	"SEVERITY_TYPE_ALARM":   1,
	"SEVERITY_TYPE_WARNING": 2,
	"SEVERITY_TYPE_NOTIFY":  3,
}

func (x SeverityType) String() string {
	return proto.EnumName(SeverityType_name, int32(x))
}
func (SeverityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{4}
}

type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_NONE    ResourceType = 0
	ResourceType_RESOURCE_TYPE_VOLUME  ResourceType = 1
	ResourceType_RESOURCE_TYPE_NODE    ResourceType = 2
	ResourceType_RESOURCE_TYPE_CLUSTER ResourceType = 3
	ResourceType_RESOURCE_TYPE_DRIVE   ResourceType = 4
)

var ResourceType_name = map[int32]string{
	0: "RESOURCE_TYPE_NONE",
	1: "RESOURCE_TYPE_VOLUME",
	2: "RESOURCE_TYPE_NODE",
	3: "RESOURCE_TYPE_CLUSTER",
	4: "RESOURCE_TYPE_DRIVE",
}
var ResourceType_value = map[string]int32{
	"RESOURCE_TYPE_NONE":    0,
	"RESOURCE_TYPE_VOLUME":  1,
	"RESOURCE_TYPE_NODE":    2,
	"RESOURCE_TYPE_CLUSTER": 3,
	"RESOURCE_TYPE_DRIVE":   4,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{5}
}

type AlertActionType int32

const (
	AlertActionType_ALERT_ACTION_TYPE_NONE   AlertActionType = 0
	AlertActionType_ALERT_ACTION_TYPE_DELETE AlertActionType = 1
	AlertActionType_ALERT_ACTION_TYPE_CREATE AlertActionType = 2
	AlertActionType_ALERT_ACTION_TYPE_UPDATE AlertActionType = 3
)

var AlertActionType_name = map[int32]string{
	0: "ALERT_ACTION_TYPE_NONE",
	1: "ALERT_ACTION_TYPE_DELETE",
	2: "ALERT_ACTION_TYPE_CREATE",
	3: "ALERT_ACTION_TYPE_UPDATE",
}
var AlertActionType_value = map[string]int32{
	"ALERT_ACTION_TYPE_NONE":   0,
	"ALERT_ACTION_TYPE_DELETE": 1,
	"ALERT_ACTION_TYPE_CREATE": 2,
	"ALERT_ACTION_TYPE_UPDATE": 3,
}

func (x AlertActionType) String() string {
	return proto.EnumName(AlertActionType_name, int32(x))
}
func (AlertActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{6}
}

type VolumeActionParam int32

const (
	VolumeActionParam_VOLUME_ACTION_PARAM_NONE VolumeActionParam = 0
	// Maps to the boolean value false
	VolumeActionParam_VOLUME_ACTION_PARAM_OFF VolumeActionParam = 1
	// Maps to the boolean value true.
	VolumeActionParam_VOLUME_ACTION_PARAM_ON VolumeActionParam = 2
)

var VolumeActionParam_name = map[int32]string{
	0: "VOLUME_ACTION_PARAM_NONE",
	1: "VOLUME_ACTION_PARAM_OFF",
	2: "VOLUME_ACTION_PARAM_ON",
}
var VolumeActionParam_value = map[string]int32{
	"VOLUME_ACTION_PARAM_NONE": 0,
	"VOLUME_ACTION_PARAM_OFF":  1,
	"VOLUME_ACTION_PARAM_ON":   2,
}

func (x VolumeActionParam) String() string {
	return proto.EnumName(VolumeActionParam_name, int32(x))
}
func (VolumeActionParam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{7}
}

type CosType int32

const (
	CosType_NONE   CosType = 0
	CosType_LOW    CosType = 1
	CosType_MEDIUM CosType = 2
	CosType_HIGH   CosType = 3
)

var CosType_name = map[int32]string{
	0: "NONE",
	1: "LOW",
	2: "MEDIUM",
	3: "HIGH",
}
var CosType_value = map[string]int32{
	"NONE":   0,
	"LOW":    1,
	"MEDIUM": 2,
	"HIGH":   3,
}

func (x CosType) String() string {
	return proto.EnumName(CosType_name, int32(x))
}
func (CosType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{8}
}

type IoProfile int32

const (
	IoProfile_IO_PROFILE_SEQUENTIAL IoProfile = 0
	IoProfile_IO_PROFILE_RANDOM     IoProfile = 1
	IoProfile_IO_PROFILE_DB         IoProfile = 2
	IoProfile_IO_PROFILE_DB_REMOTE  IoProfile = 3
	IoProfile_IO_PROFILE_CMS        IoProfile = 4
)

var IoProfile_name = map[int32]string{
	0: "IO_PROFILE_SEQUENTIAL",
	1: "IO_PROFILE_RANDOM",
	2: "IO_PROFILE_DB",
	3: "IO_PROFILE_DB_REMOTE",
	4: "IO_PROFILE_CMS",
}
var IoProfile_value = map[string]int32{
	"IO_PROFILE_SEQUENTIAL": 0,
	"IO_PROFILE_RANDOM":     1,
	"IO_PROFILE_DB":         2,
	"IO_PROFILE_DB_REMOTE":  3,
	"IO_PROFILE_CMS":        4,
}

func (x IoProfile) String() string {
	return proto.EnumName(IoProfile_name, int32(x))
}
func (IoProfile) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{9}
}

// VolumeState represents the state of a volume.
type VolumeState int32

const (
	VolumeState_VOLUME_STATE_NONE VolumeState = 0
	// Volume is transitioning to new state
	VolumeState_VOLUME_STATE_PENDING VolumeState = 1
	// Volume is ready to be assigned to a container
	VolumeState_VOLUME_STATE_AVAILABLE VolumeState = 2
	// Volume is attached to container
	VolumeState_VOLUME_STATE_ATTACHED VolumeState = 3
	// Volume is detached but associated with a container
	VolumeState_VOLUME_STATE_DETACHED VolumeState = 4
	// Volume detach is in progress
	VolumeState_VOLUME_STATE_DETATCHING VolumeState = 5
	// Volume is in error state
	VolumeState_VOLUME_STATE_ERROR VolumeState = 6
	// Volume is deleted, it will remain in this state
	// while resources are asynchronously reclaimed
	VolumeState_VOLUME_STATE_DELETED VolumeState = 7
	// Volume is trying to be detached
	VolumeState_VOLUME_STATE_TRY_DETACHING VolumeState = 8
	// Volume is undergoing restore
	VolumeState_VOLUME_STATE_RESTORE VolumeState = 9
)

var VolumeState_name = map[int32]string{
	0: "VOLUME_STATE_NONE",
	1: "VOLUME_STATE_PENDING",
	2: "VOLUME_STATE_AVAILABLE",
	3: "VOLUME_STATE_ATTACHED",
	4: "VOLUME_STATE_DETACHED",
	5: "VOLUME_STATE_DETATCHING",
	6: "VOLUME_STATE_ERROR",
	7: "VOLUME_STATE_DELETED",
	8: "VOLUME_STATE_TRY_DETACHING",
	9: "VOLUME_STATE_RESTORE",
}
var VolumeState_value = map[string]int32{
	"VOLUME_STATE_NONE":          0,
	"VOLUME_STATE_PENDING":       1,
	"VOLUME_STATE_AVAILABLE":     2,
	"VOLUME_STATE_ATTACHED":      3,
	"VOLUME_STATE_DETACHED":      4,
	"VOLUME_STATE_DETATCHING":    5,
	"VOLUME_STATE_ERROR":         6,
	"VOLUME_STATE_DELETED":       7,
	"VOLUME_STATE_TRY_DETACHING": 8,
	"VOLUME_STATE_RESTORE":       9,
}

func (x VolumeState) String() string {
	return proto.EnumName(VolumeState_name, int32(x))
}
func (VolumeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{10}
}

// VolumeStatus represents a health status for a volume.
type VolumeStatus int32

const (
	VolumeStatus_VOLUME_STATUS_NONE VolumeStatus = 0
	// Volume is not present
	VolumeStatus_VOLUME_STATUS_NOT_PRESENT VolumeStatus = 1
	// Volume is healthy
	VolumeStatus_VOLUME_STATUS_UP VolumeStatus = 2
	// Volume is in fail mode
	VolumeStatus_VOLUME_STATUS_DOWN VolumeStatus = 3
	// Volume is up but with degraded performance
	// In a RAID group, this may indicate a problem with one or more drives
	VolumeStatus_VOLUME_STATUS_DEGRADED VolumeStatus = 4
)

var VolumeStatus_name = map[int32]string{
	0: "VOLUME_STATUS_NONE",
	1: "VOLUME_STATUS_NOT_PRESENT",
	2: "VOLUME_STATUS_UP",
	3: "VOLUME_STATUS_DOWN",
	4: "VOLUME_STATUS_DEGRADED",
}
var VolumeStatus_value = map[string]int32{
	"VOLUME_STATUS_NONE":        0,
	"VOLUME_STATUS_NOT_PRESENT": 1,
	"VOLUME_STATUS_UP":          2,
	"VOLUME_STATUS_DOWN":        3,
	"VOLUME_STATUS_DEGRADED":    4,
}

func (x VolumeStatus) String() string {
	return proto.EnumName(VolumeStatus_name, int32(x))
}
func (VolumeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{11}
}

type StorageMedium int32

const (
	// Magnetic spinning disk.
	StorageMedium_STORAGE_MEDIUM_MAGNETIC StorageMedium = 0
	// SSD disk
	StorageMedium_STORAGE_MEDIUM_SSD StorageMedium = 1
	// NVME disk
	StorageMedium_STORAGE_MEDIUM_NVME StorageMedium = 2
)

var StorageMedium_name = map[int32]string{
	0: "STORAGE_MEDIUM_MAGNETIC",
	1: "STORAGE_MEDIUM_SSD",
	2: "STORAGE_MEDIUM_NVME",
}
var StorageMedium_value = map[string]int32{
	"STORAGE_MEDIUM_MAGNETIC": 0,
	"STORAGE_MEDIUM_SSD":      1,
	"STORAGE_MEDIUM_NVME":     2,
}

func (x StorageMedium) String() string {
	return proto.EnumName(StorageMedium_name, int32(x))
}
func (StorageMedium) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{12}
}

type ClusterNotify int32

const (
	// Node is down
	ClusterNotify_CLUSTER_NOTIFY_DOWN ClusterNotify = 0
)

var ClusterNotify_name = map[int32]string{
	0: "CLUSTER_NOTIFY_DOWN",
}
var ClusterNotify_value = map[string]int32{
	"CLUSTER_NOTIFY_DOWN": 0,
}

func (x ClusterNotify) String() string {
	return proto.EnumName(ClusterNotify_name, int32(x))
}
func (ClusterNotify) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{13}
}

type AttachState int32

const (
	// Attached and available externally
	AttachState_ATTACH_STATE_EXTERNAL AttachState = 0
	// Attached but only available internally
	AttachState_ATTACH_STATE_INTERNAL AttachState = 1
	// Switching from External to Internal
	AttachState_ATTACH_STATE_INTERNAL_SWITCH AttachState = 2
)

var AttachState_name = map[int32]string{
	0: "ATTACH_STATE_EXTERNAL",
	1: "ATTACH_STATE_INTERNAL",
	2: "ATTACH_STATE_INTERNAL_SWITCH",
}
var AttachState_value = map[string]int32{
	"ATTACH_STATE_EXTERNAL":        0,
	"ATTACH_STATE_INTERNAL":        1,
	"ATTACH_STATE_INTERNAL_SWITCH": 2,
}

func (x AttachState) String() string {
	return proto.EnumName(AttachState_name, int32(x))
}
func (AttachState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{14}
}

type OperationFlags int32

const (
	OperationFlags_OP_FLAGS_UNKNOWN OperationFlags = 0
	OperationFlags_OP_FLAGS_NONE    OperationFlags = 1
	// Perform a force_detach during detach operation
	OperationFlags_OP_FLAGS_DETACH_FORCE OperationFlags = 2
)

var OperationFlags_name = map[int32]string{
	0: "OP_FLAGS_UNKNOWN",
	1: "OP_FLAGS_NONE",
	2: "OP_FLAGS_DETACH_FORCE",
}
var OperationFlags_value = map[string]int32{
	"OP_FLAGS_UNKNOWN":      0,
	"OP_FLAGS_NONE":         1,
	"OP_FLAGS_DETACH_FORCE": 2,
}

func (x OperationFlags) String() string {
	return proto.EnumName(OperationFlags_name, int32(x))
}
func (OperationFlags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{15}
}

type SdkTimeWeekday int32

const (
	SdkTimeWeekday_SdkTimeWeekdaySunday    SdkTimeWeekday = 0
	SdkTimeWeekday_SdkTimeWeekdayMonday    SdkTimeWeekday = 1
	SdkTimeWeekday_SdkTimeWeekdayTuesday   SdkTimeWeekday = 2
	SdkTimeWeekday_SdkTimeWeekdayWednesday SdkTimeWeekday = 3
	SdkTimeWeekday_SdkTimeWeekdayThursday  SdkTimeWeekday = 4
	SdkTimeWeekday_SdkTimeWeekdayFriday    SdkTimeWeekday = 5
	SdkTimeWeekday_SdkTimeWeekdaySaturday  SdkTimeWeekday = 6
)

var SdkTimeWeekday_name = map[int32]string{
	0: "SdkTimeWeekdaySunday",
	1: "SdkTimeWeekdayMonday",
	2: "SdkTimeWeekdayTuesday",
	3: "SdkTimeWeekdayWednesday",
	4: "SdkTimeWeekdayThursday",
	5: "SdkTimeWeekdayFriday",
	6: "SdkTimeWeekdaySaturday",
}
var SdkTimeWeekday_value = map[string]int32{
	"SdkTimeWeekdaySunday":    0,
	"SdkTimeWeekdayMonday":    1,
	"SdkTimeWeekdayTuesday":   2,
	"SdkTimeWeekdayWednesday": 3,
	"SdkTimeWeekdayThursday":  4,
	"SdkTimeWeekdayFriday":    5,
	"SdkTimeWeekdaySaturday":  6,
}

func (x SdkTimeWeekday) String() string {
	return proto.EnumName(SdkTimeWeekday_name, int32(x))
}
func (SdkTimeWeekday) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{16}
}

type SdkCloudBackupOpType int32

const (
	SdkCloudBackupOpType_SdkCloudBackupOpTypeUnknown   SdkCloudBackupOpType = 0
	SdkCloudBackupOpType_SdkCloudBackupOpTypeBackupOp  SdkCloudBackupOpType = 1
	SdkCloudBackupOpType_SdkCloudBackupOpTypeRestoreOp SdkCloudBackupOpType = 2
)

var SdkCloudBackupOpType_name = map[int32]string{
	0: "SdkCloudBackupOpTypeUnknown",
	1: "SdkCloudBackupOpTypeBackupOp",
	2: "SdkCloudBackupOpTypeRestoreOp",
}
var SdkCloudBackupOpType_value = map[string]int32{
	"SdkCloudBackupOpTypeUnknown":   0,
	"SdkCloudBackupOpTypeBackupOp":  1,
	"SdkCloudBackupOpTypeRestoreOp": 2,
}

func (x SdkCloudBackupOpType) String() string {
	return proto.EnumName(SdkCloudBackupOpType_name, int32(x))
}
func (SdkCloudBackupOpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{17}
}

type SdkCloudBackupStatusType int32

const (
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown    SdkCloudBackupStatusType = 0
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeNotStarted SdkCloudBackupStatusType = 1
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeDone       SdkCloudBackupStatusType = 2
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeAborted    SdkCloudBackupStatusType = 3
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypePaused     SdkCloudBackupStatusType = 4
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeStopped    SdkCloudBackupStatusType = 5
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeActive     SdkCloudBackupStatusType = 6
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeFailed     SdkCloudBackupStatusType = 7
)

var SdkCloudBackupStatusType_name = map[int32]string{
	0: "SdkCloudBackupStatusTypeUnknown",
	1: "SdkCloudBackupStatusTypeNotStarted",
	2: "SdkCloudBackupStatusTypeDone",
	3: "SdkCloudBackupStatusTypeAborted",
	4: "SdkCloudBackupStatusTypePaused",
	5: "SdkCloudBackupStatusTypeStopped",
	6: "SdkCloudBackupStatusTypeActive",
	7: "SdkCloudBackupStatusTypeFailed",
}
var SdkCloudBackupStatusType_value = map[string]int32{
	"SdkCloudBackupStatusTypeUnknown":    0,
	"SdkCloudBackupStatusTypeNotStarted": 1,
	"SdkCloudBackupStatusTypeDone":       2,
	"SdkCloudBackupStatusTypeAborted":    3,
	"SdkCloudBackupStatusTypePaused":     4,
	"SdkCloudBackupStatusTypeStopped":    5,
	"SdkCloudBackupStatusTypeActive":     6,
	"SdkCloudBackupStatusTypeFailed":     7,
}

func (x SdkCloudBackupStatusType) String() string {
	return proto.EnumName(SdkCloudBackupStatusType_name, int32(x))
}
func (SdkCloudBackupStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{18}
}

type SdkCloudBackupRequestedState int32

const (
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateUnknown SdkCloudBackupRequestedState = 0
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStatePause   SdkCloudBackupRequestedState = 1
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateResume  SdkCloudBackupRequestedState = 2
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateStop    SdkCloudBackupRequestedState = 3
)

var SdkCloudBackupRequestedState_name = map[int32]string{
	0: "SdkCloudBackupRequestedStateUnknown",
	1: "SdkCloudBackupRequestedStatePause",
	2: "SdkCloudBackupRequestedStateResume",
	3: "SdkCloudBackupRequestedStateStop",
}
var SdkCloudBackupRequestedState_value = map[string]int32{
	"SdkCloudBackupRequestedStateUnknown": 0,
	"SdkCloudBackupRequestedStatePause":   1,
	"SdkCloudBackupRequestedStateResume":  2,
	"SdkCloudBackupRequestedStateStop":    3,
}

func (x SdkCloudBackupRequestedState) String() string {
	return proto.EnumName(SdkCloudBackupRequestedState_name, int32(x))
}
func (SdkCloudBackupRequestedState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{19}
}

type CloudMigrate_OperationType int32

const (
	CloudMigrate_InvalidType CloudMigrate_OperationType = 0
	// Migrate all volumes in the cluster
	CloudMigrate_MigrateCluster CloudMigrate_OperationType = 1
	// Migrate a single volume
	CloudMigrate_MigrateVolume CloudMigrate_OperationType = 2
	// Migrate a group of volumes
	CloudMigrate_MigrateVolumeGroup CloudMigrate_OperationType = 3
)

var CloudMigrate_OperationType_name = map[int32]string{
	0: "InvalidType",
	1: "MigrateCluster",
	2: "MigrateVolume",
	3: "MigrateVolumeGroup",
}
var CloudMigrate_OperationType_value = map[string]int32{
	"InvalidType":        0,
	"MigrateCluster":     1,
	"MigrateVolume":      2,
	"MigrateVolumeGroup": 3,
}

func (x CloudMigrate_OperationType) String() string {
	return proto.EnumName(CloudMigrate_OperationType_name, int32(x))
}
func (CloudMigrate_OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{135, 0}
}

type CloudMigrate_Stage int32

const (
	CloudMigrate_InvalidStage CloudMigrate_Stage = 0
	CloudMigrate_Backup       CloudMigrate_Stage = 1
	CloudMigrate_Restore      CloudMigrate_Stage = 2
	CloudMigrate_VolumeUpdate CloudMigrate_Stage = 3
	CloudMigrate_Done         CloudMigrate_Stage = 4
)

var CloudMigrate_Stage_name = map[int32]string{
	0: "InvalidStage",
	1: "Backup",
	2: "Restore",
	3: "VolumeUpdate",
	4: "Done",
}
var CloudMigrate_Stage_value = map[string]int32{
	"InvalidStage": 0,
	"Backup":       1,
	"Restore":      2,
	"VolumeUpdate": 3,
	"Done":         4,
}

func (x CloudMigrate_Stage) String() string {
	return proto.EnumName(CloudMigrate_Stage_name, int32(x))
}
func (CloudMigrate_Stage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{135, 1}
}

type CloudMigrate_Status int32

const (
	CloudMigrate_InvalidStatus CloudMigrate_Status = 0
	CloudMigrate_Queued        CloudMigrate_Status = 1
	CloudMigrate_Initialized   CloudMigrate_Status = 2
	CloudMigrate_InProgress    CloudMigrate_Status = 3
	CloudMigrate_Failed        CloudMigrate_Status = 4
	CloudMigrate_Complete      CloudMigrate_Status = 5
)

var CloudMigrate_Status_name = map[int32]string{
	0: "InvalidStatus",
	1: "Queued",
	2: "Initialized",
	3: "InProgress",
	4: "Failed",
	5: "Complete",
}
var CloudMigrate_Status_value = map[string]int32{
	"InvalidStatus": 0,
	"Queued":        1,
	"Initialized":   2,
	"InProgress":    3,
	"Failed":        4,
	"Complete":      5,
}

func (x CloudMigrate_Status) String() string {
	return proto.EnumName(CloudMigrate_Status_name, int32(x))
}
func (CloudMigrate_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{135, 2}
}

// StorageResource groups properties of a storage device.
// swagger:model
type StorageResource struct {
	// Id is the LUN identifier.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Path device path for this storage resource.
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	// Storage medium.
	Medium StorageMedium `protobuf:"varint,3,opt,name=medium,enum=openstorage.api.StorageMedium" json:"medium,omitempty"`
	// True if this device is online.
	Online bool `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
	// IOPS
	Iops uint64 `protobuf:"varint,5,opt,name=iops" json:"iops,omitempty"`
	// SeqWrite
	SeqWrite float64 `protobuf:"fixed64,6,opt,name=seq_write,json=seqWrite" json:"seq_write,omitempty"`
	// SeqRead
	SeqRead float64 `protobuf:"fixed64,7,opt,name=seq_read,json=seqRead" json:"seq_read,omitempty"`
	// RandRW
	RandRW float64 `protobuf:"fixed64,8,opt,name=randRW" json:"randRW,omitempty"`
	// Total size in bytes.
	Size uint64 `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	// Physical Bytes used.
	Used uint64 `protobuf:"varint,10,opt,name=used" json:"used,omitempty"`
	// True if this device is rotational.
	RotationSpeed string `protobuf:"bytes,11,opt,name=rotation_speed,json=rotationSpeed" json:"rotation_speed,omitempty"`
	// Timestamp of last time this device was scanned.
	LastScan *timestamp.Timestamp `protobuf:"bytes,12,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// True if dedicated for metadata.
	Metadata             bool     `protobuf:"varint,13,opt,name=metadata" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageResource) Reset()         { *m = StorageResource{} }
func (m *StorageResource) String() string { return proto.CompactTextString(m) }
func (*StorageResource) ProtoMessage()    {}
func (*StorageResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{0}
}
func (m *StorageResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageResource.Unmarshal(m, b)
}
func (m *StorageResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageResource.Marshal(b, m, deterministic)
}
func (dst *StorageResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageResource.Merge(dst, src)
}
func (m *StorageResource) XXX_Size() int {
	return xxx_messageInfo_StorageResource.Size(m)
}
func (m *StorageResource) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageResource.DiscardUnknown(m)
}

var xxx_messageInfo_StorageResource proto.InternalMessageInfo

func (m *StorageResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageResource) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StorageResource) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StorageResource) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *StorageResource) GetIops() uint64 {
	if m != nil {
		return m.Iops
	}
	return 0
}

func (m *StorageResource) GetSeqWrite() float64 {
	if m != nil {
		return m.SeqWrite
	}
	return 0
}

func (m *StorageResource) GetSeqRead() float64 {
	if m != nil {
		return m.SeqRead
	}
	return 0
}

func (m *StorageResource) GetRandRW() float64 {
	if m != nil {
		return m.RandRW
	}
	return 0
}

func (m *StorageResource) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *StorageResource) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StorageResource) GetRotationSpeed() string {
	if m != nil {
		return m.RotationSpeed
	}
	return ""
}

func (m *StorageResource) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *StorageResource) GetMetadata() bool {
	if m != nil {
		return m.Metadata
	}
	return false
}

// StoragePool groups different storage devices based on their CosType
type StoragePool struct {
	// ID pool ID
	ID int32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	// Cos reflects the capabilities of this drive pool
	Cos CosType `protobuf:"varint,2,opt,name=Cos,enum=openstorage.api.CosType" json:"Cos,omitempty"`
	// Medium underlying storage type
	Medium StorageMedium `protobuf:"varint,3,opt,name=Medium,enum=openstorage.api.StorageMedium" json:"Medium,omitempty"`
	// RaidLevel storage raid level
	RaidLevel string `protobuf:"bytes,4,opt,name=RaidLevel" json:"RaidLevel,omitempty"`
	// TotalSize of the pool
	TotalSize uint64 `protobuf:"varint,7,opt,name=TotalSize" json:"TotalSize,omitempty"`
	// Used size of the pool
	Used uint64 `protobuf:"varint,8,opt,name=Used" json:"Used,omitempty"`
	// Labels is a list of user defined name-value pairs
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StoragePool) Reset()         { *m = StoragePool{} }
func (m *StoragePool) String() string { return proto.CompactTextString(m) }
func (*StoragePool) ProtoMessage()    {}
func (*StoragePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{1}
}
func (m *StoragePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoragePool.Unmarshal(m, b)
}
func (m *StoragePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoragePool.Marshal(b, m, deterministic)
}
func (dst *StoragePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoragePool.Merge(dst, src)
}
func (m *StoragePool) XXX_Size() int {
	return xxx_messageInfo_StoragePool.Size(m)
}
func (m *StoragePool) XXX_DiscardUnknown() {
	xxx_messageInfo_StoragePool.DiscardUnknown(m)
}

var xxx_messageInfo_StoragePool proto.InternalMessageInfo

func (m *StoragePool) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *StoragePool) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *StoragePool) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StoragePool) GetRaidLevel() string {
	if m != nil {
		return m.RaidLevel
	}
	return ""
}

func (m *StoragePool) GetTotalSize() uint64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *StoragePool) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StoragePool) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// VolumeLocator is a structure that is attached to a volume
// and is used to carry opaque metadata.
// swagger:model
type VolumeLocator struct {
	// User friendly identifier
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A set of name-value pairs that acts as search filters
	VolumeLabels         map[string]string `protobuf:"bytes,2,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeLocator) Reset()         { *m = VolumeLocator{} }
func (m *VolumeLocator) String() string { return proto.CompactTextString(m) }
func (*VolumeLocator) ProtoMessage()    {}
func (*VolumeLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{2}
}
func (m *VolumeLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeLocator.Unmarshal(m, b)
}
func (m *VolumeLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeLocator.Marshal(b, m, deterministic)
}
func (dst *VolumeLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeLocator.Merge(dst, src)
}
func (m *VolumeLocator) XXX_Size() int {
	return xxx_messageInfo_VolumeLocator.Size(m)
}
func (m *VolumeLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeLocator.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeLocator proto.InternalMessageInfo

func (m *VolumeLocator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeLocator) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

// Source is a structure that can be given to a volume
// to seed the volume with data.
// swagger:model
type Source struct {
	// A volume id, if specified will create a clone of the parent.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Seed will seed the volume from the specified URI
	// Any additional config for the source comes from the labels in the spec
	Seed                 string   `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{3}
}
func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (dst *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(dst, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Source) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

// Group represents VolumeGroup / namespace
// All volumes in the same group share this object.
// swagger:model
type Group struct {
	// Id common identifier across volumes that have the same group.
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{4}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// VolumeSpec has the properties needed to create a volume.
// swagger:model
type VolumeSpec struct {
	// Ephemeral storage
	Ephemeral bool `protobuf:"varint,1,opt,name=ephemeral" json:"ephemeral,omitempty"`
	// Size specifies the thin provisioned volume size in bytes
	Size uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	// Format specifies the filesystem for this volume.
	Format FSType `protobuf:"varint,3,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// BlockSize for the filesystem.
	BlockSize int64 `protobuf:"varint,4,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	// HaLevel specifies the number of copies of data.
	HaLevel int64 `protobuf:"varint,5,opt,name=ha_level,json=haLevel" json:"ha_level,omitempty"`
	// Cos specifies the relative class of service.
	Cos CosType `protobuf:"varint,6,opt,name=cos,enum=openstorage.api.CosType" json:"cos,omitempty"`
	// IoProfile provides a hint about application using this volume.
	IoProfile IoProfile `protobuf:"varint,7,opt,name=io_profile,json=ioProfile,enum=openstorage.api.IoProfile" json:"io_profile,omitempty"`
	// Dedupe specifies if the volume data is to be de-duplicated.
	Dedupe bool `protobuf:"varint,8,opt,name=dedupe" json:"dedupe,omitempty"`
	// SnapshotInterval in minutes, set to 0 to disable snapshots
	SnapshotInterval uint32 `protobuf:"varint,9,opt,name=snapshot_interval,json=snapshotInterval" json:"snapshot_interval,omitempty"`
	// VolumeLabels configuration labels
	VolumeLabels map[string]string `protobuf:"bytes,10,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Shared is true if this volume can be remotely accessed.
	Shared bool `protobuf:"varint,11,opt,name=shared" json:"shared,omitempty"`
	// ReplicaSet is the desired set of nodes for the volume data.
	ReplicaSet *ReplicaSet `protobuf:"bytes,12,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
	// Aggregatiokn level Specifies the number of parts the volume can be aggregated from.
	AggregationLevel uint32 `protobuf:"varint,13,opt,name=aggregation_level,json=aggregationLevel" json:"aggregation_level,omitempty"`
	// Encrypted is true if this volume will be cryptographically secured.
	Encrypted bool `protobuf:"varint,14,opt,name=encrypted" json:"encrypted,omitempty"`
	// Passphrase for an encrypted volume
	Passphrase string `protobuf:"bytes,15,opt,name=passphrase" json:"passphrase,omitempty"`
	// SnapshotSchedule a well known string that specifies when snapshots should be taken.
	SnapshotSchedule string `protobuf:"bytes,16,opt,name=snapshot_schedule,json=snapshotSchedule" json:"snapshot_schedule,omitempty"`
	// Scale allows autocreation of volumes.
	Scale uint32 `protobuf:"varint,17,opt,name=scale" json:"scale,omitempty"`
	// Sticky volumes cannot be deleted until the flag is removed.
	Sticky bool `protobuf:"varint,18,opt,name=sticky" json:"sticky,omitempty"`
	// Group identifies a consistency group
	Group *Group `protobuf:"bytes,21,opt,name=group" json:"group,omitempty"`
	// GroupEnforced is true if consistency group creation is enforced.
	GroupEnforced bool `protobuf:"varint,22,opt,name=group_enforced,json=groupEnforced" json:"group_enforced,omitempty"`
	// Compressed is true if this volume is to be compressed.
	Compressed bool `protobuf:"varint,23,opt,name=compressed" json:"compressed,omitempty"`
	// Cascaded is true if this volume can be populated on any node from an external source.
	Cascaded bool `protobuf:"varint,24,opt,name=cascaded" json:"cascaded,omitempty"`
	// Journal is true if data for the volume goes into the journal.
	Journal bool `protobuf:"varint,25,opt,name=journal" json:"journal,omitempty"`
	// Sharedv4 is true if this volume can be accessed via sharedv4.
	Sharedv4             bool     `protobuf:"varint,26,opt,name=sharedv4" json:"sharedv4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSpec) Reset()         { *m = VolumeSpec{} }
func (m *VolumeSpec) String() string { return proto.CompactTextString(m) }
func (*VolumeSpec) ProtoMessage()    {}
func (*VolumeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{5}
}
func (m *VolumeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpec.Unmarshal(m, b)
}
func (m *VolumeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpec.Marshal(b, m, deterministic)
}
func (dst *VolumeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpec.Merge(dst, src)
}
func (m *VolumeSpec) XXX_Size() int {
	return xxx_messageInfo_VolumeSpec.Size(m)
}
func (m *VolumeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpec proto.InternalMessageInfo

func (m *VolumeSpec) GetEphemeral() bool {
	if m != nil {
		return m.Ephemeral
	}
	return false
}

func (m *VolumeSpec) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VolumeSpec) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *VolumeSpec) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *VolumeSpec) GetHaLevel() int64 {
	if m != nil {
		return m.HaLevel
	}
	return 0
}

func (m *VolumeSpec) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *VolumeSpec) GetIoProfile() IoProfile {
	if m != nil {
		return m.IoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *VolumeSpec) GetDedupe() bool {
	if m != nil {
		return m.Dedupe
	}
	return false
}

func (m *VolumeSpec) GetSnapshotInterval() uint32 {
	if m != nil {
		return m.SnapshotInterval
	}
	return 0
}

func (m *VolumeSpec) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

func (m *VolumeSpec) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

func (m *VolumeSpec) GetReplicaSet() *ReplicaSet {
	if m != nil {
		return m.ReplicaSet
	}
	return nil
}

func (m *VolumeSpec) GetAggregationLevel() uint32 {
	if m != nil {
		return m.AggregationLevel
	}
	return 0
}

func (m *VolumeSpec) GetEncrypted() bool {
	if m != nil {
		return m.Encrypted
	}
	return false
}

func (m *VolumeSpec) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *VolumeSpec) GetSnapshotSchedule() string {
	if m != nil {
		return m.SnapshotSchedule
	}
	return ""
}

func (m *VolumeSpec) GetScale() uint32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *VolumeSpec) GetSticky() bool {
	if m != nil {
		return m.Sticky
	}
	return false
}

func (m *VolumeSpec) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *VolumeSpec) GetGroupEnforced() bool {
	if m != nil {
		return m.GroupEnforced
	}
	return false
}

func (m *VolumeSpec) GetCompressed() bool {
	if m != nil {
		return m.Compressed
	}
	return false
}

func (m *VolumeSpec) GetCascaded() bool {
	if m != nil {
		return m.Cascaded
	}
	return false
}

func (m *VolumeSpec) GetJournal() bool {
	if m != nil {
		return m.Journal
	}
	return false
}

func (m *VolumeSpec) GetSharedv4() bool {
	if m != nil {
		return m.Sharedv4
	}
	return false
}

// VolumeSpecSet provides a method to set any of the VolumeSpec of an existing volume
type VolumeSpecSet struct {
	// Ephemeral storage
	//
	// Types that are valid to be assigned to EphemeralOpt:
	//	*VolumeSpecSet_Ephemeral
	EphemeralOpt isVolumeSpecSet_EphemeralOpt `protobuf_oneof:"ephemeral_opt"`
	// Size specifies the thin provisioned volume size in bytes
	//
	// Types that are valid to be assigned to SizeOpt:
	//	*VolumeSpecSet_Size
	SizeOpt isVolumeSpecSet_SizeOpt `protobuf_oneof:"size_opt"`
	// Format specifies the filesystem for this volume.
	//
	// Types that are valid to be assigned to FormatOpt:
	//	*VolumeSpecSet_Format
	FormatOpt isVolumeSpecSet_FormatOpt `protobuf_oneof:"format_opt"`
	// BlockSize for the filesystem.
	//
	// Types that are valid to be assigned to BlockSizeOpt:
	//	*VolumeSpecSet_BlockSize
	BlockSizeOpt isVolumeSpecSet_BlockSizeOpt `protobuf_oneof:"block_size_opt"`
	// HaLevel specifies the number of copies of data.
	//
	// Types that are valid to be assigned to HaLevelOpt:
	//	*VolumeSpecSet_HaLevel
	HaLevelOpt isVolumeSpecSet_HaLevelOpt `protobuf_oneof:"ha_level_opt"`
	// Cos specifies the relative class of service.
	//
	// Types that are valid to be assigned to CosOpt:
	//	*VolumeSpecSet_Cos
	CosOpt isVolumeSpecSet_CosOpt `protobuf_oneof:"cos_opt"`
	// IoProfile provides a hint about application using this volume.
	//
	// Types that are valid to be assigned to IoProfileOpt:
	//	*VolumeSpecSet_IoProfile
	IoProfileOpt isVolumeSpecSet_IoProfileOpt `protobuf_oneof:"io_profile_opt"`
	// Dedupe specifies if the volume data is to be de-duplicated.
	//
	// Types that are valid to be assigned to DedupeOpt:
	//	*VolumeSpecSet_Dedupe
	DedupeOpt isVolumeSpecSet_DedupeOpt `protobuf_oneof:"dedupe_opt"`
	// SnapshotInterval in minutes, set to 0 to disable snapshots
	//
	// Types that are valid to be assigned to SnapshotIntervalOpt:
	//	*VolumeSpecSet_SnapshotInterval
	SnapshotIntervalOpt isVolumeSpecSet_SnapshotIntervalOpt `protobuf_oneof:"snapshot_interval_opt"`
	// VolumeLabels configuration labels
	VolumeLabels map[string]string `protobuf:"bytes,10,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Shared is true if this volume can be remotely accessed.
	//
	// Types that are valid to be assigned to SharedOpt:
	//	*VolumeSpecSet_Shared
	SharedOpt isVolumeSpecSet_SharedOpt `protobuf_oneof:"shared_opt"`
	// ReplicaSet is the desired set of nodes for the volume data.
	ReplicaSet *ReplicaSet `protobuf:"bytes,12,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
	// Aggregatiokn level Specifies the number of parts the volume can be aggregated from.
	//
	// Types that are valid to be assigned to AggregationLevelOpt:
	//	*VolumeSpecSet_AggregationLevel
	AggregationLevelOpt isVolumeSpecSet_AggregationLevelOpt `protobuf_oneof:"aggregation_level_opt"`
	// Encrypted is true if this volume will be cryptographically secured.
	//
	// Types that are valid to be assigned to EncryptedOpt:
	//	*VolumeSpecSet_Encrypted
	EncryptedOpt isVolumeSpecSet_EncryptedOpt `protobuf_oneof:"encrypted_opt"`
	// Passphrase for an encrypted volume
	//
	// Types that are valid to be assigned to PassphraseOpt:
	//	*VolumeSpecSet_Passphrase
	PassphraseOpt isVolumeSpecSet_PassphraseOpt `protobuf_oneof:"passphrase_opt"`
	// SnapshotSchedule a well known string that specifies when snapshots should be taken.
	//
	// Types that are valid to be assigned to SnapshotScheduleOpt:
	//	*VolumeSpecSet_SnapshotSchedule
	SnapshotScheduleOpt isVolumeSpecSet_SnapshotScheduleOpt `protobuf_oneof:"snapshot_schedule_opt"`
	// Scale allows autocreation of volumes.
	//
	// Types that are valid to be assigned to ScaleOpt:
	//	*VolumeSpecSet_Scale
	ScaleOpt isVolumeSpecSet_ScaleOpt `protobuf_oneof:"scale_opt"`
	// Sticky volumes cannot be deleted until the flag is removed.
	//
	// Types that are valid to be assigned to StickyOpt:
	//	*VolumeSpecSet_Sticky
	StickyOpt isVolumeSpecSet_StickyOpt `protobuf_oneof:"sticky_opt"`
	// Group identifies a consistency group
	//
	// Types that are valid to be assigned to GroupOpt:
	//	*VolumeSpecSet_Group
	GroupOpt isVolumeSpecSet_GroupOpt `protobuf_oneof:"group_opt"`
	// GroupEnforced is true if consistency group creation is enforced.
	//
	// Types that are valid to be assigned to GroupEnforcedOpt:
	//	*VolumeSpecSet_GroupEnforced
	GroupEnforcedOpt isVolumeSpecSet_GroupEnforcedOpt `protobuf_oneof:"group_enforced_opt"`
	// Compressed is true if this volume is to be compressed.
	//
	// Types that are valid to be assigned to CompressedOpt:
	//	*VolumeSpecSet_Compressed
	CompressedOpt isVolumeSpecSet_CompressedOpt `protobuf_oneof:"compressed_opt"`
	// Cascaded is true if this volume can be populated on any node from an external source.
	//
	// Types that are valid to be assigned to CascadedOpt:
	//	*VolumeSpecSet_Cascaded
	CascadedOpt isVolumeSpecSet_CascadedOpt `protobuf_oneof:"cascaded_opt"`
	// Journal is true if data for the volume goes into the journal.
	//
	// Types that are valid to be assigned to JournalOpt:
	//	*VolumeSpecSet_Journal
	JournalOpt isVolumeSpecSet_JournalOpt `protobuf_oneof:"journal_opt"`
	// Sharedv4 is true if this volume can be accessed via sharedv4.
	//
	// Types that are valid to be assigned to Sharedv4Opt:
	//	*VolumeSpecSet_Sharedv4
	Sharedv4Opt          isVolumeSpecSet_Sharedv4Opt `protobuf_oneof:"sharedv4_opt"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *VolumeSpecSet) Reset()         { *m = VolumeSpecSet{} }
func (m *VolumeSpecSet) String() string { return proto.CompactTextString(m) }
func (*VolumeSpecSet) ProtoMessage()    {}
func (*VolumeSpecSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{6}
}
func (m *VolumeSpecSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpecSet.Unmarshal(m, b)
}
func (m *VolumeSpecSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpecSet.Marshal(b, m, deterministic)
}
func (dst *VolumeSpecSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpecSet.Merge(dst, src)
}
func (m *VolumeSpecSet) XXX_Size() int {
	return xxx_messageInfo_VolumeSpecSet.Size(m)
}
func (m *VolumeSpecSet) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpecSet.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpecSet proto.InternalMessageInfo

type isVolumeSpecSet_EphemeralOpt interface {
	isVolumeSpecSet_EphemeralOpt()
}
type isVolumeSpecSet_SizeOpt interface {
	isVolumeSpecSet_SizeOpt()
}
type isVolumeSpecSet_FormatOpt interface {
	isVolumeSpecSet_FormatOpt()
}
type isVolumeSpecSet_BlockSizeOpt interface {
	isVolumeSpecSet_BlockSizeOpt()
}
type isVolumeSpecSet_HaLevelOpt interface {
	isVolumeSpecSet_HaLevelOpt()
}
type isVolumeSpecSet_CosOpt interface {
	isVolumeSpecSet_CosOpt()
}
type isVolumeSpecSet_IoProfileOpt interface {
	isVolumeSpecSet_IoProfileOpt()
}
type isVolumeSpecSet_DedupeOpt interface {
	isVolumeSpecSet_DedupeOpt()
}
type isVolumeSpecSet_SnapshotIntervalOpt interface {
	isVolumeSpecSet_SnapshotIntervalOpt()
}
type isVolumeSpecSet_SharedOpt interface {
	isVolumeSpecSet_SharedOpt()
}
type isVolumeSpecSet_AggregationLevelOpt interface {
	isVolumeSpecSet_AggregationLevelOpt()
}
type isVolumeSpecSet_EncryptedOpt interface {
	isVolumeSpecSet_EncryptedOpt()
}
type isVolumeSpecSet_PassphraseOpt interface {
	isVolumeSpecSet_PassphraseOpt()
}
type isVolumeSpecSet_SnapshotScheduleOpt interface {
	isVolumeSpecSet_SnapshotScheduleOpt()
}
type isVolumeSpecSet_ScaleOpt interface {
	isVolumeSpecSet_ScaleOpt()
}
type isVolumeSpecSet_StickyOpt interface {
	isVolumeSpecSet_StickyOpt()
}
type isVolumeSpecSet_GroupOpt interface {
	isVolumeSpecSet_GroupOpt()
}
type isVolumeSpecSet_GroupEnforcedOpt interface {
	isVolumeSpecSet_GroupEnforcedOpt()
}
type isVolumeSpecSet_CompressedOpt interface {
	isVolumeSpecSet_CompressedOpt()
}
type isVolumeSpecSet_CascadedOpt interface {
	isVolumeSpecSet_CascadedOpt()
}
type isVolumeSpecSet_JournalOpt interface {
	isVolumeSpecSet_JournalOpt()
}
type isVolumeSpecSet_Sharedv4Opt interface {
	isVolumeSpecSet_Sharedv4Opt()
}

type VolumeSpecSet_Ephemeral struct {
	Ephemeral bool `protobuf:"varint,1,opt,name=ephemeral,oneof"`
}
type VolumeSpecSet_Size struct {
	Size uint64 `protobuf:"varint,2,opt,name=size,oneof"`
}
type VolumeSpecSet_Format struct {
	Format FSType `protobuf:"varint,3,opt,name=format,enum=openstorage.api.FSType,oneof"`
}
type VolumeSpecSet_BlockSize struct {
	BlockSize int64 `protobuf:"varint,4,opt,name=block_size,json=blockSize,oneof"`
}
type VolumeSpecSet_HaLevel struct {
	HaLevel int64 `protobuf:"varint,5,opt,name=ha_level,json=haLevel,oneof"`
}
type VolumeSpecSet_Cos struct {
	Cos CosType `protobuf:"varint,6,opt,name=cos,enum=openstorage.api.CosType,oneof"`
}
type VolumeSpecSet_IoProfile struct {
	IoProfile IoProfile `protobuf:"varint,7,opt,name=io_profile,json=ioProfile,enum=openstorage.api.IoProfile,oneof"`
}
type VolumeSpecSet_Dedupe struct {
	Dedupe bool `protobuf:"varint,8,opt,name=dedupe,oneof"`
}
type VolumeSpecSet_SnapshotInterval struct {
	SnapshotInterval uint32 `protobuf:"varint,9,opt,name=snapshot_interval,json=snapshotInterval,oneof"`
}
type VolumeSpecSet_Shared struct {
	Shared bool `protobuf:"varint,11,opt,name=shared,oneof"`
}
type VolumeSpecSet_AggregationLevel struct {
	AggregationLevel uint32 `protobuf:"varint,13,opt,name=aggregation_level,json=aggregationLevel,oneof"`
}
type VolumeSpecSet_Encrypted struct {
	Encrypted bool `protobuf:"varint,14,opt,name=encrypted,oneof"`
}
type VolumeSpecSet_Passphrase struct {
	Passphrase string `protobuf:"bytes,15,opt,name=passphrase,oneof"`
}
type VolumeSpecSet_SnapshotSchedule struct {
	SnapshotSchedule string `protobuf:"bytes,16,opt,name=snapshot_schedule,json=snapshotSchedule,oneof"`
}
type VolumeSpecSet_Scale struct {
	Scale uint32 `protobuf:"varint,17,opt,name=scale,oneof"`
}
type VolumeSpecSet_Sticky struct {
	Sticky bool `protobuf:"varint,18,opt,name=sticky,oneof"`
}
type VolumeSpecSet_Group struct {
	Group *Group `protobuf:"bytes,19,opt,name=group,oneof"`
}
type VolumeSpecSet_GroupEnforced struct {
	GroupEnforced bool `protobuf:"varint,20,opt,name=group_enforced,json=groupEnforced,oneof"`
}
type VolumeSpecSet_Compressed struct {
	Compressed bool `protobuf:"varint,21,opt,name=compressed,oneof"`
}
type VolumeSpecSet_Cascaded struct {
	Cascaded bool `protobuf:"varint,22,opt,name=cascaded,oneof"`
}
type VolumeSpecSet_Journal struct {
	Journal bool `protobuf:"varint,23,opt,name=journal,oneof"`
}
type VolumeSpecSet_Sharedv4 struct {
	Sharedv4 bool `protobuf:"varint,24,opt,name=sharedv4,oneof"`
}

func (*VolumeSpecSet_Ephemeral) isVolumeSpecSet_EphemeralOpt()               {}
func (*VolumeSpecSet_Size) isVolumeSpecSet_SizeOpt()                         {}
func (*VolumeSpecSet_Format) isVolumeSpecSet_FormatOpt()                     {}
func (*VolumeSpecSet_BlockSize) isVolumeSpecSet_BlockSizeOpt()               {}
func (*VolumeSpecSet_HaLevel) isVolumeSpecSet_HaLevelOpt()                   {}
func (*VolumeSpecSet_Cos) isVolumeSpecSet_CosOpt()                           {}
func (*VolumeSpecSet_IoProfile) isVolumeSpecSet_IoProfileOpt()               {}
func (*VolumeSpecSet_Dedupe) isVolumeSpecSet_DedupeOpt()                     {}
func (*VolumeSpecSet_SnapshotInterval) isVolumeSpecSet_SnapshotIntervalOpt() {}
func (*VolumeSpecSet_Shared) isVolumeSpecSet_SharedOpt()                     {}
func (*VolumeSpecSet_AggregationLevel) isVolumeSpecSet_AggregationLevelOpt() {}
func (*VolumeSpecSet_Encrypted) isVolumeSpecSet_EncryptedOpt()               {}
func (*VolumeSpecSet_Passphrase) isVolumeSpecSet_PassphraseOpt()             {}
func (*VolumeSpecSet_SnapshotSchedule) isVolumeSpecSet_SnapshotScheduleOpt() {}
func (*VolumeSpecSet_Scale) isVolumeSpecSet_ScaleOpt()                       {}
func (*VolumeSpecSet_Sticky) isVolumeSpecSet_StickyOpt()                     {}
func (*VolumeSpecSet_Group) isVolumeSpecSet_GroupOpt()                       {}
func (*VolumeSpecSet_GroupEnforced) isVolumeSpecSet_GroupEnforcedOpt()       {}
func (*VolumeSpecSet_Compressed) isVolumeSpecSet_CompressedOpt()             {}
func (*VolumeSpecSet_Cascaded) isVolumeSpecSet_CascadedOpt()                 {}
func (*VolumeSpecSet_Journal) isVolumeSpecSet_JournalOpt()                   {}
func (*VolumeSpecSet_Sharedv4) isVolumeSpecSet_Sharedv4Opt()                 {}

func (m *VolumeSpecSet) GetEphemeralOpt() isVolumeSpecSet_EphemeralOpt {
	if m != nil {
		return m.EphemeralOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetSizeOpt() isVolumeSpecSet_SizeOpt {
	if m != nil {
		return m.SizeOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetFormatOpt() isVolumeSpecSet_FormatOpt {
	if m != nil {
		return m.FormatOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetBlockSizeOpt() isVolumeSpecSet_BlockSizeOpt {
	if m != nil {
		return m.BlockSizeOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetHaLevelOpt() isVolumeSpecSet_HaLevelOpt {
	if m != nil {
		return m.HaLevelOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetCosOpt() isVolumeSpecSet_CosOpt {
	if m != nil {
		return m.CosOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetIoProfileOpt() isVolumeSpecSet_IoProfileOpt {
	if m != nil {
		return m.IoProfileOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetDedupeOpt() isVolumeSpecSet_DedupeOpt {
	if m != nil {
		return m.DedupeOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetSnapshotIntervalOpt() isVolumeSpecSet_SnapshotIntervalOpt {
	if m != nil {
		return m.SnapshotIntervalOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetSharedOpt() isVolumeSpecSet_SharedOpt {
	if m != nil {
		return m.SharedOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetAggregationLevelOpt() isVolumeSpecSet_AggregationLevelOpt {
	if m != nil {
		return m.AggregationLevelOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetEncryptedOpt() isVolumeSpecSet_EncryptedOpt {
	if m != nil {
		return m.EncryptedOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetPassphraseOpt() isVolumeSpecSet_PassphraseOpt {
	if m != nil {
		return m.PassphraseOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetSnapshotScheduleOpt() isVolumeSpecSet_SnapshotScheduleOpt {
	if m != nil {
		return m.SnapshotScheduleOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetScaleOpt() isVolumeSpecSet_ScaleOpt {
	if m != nil {
		return m.ScaleOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetStickyOpt() isVolumeSpecSet_StickyOpt {
	if m != nil {
		return m.StickyOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetGroupOpt() isVolumeSpecSet_GroupOpt {
	if m != nil {
		return m.GroupOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetGroupEnforcedOpt() isVolumeSpecSet_GroupEnforcedOpt {
	if m != nil {
		return m.GroupEnforcedOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetCompressedOpt() isVolumeSpecSet_CompressedOpt {
	if m != nil {
		return m.CompressedOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetCascadedOpt() isVolumeSpecSet_CascadedOpt {
	if m != nil {
		return m.CascadedOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetJournalOpt() isVolumeSpecSet_JournalOpt {
	if m != nil {
		return m.JournalOpt
	}
	return nil
}
func (m *VolumeSpecSet) GetSharedv4Opt() isVolumeSpecSet_Sharedv4Opt {
	if m != nil {
		return m.Sharedv4Opt
	}
	return nil
}

func (m *VolumeSpecSet) GetEphemeral() bool {
	if x, ok := m.GetEphemeralOpt().(*VolumeSpecSet_Ephemeral); ok {
		return x.Ephemeral
	}
	return false
}

func (m *VolumeSpecSet) GetSize() uint64 {
	if x, ok := m.GetSizeOpt().(*VolumeSpecSet_Size); ok {
		return x.Size
	}
	return 0
}

func (m *VolumeSpecSet) GetFormat() FSType {
	if x, ok := m.GetFormatOpt().(*VolumeSpecSet_Format); ok {
		return x.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *VolumeSpecSet) GetBlockSize() int64 {
	if x, ok := m.GetBlockSizeOpt().(*VolumeSpecSet_BlockSize); ok {
		return x.BlockSize
	}
	return 0
}

func (m *VolumeSpecSet) GetHaLevel() int64 {
	if x, ok := m.GetHaLevelOpt().(*VolumeSpecSet_HaLevel); ok {
		return x.HaLevel
	}
	return 0
}

func (m *VolumeSpecSet) GetCos() CosType {
	if x, ok := m.GetCosOpt().(*VolumeSpecSet_Cos); ok {
		return x.Cos
	}
	return CosType_NONE
}

func (m *VolumeSpecSet) GetIoProfile() IoProfile {
	if x, ok := m.GetIoProfileOpt().(*VolumeSpecSet_IoProfile); ok {
		return x.IoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *VolumeSpecSet) GetDedupe() bool {
	if x, ok := m.GetDedupeOpt().(*VolumeSpecSet_Dedupe); ok {
		return x.Dedupe
	}
	return false
}

func (m *VolumeSpecSet) GetSnapshotInterval() uint32 {
	if x, ok := m.GetSnapshotIntervalOpt().(*VolumeSpecSet_SnapshotInterval); ok {
		return x.SnapshotInterval
	}
	return 0
}

func (m *VolumeSpecSet) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

func (m *VolumeSpecSet) GetShared() bool {
	if x, ok := m.GetSharedOpt().(*VolumeSpecSet_Shared); ok {
		return x.Shared
	}
	return false
}

func (m *VolumeSpecSet) GetReplicaSet() *ReplicaSet {
	if m != nil {
		return m.ReplicaSet
	}
	return nil
}

func (m *VolumeSpecSet) GetAggregationLevel() uint32 {
	if x, ok := m.GetAggregationLevelOpt().(*VolumeSpecSet_AggregationLevel); ok {
		return x.AggregationLevel
	}
	return 0
}

func (m *VolumeSpecSet) GetEncrypted() bool {
	if x, ok := m.GetEncryptedOpt().(*VolumeSpecSet_Encrypted); ok {
		return x.Encrypted
	}
	return false
}

func (m *VolumeSpecSet) GetPassphrase() string {
	if x, ok := m.GetPassphraseOpt().(*VolumeSpecSet_Passphrase); ok {
		return x.Passphrase
	}
	return ""
}

func (m *VolumeSpecSet) GetSnapshotSchedule() string {
	if x, ok := m.GetSnapshotScheduleOpt().(*VolumeSpecSet_SnapshotSchedule); ok {
		return x.SnapshotSchedule
	}
	return ""
}

func (m *VolumeSpecSet) GetScale() uint32 {
	if x, ok := m.GetScaleOpt().(*VolumeSpecSet_Scale); ok {
		return x.Scale
	}
	return 0
}

func (m *VolumeSpecSet) GetSticky() bool {
	if x, ok := m.GetStickyOpt().(*VolumeSpecSet_Sticky); ok {
		return x.Sticky
	}
	return false
}

func (m *VolumeSpecSet) GetGroup() *Group {
	if x, ok := m.GetGroupOpt().(*VolumeSpecSet_Group); ok {
		return x.Group
	}
	return nil
}

func (m *VolumeSpecSet) GetGroupEnforced() bool {
	if x, ok := m.GetGroupEnforcedOpt().(*VolumeSpecSet_GroupEnforced); ok {
		return x.GroupEnforced
	}
	return false
}

func (m *VolumeSpecSet) GetCompressed() bool {
	if x, ok := m.GetCompressedOpt().(*VolumeSpecSet_Compressed); ok {
		return x.Compressed
	}
	return false
}

func (m *VolumeSpecSet) GetCascaded() bool {
	if x, ok := m.GetCascadedOpt().(*VolumeSpecSet_Cascaded); ok {
		return x.Cascaded
	}
	return false
}

func (m *VolumeSpecSet) GetJournal() bool {
	if x, ok := m.GetJournalOpt().(*VolumeSpecSet_Journal); ok {
		return x.Journal
	}
	return false
}

func (m *VolumeSpecSet) GetSharedv4() bool {
	if x, ok := m.GetSharedv4Opt().(*VolumeSpecSet_Sharedv4); ok {
		return x.Sharedv4
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VolumeSpecSet) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VolumeSpecSet_OneofMarshaler, _VolumeSpecSet_OneofUnmarshaler, _VolumeSpecSet_OneofSizer, []interface{}{
		(*VolumeSpecSet_Ephemeral)(nil),
		(*VolumeSpecSet_Size)(nil),
		(*VolumeSpecSet_Format)(nil),
		(*VolumeSpecSet_BlockSize)(nil),
		(*VolumeSpecSet_HaLevel)(nil),
		(*VolumeSpecSet_Cos)(nil),
		(*VolumeSpecSet_IoProfile)(nil),
		(*VolumeSpecSet_Dedupe)(nil),
		(*VolumeSpecSet_SnapshotInterval)(nil),
		(*VolumeSpecSet_Shared)(nil),
		(*VolumeSpecSet_AggregationLevel)(nil),
		(*VolumeSpecSet_Encrypted)(nil),
		(*VolumeSpecSet_Passphrase)(nil),
		(*VolumeSpecSet_SnapshotSchedule)(nil),
		(*VolumeSpecSet_Scale)(nil),
		(*VolumeSpecSet_Sticky)(nil),
		(*VolumeSpecSet_Group)(nil),
		(*VolumeSpecSet_GroupEnforced)(nil),
		(*VolumeSpecSet_Compressed)(nil),
		(*VolumeSpecSet_Cascaded)(nil),
		(*VolumeSpecSet_Journal)(nil),
		(*VolumeSpecSet_Sharedv4)(nil),
	}
}

func _VolumeSpecSet_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VolumeSpecSet)
	// ephemeral_opt
	switch x := m.EphemeralOpt.(type) {
	case *VolumeSpecSet_Ephemeral:
		t := uint64(0)
		if x.Ephemeral {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.EphemeralOpt has unexpected type %T", x)
	}
	// size_opt
	switch x := m.SizeOpt.(type) {
	case *VolumeSpecSet_Size:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Size))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.SizeOpt has unexpected type %T", x)
	}
	// format_opt
	switch x := m.FormatOpt.(type) {
	case *VolumeSpecSet_Format:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Format))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.FormatOpt has unexpected type %T", x)
	}
	// block_size_opt
	switch x := m.BlockSizeOpt.(type) {
	case *VolumeSpecSet_BlockSize:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.BlockSize))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.BlockSizeOpt has unexpected type %T", x)
	}
	// ha_level_opt
	switch x := m.HaLevelOpt.(type) {
	case *VolumeSpecSet_HaLevel:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.HaLevel))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.HaLevelOpt has unexpected type %T", x)
	}
	// cos_opt
	switch x := m.CosOpt.(type) {
	case *VolumeSpecSet_Cos:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Cos))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.CosOpt has unexpected type %T", x)
	}
	// io_profile_opt
	switch x := m.IoProfileOpt.(type) {
	case *VolumeSpecSet_IoProfile:
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IoProfile))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.IoProfileOpt has unexpected type %T", x)
	}
	// dedupe_opt
	switch x := m.DedupeOpt.(type) {
	case *VolumeSpecSet_Dedupe:
		t := uint64(0)
		if x.Dedupe {
			t = 1
		}
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.DedupeOpt has unexpected type %T", x)
	}
	// snapshot_interval_opt
	switch x := m.SnapshotIntervalOpt.(type) {
	case *VolumeSpecSet_SnapshotInterval:
		b.EncodeVarint(9<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SnapshotInterval))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.SnapshotIntervalOpt has unexpected type %T", x)
	}
	// shared_opt
	switch x := m.SharedOpt.(type) {
	case *VolumeSpecSet_Shared:
		t := uint64(0)
		if x.Shared {
			t = 1
		}
		b.EncodeVarint(11<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.SharedOpt has unexpected type %T", x)
	}
	// aggregation_level_opt
	switch x := m.AggregationLevelOpt.(type) {
	case *VolumeSpecSet_AggregationLevel:
		b.EncodeVarint(13<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.AggregationLevel))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.AggregationLevelOpt has unexpected type %T", x)
	}
	// encrypted_opt
	switch x := m.EncryptedOpt.(type) {
	case *VolumeSpecSet_Encrypted:
		t := uint64(0)
		if x.Encrypted {
			t = 1
		}
		b.EncodeVarint(14<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.EncryptedOpt has unexpected type %T", x)
	}
	// passphrase_opt
	switch x := m.PassphraseOpt.(type) {
	case *VolumeSpecSet_Passphrase:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Passphrase)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.PassphraseOpt has unexpected type %T", x)
	}
	// snapshot_schedule_opt
	switch x := m.SnapshotScheduleOpt.(type) {
	case *VolumeSpecSet_SnapshotSchedule:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.SnapshotSchedule)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.SnapshotScheduleOpt has unexpected type %T", x)
	}
	// scale_opt
	switch x := m.ScaleOpt.(type) {
	case *VolumeSpecSet_Scale:
		b.EncodeVarint(17<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Scale))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.ScaleOpt has unexpected type %T", x)
	}
	// sticky_opt
	switch x := m.StickyOpt.(type) {
	case *VolumeSpecSet_Sticky:
		t := uint64(0)
		if x.Sticky {
			t = 1
		}
		b.EncodeVarint(18<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.StickyOpt has unexpected type %T", x)
	}
	// group_opt
	switch x := m.GroupOpt.(type) {
	case *VolumeSpecSet_Group:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Group); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.GroupOpt has unexpected type %T", x)
	}
	// group_enforced_opt
	switch x := m.GroupEnforcedOpt.(type) {
	case *VolumeSpecSet_GroupEnforced:
		t := uint64(0)
		if x.GroupEnforced {
			t = 1
		}
		b.EncodeVarint(20<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.GroupEnforcedOpt has unexpected type %T", x)
	}
	// compressed_opt
	switch x := m.CompressedOpt.(type) {
	case *VolumeSpecSet_Compressed:
		t := uint64(0)
		if x.Compressed {
			t = 1
		}
		b.EncodeVarint(21<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.CompressedOpt has unexpected type %T", x)
	}
	// cascaded_opt
	switch x := m.CascadedOpt.(type) {
	case *VolumeSpecSet_Cascaded:
		t := uint64(0)
		if x.Cascaded {
			t = 1
		}
		b.EncodeVarint(22<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.CascadedOpt has unexpected type %T", x)
	}
	// journal_opt
	switch x := m.JournalOpt.(type) {
	case *VolumeSpecSet_Journal:
		t := uint64(0)
		if x.Journal {
			t = 1
		}
		b.EncodeVarint(23<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.JournalOpt has unexpected type %T", x)
	}
	// sharedv4_opt
	switch x := m.Sharedv4Opt.(type) {
	case *VolumeSpecSet_Sharedv4:
		t := uint64(0)
		if x.Sharedv4 {
			t = 1
		}
		b.EncodeVarint(24<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecSet.Sharedv4Opt has unexpected type %T", x)
	}
	return nil
}

func _VolumeSpecSet_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VolumeSpecSet)
	switch tag {
	case 1: // ephemeral_opt.ephemeral
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EphemeralOpt = &VolumeSpecSet_Ephemeral{x != 0}
		return true, err
	case 2: // size_opt.size
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SizeOpt = &VolumeSpecSet_Size{x}
		return true, err
	case 3: // format_opt.format
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FormatOpt = &VolumeSpecSet_Format{FSType(x)}
		return true, err
	case 4: // block_size_opt.block_size
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.BlockSizeOpt = &VolumeSpecSet_BlockSize{int64(x)}
		return true, err
	case 5: // ha_level_opt.ha_level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HaLevelOpt = &VolumeSpecSet_HaLevel{int64(x)}
		return true, err
	case 6: // cos_opt.cos
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CosOpt = &VolumeSpecSet_Cos{CosType(x)}
		return true, err
	case 7: // io_profile_opt.io_profile
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IoProfileOpt = &VolumeSpecSet_IoProfile{IoProfile(x)}
		return true, err
	case 8: // dedupe_opt.dedupe
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.DedupeOpt = &VolumeSpecSet_Dedupe{x != 0}
		return true, err
	case 9: // snapshot_interval_opt.snapshot_interval
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SnapshotIntervalOpt = &VolumeSpecSet_SnapshotInterval{uint32(x)}
		return true, err
	case 11: // shared_opt.shared
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SharedOpt = &VolumeSpecSet_Shared{x != 0}
		return true, err
	case 13: // aggregation_level_opt.aggregation_level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.AggregationLevelOpt = &VolumeSpecSet_AggregationLevel{uint32(x)}
		return true, err
	case 14: // encrypted_opt.encrypted
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EncryptedOpt = &VolumeSpecSet_Encrypted{x != 0}
		return true, err
	case 15: // passphrase_opt.passphrase
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PassphraseOpt = &VolumeSpecSet_Passphrase{x}
		return true, err
	case 16: // snapshot_schedule_opt.snapshot_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.SnapshotScheduleOpt = &VolumeSpecSet_SnapshotSchedule{x}
		return true, err
	case 17: // scale_opt.scale
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ScaleOpt = &VolumeSpecSet_Scale{uint32(x)}
		return true, err
	case 18: // sticky_opt.sticky
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StickyOpt = &VolumeSpecSet_Sticky{x != 0}
		return true, err
	case 19: // group_opt.group
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Group)
		err := b.DecodeMessage(msg)
		m.GroupOpt = &VolumeSpecSet_Group{msg}
		return true, err
	case 20: // group_enforced_opt.group_enforced
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.GroupEnforcedOpt = &VolumeSpecSet_GroupEnforced{x != 0}
		return true, err
	case 21: // compressed_opt.compressed
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CompressedOpt = &VolumeSpecSet_Compressed{x != 0}
		return true, err
	case 22: // cascaded_opt.cascaded
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CascadedOpt = &VolumeSpecSet_Cascaded{x != 0}
		return true, err
	case 23: // journal_opt.journal
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.JournalOpt = &VolumeSpecSet_Journal{x != 0}
		return true, err
	case 24: // sharedv4_opt.sharedv4
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Sharedv4Opt = &VolumeSpecSet_Sharedv4{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _VolumeSpecSet_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VolumeSpecSet)
	// ephemeral_opt
	switch x := m.EphemeralOpt.(type) {
	case *VolumeSpecSet_Ephemeral:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// size_opt
	switch x := m.SizeOpt.(type) {
	case *VolumeSpecSet_Size:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Size))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// format_opt
	switch x := m.FormatOpt.(type) {
	case *VolumeSpecSet_Format:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Format))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// block_size_opt
	switch x := m.BlockSizeOpt.(type) {
	case *VolumeSpecSet_BlockSize:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.BlockSize))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ha_level_opt
	switch x := m.HaLevelOpt.(type) {
	case *VolumeSpecSet_HaLevel:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.HaLevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cos_opt
	switch x := m.CosOpt.(type) {
	case *VolumeSpecSet_Cos:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Cos))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// io_profile_opt
	switch x := m.IoProfileOpt.(type) {
	case *VolumeSpecSet_IoProfile:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.IoProfile))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// dedupe_opt
	switch x := m.DedupeOpt.(type) {
	case *VolumeSpecSet_Dedupe:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// snapshot_interval_opt
	switch x := m.SnapshotIntervalOpt.(type) {
	case *VolumeSpecSet_SnapshotInterval:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.SnapshotInterval))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// shared_opt
	switch x := m.SharedOpt.(type) {
	case *VolumeSpecSet_Shared:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// aggregation_level_opt
	switch x := m.AggregationLevelOpt.(type) {
	case *VolumeSpecSet_AggregationLevel:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.AggregationLevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// encrypted_opt
	switch x := m.EncryptedOpt.(type) {
	case *VolumeSpecSet_Encrypted:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passphrase_opt
	switch x := m.PassphraseOpt.(type) {
	case *VolumeSpecSet_Passphrase:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Passphrase)))
		n += len(x.Passphrase)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// snapshot_schedule_opt
	switch x := m.SnapshotScheduleOpt.(type) {
	case *VolumeSpecSet_SnapshotSchedule:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.SnapshotSchedule)))
		n += len(x.SnapshotSchedule)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// scale_opt
	switch x := m.ScaleOpt.(type) {
	case *VolumeSpecSet_Scale:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.Scale))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sticky_opt
	switch x := m.StickyOpt.(type) {
	case *VolumeSpecSet_Sticky:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// group_opt
	switch x := m.GroupOpt.(type) {
	case *VolumeSpecSet_Group:
		s := proto.Size(x.Group)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// group_enforced_opt
	switch x := m.GroupEnforcedOpt.(type) {
	case *VolumeSpecSet_GroupEnforced:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// compressed_opt
	switch x := m.CompressedOpt.(type) {
	case *VolumeSpecSet_Compressed:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cascaded_opt
	switch x := m.CascadedOpt.(type) {
	case *VolumeSpecSet_Cascaded:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// journal_opt
	switch x := m.JournalOpt.(type) {
	case *VolumeSpecSet_Journal:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_opt
	switch x := m.Sharedv4Opt.(type) {
	case *VolumeSpecSet_Sharedv4:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// ReplicaSet set of machine IDs (nodes) to which part of this volume is erasure
// coded - for clustered storage arrays
// swagger:model
type ReplicaSet struct {
	Nodes                []string `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaSet) Reset()         { *m = ReplicaSet{} }
func (m *ReplicaSet) String() string { return proto.CompactTextString(m) }
func (*ReplicaSet) ProtoMessage()    {}
func (*ReplicaSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{7}
}
func (m *ReplicaSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSet.Unmarshal(m, b)
}
func (m *ReplicaSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSet.Marshal(b, m, deterministic)
}
func (dst *ReplicaSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSet.Merge(dst, src)
}
func (m *ReplicaSet) XXX_Size() int {
	return xxx_messageInfo_ReplicaSet.Size(m)
}
func (m *ReplicaSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSet.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSet proto.InternalMessageInfo

func (m *ReplicaSet) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// RuntimeStateMap is a list of name value mapping of driver specific runtime
// information.
// swagger:model
type RuntimeStateMap struct {
	RuntimeState         map[string]string `protobuf:"bytes,1,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RuntimeStateMap) Reset()         { *m = RuntimeStateMap{} }
func (m *RuntimeStateMap) String() string { return proto.CompactTextString(m) }
func (*RuntimeStateMap) ProtoMessage()    {}
func (*RuntimeStateMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{8}
}
func (m *RuntimeStateMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeStateMap.Unmarshal(m, b)
}
func (m *RuntimeStateMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeStateMap.Marshal(b, m, deterministic)
}
func (dst *RuntimeStateMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeStateMap.Merge(dst, src)
}
func (m *RuntimeStateMap) XXX_Size() int {
	return xxx_messageInfo_RuntimeStateMap.Size(m)
}
func (m *RuntimeStateMap) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeStateMap.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeStateMap proto.InternalMessageInfo

func (m *RuntimeStateMap) GetRuntimeState() map[string]string {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

// Volume represents an abstract storage volume.
// Volume represents an abstract storage volume.
// swagger:model
type Volume struct {
	// Self referential volume ID.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Source specified seed data for the volume.
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// Group volumes in the same group have the same group id.
	Group *Group `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	// Readonly is true if this volume is to be mounted with readonly access.
	Readonly bool `protobuf:"varint,4,opt,name=readonly" json:"readonly,omitempty"`
	// User specified locator
	Locator *VolumeLocator `protobuf:"bytes,5,opt,name=locator" json:"locator,omitempty"`
	// Volume creation time
	Ctime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=ctime" json:"ctime,omitempty"`
	// User specified VolumeSpec
	Spec *VolumeSpec `protobuf:"bytes,7,opt,name=spec" json:"spec,omitempty"`
	// Usage is bytes consumed by vtheis volume.
	Usage uint64 `protobuf:"varint,8,opt,name=usage" json:"usage,omitempty"`
	// LastScan is the time when an integrity check was run.
	LastScan *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// Format specifies the filesytem for this volume.
	Format FSType `protobuf:"varint,10,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// Status is the availability status of this volume.
	Status VolumeStatus `protobuf:"varint,11,opt,name=status,enum=openstorage.api.VolumeStatus" json:"status,omitempty"`
	// State is the current runtime state of this volume.
	State VolumeState `protobuf:"varint,12,opt,name=state,enum=openstorage.api.VolumeState" json:"state,omitempty"`
	// AttachedOn is the node instance identifier for clustered systems.
	AttachedOn string `protobuf:"bytes,13,opt,name=attached_on,json=attachedOn" json:"attached_on,omitempty"`
	// AttachedState shows whether the device is attached for internal or external use.
	AttachedState AttachState `protobuf:"varint,14,opt,name=attached_state,json=attachedState,enum=openstorage.api.AttachState" json:"attached_state,omitempty"`
	// DevicePath is the device exported by block device implementations.
	DevicePath string `protobuf:"bytes,15,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	// SecureDevicePath is the device path for an encrypted volume.
	SecureDevicePath string `protobuf:"bytes,16,opt,name=secure_device_path,json=secureDevicePath" json:"secure_device_path,omitempty"`
	// AttachPath is the mounted path in the host namespace.
	AttachPath []string `protobuf:"bytes,17,rep,name=attach_path,json=attachPath" json:"attach_path,omitempty"`
	// AttachInfo is a list of name value mappings that provides attach information.
	AttachInfo map[string]string `protobuf:"bytes,18,rep,name=attach_info,json=attachInfo" json:"attach_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ReplicatSets storage for this volumefor clustered storage arrays.
	ReplicaSets []*ReplicaSet `protobuf:"bytes,19,rep,name=replica_sets,json=replicaSets" json:"replica_sets,omitempty"`
	// RuntimeState is a lst of name value mapping of driver specific runtime
	// information.
	RuntimeState []*RuntimeStateMap `protobuf:"bytes,20,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty"`
	// Error is the Last recorded error.
	Error string `protobuf:"bytes,21,opt,name=error" json:"error,omitempty"`
	// VolumeConsumers are entities that consume this volume
	VolumeConsumers      []*VolumeConsumer `protobuf:"bytes,22,rep,name=volume_consumers,json=volumeConsumers" json:"volume_consumers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{9}
}
func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (dst *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(dst, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Volume) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Volume) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Volume) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *Volume) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *Volume) GetCtime() *timestamp.Timestamp {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Volume) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Volume) GetUsage() uint64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *Volume) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *Volume) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *Volume) GetStatus() VolumeStatus {
	if m != nil {
		return m.Status
	}
	return VolumeStatus_VOLUME_STATUS_NONE
}

func (m *Volume) GetState() VolumeState {
	if m != nil {
		return m.State
	}
	return VolumeState_VOLUME_STATE_NONE
}

func (m *Volume) GetAttachedOn() string {
	if m != nil {
		return m.AttachedOn
	}
	return ""
}

func (m *Volume) GetAttachedState() AttachState {
	if m != nil {
		return m.AttachedState
	}
	return AttachState_ATTACH_STATE_EXTERNAL
}

func (m *Volume) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

func (m *Volume) GetSecureDevicePath() string {
	if m != nil {
		return m.SecureDevicePath
	}
	return ""
}

func (m *Volume) GetAttachPath() []string {
	if m != nil {
		return m.AttachPath
	}
	return nil
}

func (m *Volume) GetAttachInfo() map[string]string {
	if m != nil {
		return m.AttachInfo
	}
	return nil
}

func (m *Volume) GetReplicaSets() []*ReplicaSet {
	if m != nil {
		return m.ReplicaSets
	}
	return nil
}

func (m *Volume) GetRuntimeState() []*RuntimeStateMap {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

func (m *Volume) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Volume) GetVolumeConsumers() []*VolumeConsumer {
	if m != nil {
		return m.VolumeConsumers
	}
	return nil
}

// Stats is a structure that represents last collected stats for a volume
// swagger:model
type Stats struct {
	// Reads completed successfully
	Reads uint64 `protobuf:"varint,1,opt,name=reads" json:"reads,omitempty"`
	// Time spent in reads in ms
	ReadMs    uint64 `protobuf:"varint,2,opt,name=read_ms,json=readMs" json:"read_ms,omitempty"`
	ReadBytes uint64 `protobuf:"varint,3,opt,name=read_bytes,json=readBytes" json:"read_bytes,omitempty"`
	// Writes completed successfully
	Writes uint64 `protobuf:"varint,4,opt,name=writes" json:"writes,omitempty"`
	// Time spent in writes in ms
	WriteMs    uint64 `protobuf:"varint,5,opt,name=write_ms,json=writeMs" json:"write_ms,omitempty"`
	WriteBytes uint64 `protobuf:"varint,6,opt,name=write_bytes,json=writeBytes" json:"write_bytes,omitempty"`
	// IOs curently in progress
	IoProgress uint64 `protobuf:"varint,7,opt,name=io_progress,json=ioProgress" json:"io_progress,omitempty"`
	// Time spent doing IOs ms
	IoMs uint64 `protobuf:"varint,8,opt,name=io_ms,json=ioMs" json:"io_ms,omitempty"`
	// BytesUsed
	BytesUsed uint64 `protobuf:"varint,9,opt,name=bytes_used,json=bytesUsed" json:"bytes_used,omitempty"`
	// Interval in ms during which stats were collected
	IntervalMs           uint64   `protobuf:"varint,10,opt,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{10}
}
func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (dst *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(dst, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetReads() uint64 {
	if m != nil {
		return m.Reads
	}
	return 0
}

func (m *Stats) GetReadMs() uint64 {
	if m != nil {
		return m.ReadMs
	}
	return 0
}

func (m *Stats) GetReadBytes() uint64 {
	if m != nil {
		return m.ReadBytes
	}
	return 0
}

func (m *Stats) GetWrites() uint64 {
	if m != nil {
		return m.Writes
	}
	return 0
}

func (m *Stats) GetWriteMs() uint64 {
	if m != nil {
		return m.WriteMs
	}
	return 0
}

func (m *Stats) GetWriteBytes() uint64 {
	if m != nil {
		return m.WriteBytes
	}
	return 0
}

func (m *Stats) GetIoProgress() uint64 {
	if m != nil {
		return m.IoProgress
	}
	return 0
}

func (m *Stats) GetIoMs() uint64 {
	if m != nil {
		return m.IoMs
	}
	return 0
}

func (m *Stats) GetBytesUsed() uint64 {
	if m != nil {
		return m.BytesUsed
	}
	return 0
}

func (m *Stats) GetIntervalMs() uint64 {
	if m != nil {
		return m.IntervalMs
	}
	return 0
}

// Alert is a structure that represents an alert object
// swagger:model
type Alert struct {
	// Id for Alert
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Severity of the Alert
	Severity SeverityType `protobuf:"varint,2,opt,name=severity,enum=openstorage.api.SeverityType" json:"severity,omitempty"`
	// AlertType user defined alert type
	AlertType int64 `protobuf:"varint,3,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	// Message describing the Alert
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	// Timestamp when Alert occured
	Timestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// ResourceId where Alert occured
	ResourceId string `protobuf:"bytes,6,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	// Resource where Alert occured
	Resource ResourceType `protobuf:"varint,7,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Cleared Flag
	Cleared bool `protobuf:"varint,8,opt,name=cleared" json:"cleared,omitempty"`
	// Time-to-live in seconds for this Alert
	Ttl uint64 `protobuf:"varint,9,opt,name=ttl" json:"ttl,omitempty"`
	// UniqueTag helps identify a unique alert for a given resouce
	UniqueTag string `protobuf:"bytes,10,opt,name=unique_tag,json=uniqueTag" json:"unique_tag,omitempty"`
	// Count of such alerts raised so far.
	Count int64 `protobuf:"varint,11,opt,name=count" json:"count,omitempty"`
	// Timestamp when such alert was raised the very first time.
	FirstSeen            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=first_seen,json=firstSeen" json:"first_seen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{11}
}
func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (dst *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(dst, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Alert) GetSeverity() SeverityType {
	if m != nil {
		return m.Severity
	}
	return SeverityType_SEVERITY_TYPE_NONE
}

func (m *Alert) GetAlertType() int64 {
	if m != nil {
		return m.AlertType
	}
	return 0
}

func (m *Alert) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Alert) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Alert) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Alert) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *Alert) GetCleared() bool {
	if m != nil {
		return m.Cleared
	}
	return false
}

func (m *Alert) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Alert) GetUniqueTag() string {
	if m != nil {
		return m.UniqueTag
	}
	return ""
}

func (m *Alert) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Alert) GetFirstSeen() *timestamp.Timestamp {
	if m != nil {
		return m.FirstSeen
	}
	return nil
}

// Alerts is an array of Alert objects
// swagger:model
type Alerts struct {
	Alert                []*Alert `protobuf:"bytes,1,rep,name=alert" json:"alert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alerts) Reset()         { *m = Alerts{} }
func (m *Alerts) String() string { return proto.CompactTextString(m) }
func (*Alerts) ProtoMessage()    {}
func (*Alerts) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{12}
}
func (m *Alerts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alerts.Unmarshal(m, b)
}
func (m *Alerts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alerts.Marshal(b, m, deterministic)
}
func (dst *Alerts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alerts.Merge(dst, src)
}
func (m *Alerts) XXX_Size() int {
	return xxx_messageInfo_Alerts.Size(m)
}
func (m *Alerts) XXX_DiscardUnknown() {
	xxx_messageInfo_Alerts.DiscardUnknown(m)
}

var xxx_messageInfo_Alerts proto.InternalMessageInfo

func (m *Alerts) GetAlert() []*Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

// ObjectstoreInfo is a structure that has current objectstore info
// swagger:model
type ObjectstoreInfo struct {
	// UUID of objectstore
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// VolumeID of volume used by object store
	VolumeId string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Enable/Disable created objectstore
	Enabled bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// Status of objectstore running/failed
	Status string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	// Action being taken on this objectstore
	Action int64 `protobuf:"varint,5,opt,name=action" json:"action,omitempty"`
	// AccessKey for login into objectstore
	AccessKey string `protobuf:"bytes,6,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// SecretKey for login into objectstore
	SecretKey string `protobuf:"bytes,7,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// Endpoints for accessing objectstore
	Endpoints []string `protobuf:"bytes,8,rep,name=endpoints" json:"endpoints,omitempty"`
	// CurrentEndpoint on which objectstore server is accessible
	CurrentEndpoint string `protobuf:"bytes,9,opt,name=current_endpoint,json=currentEndpoint" json:"current_endpoint,omitempty"`
	// AccessPort is objectstore server port
	AccessPort int64 `protobuf:"varint,10,opt,name=access_port,json=accessPort" json:"access_port,omitempty"`
	// Region for this objectstore
	Region               string   `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectstoreInfo) Reset()         { *m = ObjectstoreInfo{} }
func (m *ObjectstoreInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectstoreInfo) ProtoMessage()    {}
func (*ObjectstoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{13}
}
func (m *ObjectstoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectstoreInfo.Unmarshal(m, b)
}
func (m *ObjectstoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectstoreInfo.Marshal(b, m, deterministic)
}
func (dst *ObjectstoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectstoreInfo.Merge(dst, src)
}
func (m *ObjectstoreInfo) XXX_Size() int {
	return xxx_messageInfo_ObjectstoreInfo.Size(m)
}
func (m *ObjectstoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectstoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectstoreInfo proto.InternalMessageInfo

func (m *ObjectstoreInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ObjectstoreInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *ObjectstoreInfo) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ObjectstoreInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ObjectstoreInfo) GetAction() int64 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ObjectstoreInfo) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *ObjectstoreInfo) GetCurrentEndpoint() string {
	if m != nil {
		return m.CurrentEndpoint
	}
	return ""
}

func (m *ObjectstoreInfo) GetAccessPort() int64 {
	if m != nil {
		return m.AccessPort
	}
	return 0
}

func (m *ObjectstoreInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

// VolumeCreateRequest is a structure that has the locator, source and spec
// to create a volume
// swagger:model
type VolumeCreateRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// Source to create volume
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// The storage spec for the volume
	Spec                 *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeCreateRequest) Reset()         { *m = VolumeCreateRequest{} }
func (m *VolumeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateRequest) ProtoMessage()    {}
func (*VolumeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{14}
}
func (m *VolumeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateRequest.Unmarshal(m, b)
}
func (m *VolumeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateRequest.Merge(dst, src)
}
func (m *VolumeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateRequest.Size(m)
}
func (m *VolumeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateRequest proto.InternalMessageInfo

func (m *VolumeCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeCreateRequest) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *VolumeCreateRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// VolumeResponse is a structure that wraps an error.
// swagger:response volumeResponse
type VolumeResponse struct {
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeResponse) Reset()         { *m = VolumeResponse{} }
func (m *VolumeResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeResponse) ProtoMessage()    {}
func (*VolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{15}
}
func (m *VolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeResponse.Unmarshal(m, b)
}
func (m *VolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeResponse.Merge(dst, src)
}
func (m *VolumeResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeResponse.Size(m)
}
func (m *VolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeResponse proto.InternalMessageInfo

func (m *VolumeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// VolumeCreateResponse
// swagger:response volumeCreateResponse
type VolumeCreateResponse struct {
	// ID of the newly created volume
	//
	// in: body
	// Required: true
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Volume Response
	//
	// in: body
	// Required: true
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeCreateResponse) Reset()         { *m = VolumeCreateResponse{} }
func (m *VolumeCreateResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateResponse) ProtoMessage()    {}
func (*VolumeCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{16}
}
func (m *VolumeCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateResponse.Unmarshal(m, b)
}
func (m *VolumeCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateResponse.Merge(dst, src)
}
func (m *VolumeCreateResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateResponse.Size(m)
}
func (m *VolumeCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateResponse proto.InternalMessageInfo

func (m *VolumeCreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VolumeCreateResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// VolumeStateAction specifies desired actions.
// swagger:model
type VolumeStateAction struct {
	// Attach or Detach volume
	Attach VolumeActionParam `protobuf:"varint,1,opt,name=attach,enum=openstorage.api.VolumeActionParam" json:"attach,omitempty"`
	// Mount or unmount volume
	Mount VolumeActionParam `protobuf:"varint,2,opt,name=mount,enum=openstorage.api.VolumeActionParam" json:"mount,omitempty"`
	// MountPath Path where the device is mounted
	MountPath string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// DevicePath Path returned in attach
	DevicePath           string   `protobuf:"bytes,4,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeStateAction) Reset()         { *m = VolumeStateAction{} }
func (m *VolumeStateAction) String() string { return proto.CompactTextString(m) }
func (*VolumeStateAction) ProtoMessage()    {}
func (*VolumeStateAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{17}
}
func (m *VolumeStateAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeStateAction.Unmarshal(m, b)
}
func (m *VolumeStateAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeStateAction.Marshal(b, m, deterministic)
}
func (dst *VolumeStateAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeStateAction.Merge(dst, src)
}
func (m *VolumeStateAction) XXX_Size() int {
	return xxx_messageInfo_VolumeStateAction.Size(m)
}
func (m *VolumeStateAction) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeStateAction.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeStateAction proto.InternalMessageInfo

func (m *VolumeStateAction) GetAttach() VolumeActionParam {
	if m != nil {
		return m.Attach
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMount() VolumeActionParam {
	if m != nil {
		return m.Mount
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeStateAction) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

// VolumeSet specifies a request to update a volume.
// swagger:model
type VolumeSetRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// The storage spec for the volume
	Spec *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// State modification on this volume.
	Action *VolumeStateAction `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// additional options
	// required for the Set operation.
	Options              map[string]string `protobuf:"bytes,4,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeSetRequest) Reset()         { *m = VolumeSetRequest{} }
func (m *VolumeSetRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSetRequest) ProtoMessage()    {}
func (*VolumeSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{18}
}
func (m *VolumeSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetRequest.Unmarshal(m, b)
}
func (m *VolumeSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetRequest.Merge(dst, src)
}
func (m *VolumeSetRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSetRequest.Size(m)
}
func (m *VolumeSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetRequest proto.InternalMessageInfo

func (m *VolumeSetRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeSetRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VolumeSetRequest) GetAction() *VolumeStateAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *VolumeSetRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

// VolumeSetResponse
// swagger:response volumeSetResponse
type VolumeSetResponse struct {
	// Volume
	//
	// in: body
	// Required: true
	Volume *Volume `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
	// VolumeResponse
	//
	// in: body
	// Required: true
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeSetResponse) Reset()         { *m = VolumeSetResponse{} }
func (m *VolumeSetResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSetResponse) ProtoMessage()    {}
func (*VolumeSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{19}
}
func (m *VolumeSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetResponse.Unmarshal(m, b)
}
func (m *VolumeSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetResponse.Merge(dst, src)
}
func (m *VolumeSetResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSetResponse.Size(m)
}
func (m *VolumeSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetResponse proto.InternalMessageInfo

func (m *VolumeSetResponse) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *VolumeSetResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// SnapCreateRequest specifies a request to create a snapshot of given volume.
// swagger:parameters snapVolume
type SnapCreateRequest struct {
	// volume id
	Id                   string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Locator              *VolumeLocator `protobuf:"bytes,2,opt,name=locator" json:"locator,omitempty"`
	Readonly             bool           `protobuf:"varint,3,opt,name=readonly" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SnapCreateRequest) Reset()         { *m = SnapCreateRequest{} }
func (m *SnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SnapCreateRequest) ProtoMessage()    {}
func (*SnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{20}
}
func (m *SnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateRequest.Unmarshal(m, b)
}
func (m *SnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateRequest.Merge(dst, src)
}
func (m *SnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SnapCreateRequest.Size(m)
}
func (m *SnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateRequest proto.InternalMessageInfo

func (m *SnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SnapCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *SnapCreateRequest) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

// SnapCreateRequest specifies a response that get's returned when creating a snapshot.
// swagger:response snapCreateResponse
type SnapCreateResponse struct {
	// VolumeCreateResponse
	//
	// in: body
	// Required: true
	VolumeCreateResponse *VolumeCreateResponse `protobuf:"bytes,1,opt,name=volume_create_response,json=volumeCreateResponse" json:"volume_create_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SnapCreateResponse) Reset()         { *m = SnapCreateResponse{} }
func (m *SnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SnapCreateResponse) ProtoMessage()    {}
func (*SnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{21}
}
func (m *SnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateResponse.Unmarshal(m, b)
}
func (m *SnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateResponse.Merge(dst, src)
}
func (m *SnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SnapCreateResponse.Size(m)
}
func (m *SnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateResponse proto.InternalMessageInfo

func (m *SnapCreateResponse) GetVolumeCreateResponse() *VolumeCreateResponse {
	if m != nil {
		return m.VolumeCreateResponse
	}
	return nil
}

// VolumeInfo
// swagger:model
type VolumeInfo struct {
	VolumeId             string      `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	Path                 string      `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Storage              *VolumeSpec `protobuf:"bytes,3,opt,name=storage" json:"storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeInfo) Reset()         { *m = VolumeInfo{} }
func (m *VolumeInfo) String() string { return proto.CompactTextString(m) }
func (*VolumeInfo) ProtoMessage()    {}
func (*VolumeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{22}
}
func (m *VolumeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInfo.Unmarshal(m, b)
}
func (m *VolumeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInfo.Marshal(b, m, deterministic)
}
func (dst *VolumeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInfo.Merge(dst, src)
}
func (m *VolumeInfo) XXX_Size() int {
	return xxx_messageInfo_VolumeInfo.Size(m)
}
func (m *VolumeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInfo proto.InternalMessageInfo

func (m *VolumeInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VolumeInfo) GetStorage() *VolumeSpec {
	if m != nil {
		return m.Storage
	}
	return nil
}

// VolumeConsumer identifies a consumer for a Volume. An example of a VolumeConsumer
// would be a Pod in Kubernetes who has mounted the PersistentVolumeClaim for the
// Volume
// swagger: model
type VolumeConsumer struct {
	// Name is the name of the volume consumer
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Namespace is the namespace of the volume consumer
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// Type is the type of the consumer. E.g a Kubernetes pod
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// NodeID is the identifier of the node on which the consumer is running. This
	// identifier would be from the perspective of the container runtime or
	// orchestrator under which the volume consumer resides. For example, NodeID
	//  can be name of a minion in Kubernetes.
	NodeId string `protobuf:"bytes,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// OwnerName is the name of the entity who owns this volume consumer
	OwnerName string `protobuf:"bytes,5,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	// OwnerType is the type of the entity who owns this volume consumer. The type would
	// be from the perspective of the container runtime or the orchestrator under which
	// the volume consumer resides. For e.g OwnerType can be a Deployment in Kubernetes.
	OwnerType            string   `protobuf:"bytes,6,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeConsumer) Reset()         { *m = VolumeConsumer{} }
func (m *VolumeConsumer) String() string { return proto.CompactTextString(m) }
func (*VolumeConsumer) ProtoMessage()    {}
func (*VolumeConsumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{23}
}
func (m *VolumeConsumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeConsumer.Unmarshal(m, b)
}
func (m *VolumeConsumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeConsumer.Marshal(b, m, deterministic)
}
func (dst *VolumeConsumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeConsumer.Merge(dst, src)
}
func (m *VolumeConsumer) XXX_Size() int {
	return xxx_messageInfo_VolumeConsumer.Size(m)
}
func (m *VolumeConsumer) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeConsumer.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeConsumer proto.InternalMessageInfo

func (m *VolumeConsumer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeConsumer) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VolumeConsumer) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *VolumeConsumer) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerType() string {
	if m != nil {
		return m.OwnerType
	}
	return ""
}

// GraphDriverChanges represent a list of changes between the filesystem layers
// specified by the ID and Parent.  // Parent may be an empty string, in which
// case there is no parent.
// Where the Path is the filesystem path within the layered filesystem
// swagger:model
type GraphDriverChanges struct {
	Path                 string                `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Kind                 GraphDriverChangeType `protobuf:"varint,2,opt,name=kind,enum=openstorage.api.GraphDriverChangeType" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GraphDriverChanges) Reset()         { *m = GraphDriverChanges{} }
func (m *GraphDriverChanges) String() string { return proto.CompactTextString(m) }
func (*GraphDriverChanges) ProtoMessage()    {}
func (*GraphDriverChanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{24}
}
func (m *GraphDriverChanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDriverChanges.Unmarshal(m, b)
}
func (m *GraphDriverChanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDriverChanges.Marshal(b, m, deterministic)
}
func (dst *GraphDriverChanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDriverChanges.Merge(dst, src)
}
func (m *GraphDriverChanges) XXX_Size() int {
	return xxx_messageInfo_GraphDriverChanges.Size(m)
}
func (m *GraphDriverChanges) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDriverChanges.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDriverChanges proto.InternalMessageInfo

func (m *GraphDriverChanges) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GraphDriverChanges) GetKind() GraphDriverChangeType {
	if m != nil {
		return m.Kind
	}
	return GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE
}

// ClusterResponse specifies a response that gets returned when requesting the cluster
// swagger:response clusterResponse
type ClusterResponse struct {
	// Error code
	//
	// in: body
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterResponse) Reset()         { *m = ClusterResponse{} }
func (m *ClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterResponse) ProtoMessage()    {}
func (*ClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{25}
}
func (m *ClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterResponse.Unmarshal(m, b)
}
func (m *ClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterResponse.Merge(dst, src)
}
func (m *ClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterResponse.Size(m)
}
func (m *ClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterResponse proto.InternalMessageInfo

func (m *ClusterResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Active Request
// swagger:model
type ActiveRequest struct {
	ReqestKV             map[int64]string `protobuf:"bytes,1,rep,name=ReqestKV" json:"ReqestKV,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequest) Reset()         { *m = ActiveRequest{} }
func (m *ActiveRequest) String() string { return proto.CompactTextString(m) }
func (*ActiveRequest) ProtoMessage()    {}
func (*ActiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{26}
}
func (m *ActiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequest.Unmarshal(m, b)
}
func (m *ActiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequest.Marshal(b, m, deterministic)
}
func (dst *ActiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequest.Merge(dst, src)
}
func (m *ActiveRequest) XXX_Size() int {
	return xxx_messageInfo_ActiveRequest.Size(m)
}
func (m *ActiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequest proto.InternalMessageInfo

func (m *ActiveRequest) GetReqestKV() map[int64]string {
	if m != nil {
		return m.ReqestKV
	}
	return nil
}

// Active Requests
// swagger:model
type ActiveRequests struct {
	RequestCount         int64            `protobuf:"varint,1,opt,name=RequestCount" json:"RequestCount,omitempty"`
	ActiveRequest        []*ActiveRequest `protobuf:"bytes,2,rep,name=ActiveRequest" json:"ActiveRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequests) Reset()         { *m = ActiveRequests{} }
func (m *ActiveRequests) String() string { return proto.CompactTextString(m) }
func (*ActiveRequests) ProtoMessage()    {}
func (*ActiveRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{27}
}
func (m *ActiveRequests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequests.Unmarshal(m, b)
}
func (m *ActiveRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequests.Marshal(b, m, deterministic)
}
func (dst *ActiveRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequests.Merge(dst, src)
}
func (m *ActiveRequests) XXX_Size() int {
	return xxx_messageInfo_ActiveRequests.Size(m)
}
func (m *ActiveRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequests.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequests proto.InternalMessageInfo

func (m *ActiveRequests) GetRequestCount() int64 {
	if m != nil {
		return m.RequestCount
	}
	return 0
}

func (m *ActiveRequests) GetActiveRequest() []*ActiveRequest {
	if m != nil {
		return m.ActiveRequest
	}
	return nil
}

// GroupSnapCreateRequest specifies a request to create a snapshot of given group.
// swagger:model
type GroupSnapCreateRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=Labels" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GroupSnapCreateRequest) Reset()         { *m = GroupSnapCreateRequest{} }
func (m *GroupSnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateRequest) ProtoMessage()    {}
func (*GroupSnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{28}
}
func (m *GroupSnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateRequest.Unmarshal(m, b)
}
func (m *GroupSnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateRequest.Merge(dst, src)
}
func (m *GroupSnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateRequest.Size(m)
}
func (m *GroupSnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateRequest proto.InternalMessageInfo

func (m *GroupSnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupSnapCreateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// GroupSnapCreateRequest specifies a response that get's returned when creating a group snapshot.
// swagger:response groupSnapCreateResponse
type GroupSnapCreateResponse struct {
	// Created snapshots
	//
	// in: body
	// Required: true
	Snapshots map[string]*SnapCreateResponse `protobuf:"bytes,1,rep,name=snapshots" json:"snapshots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupSnapCreateResponse) Reset()         { *m = GroupSnapCreateResponse{} }
func (m *GroupSnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateResponse) ProtoMessage()    {}
func (*GroupSnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{29}
}
func (m *GroupSnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateResponse.Unmarshal(m, b)
}
func (m *GroupSnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateResponse.Merge(dst, src)
}
func (m *GroupSnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateResponse.Size(m)
}
func (m *GroupSnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateResponse proto.InternalMessageInfo

func (m *GroupSnapCreateResponse) GetSnapshots() map[string]*SnapCreateResponse {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

func (m *GroupSnapCreateResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// StorageNode describes the state of the node
type StorageNode struct {
	// Id of the node
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Cpu usage of the node
	Cpu float64 `protobuf:"fixed64,2,opt,name=cpu" json:"cpu,omitempty"`
	// Total memory of the node
	MemTotal uint64 `protobuf:"varint,3,opt,name=mem_total,json=memTotal" json:"mem_total,omitempty"`
	// Used memory of the node
	MemUsed uint64 `protobuf:"varint,4,opt,name=mem_used,json=memUsed" json:"mem_used,omitempty"`
	// Free memory of the node
	MemFree uint64 `protobuf:"varint,5,opt,name=mem_free,json=memFree" json:"mem_free,omitempty"`
	// Average load (percentage)
	AvgLoad int64 `protobuf:"varint,6,opt,name=avg_load,json=avgLoad" json:"avg_load,omitempty"`
	// Node status
	Status Status `protobuf:"varint,7,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// List of disks on the node
	Disks map[string]*StorageResource `protobuf:"bytes,9,rep,name=disks" json:"disks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of storage pools this node supports
	Pools []*StoragePool `protobuf:"bytes,10,rep,name=pools" json:"pools,omitempty"`
	// Management IP
	MgmtIp string `protobuf:"bytes,11,opt,name=mgmt_ip,json=mgmtIp" json:"mgmt_ip,omitempty"`
	// Data IP
	DataIp string `protobuf:"bytes,12,opt,name=data_ip,json=dataIp" json:"data_ip,omitempty"`
	// Hostname of the node
	Hostname string `protobuf:"bytes,15,opt,name=hostname" json:"hostname,omitempty"`
	// User defined labels for the node
	NodeLabels           map[string]string `protobuf:"bytes,16,rep,name=node_labels,json=nodeLabels" json:"node_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StorageNode) Reset()         { *m = StorageNode{} }
func (m *StorageNode) String() string { return proto.CompactTextString(m) }
func (*StorageNode) ProtoMessage()    {}
func (*StorageNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{30}
}
func (m *StorageNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageNode.Unmarshal(m, b)
}
func (m *StorageNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageNode.Marshal(b, m, deterministic)
}
func (dst *StorageNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageNode.Merge(dst, src)
}
func (m *StorageNode) XXX_Size() int {
	return xxx_messageInfo_StorageNode.Size(m)
}
func (m *StorageNode) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageNode.DiscardUnknown(m)
}

var xxx_messageInfo_StorageNode proto.InternalMessageInfo

func (m *StorageNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageNode) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *StorageNode) GetMemTotal() uint64 {
	if m != nil {
		return m.MemTotal
	}
	return 0
}

func (m *StorageNode) GetMemUsed() uint64 {
	if m != nil {
		return m.MemUsed
	}
	return 0
}

func (m *StorageNode) GetMemFree() uint64 {
	if m != nil {
		return m.MemFree
	}
	return 0
}

func (m *StorageNode) GetAvgLoad() int64 {
	if m != nil {
		return m.AvgLoad
	}
	return 0
}

func (m *StorageNode) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageNode) GetDisks() map[string]*StorageResource {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *StorageNode) GetPools() []*StoragePool {
	if m != nil {
		return m.Pools
	}
	return nil
}

func (m *StorageNode) GetMgmtIp() string {
	if m != nil {
		return m.MgmtIp
	}
	return ""
}

func (m *StorageNode) GetDataIp() string {
	if m != nil {
		return m.DataIp
	}
	return ""
}

func (m *StorageNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *StorageNode) GetNodeLabels() map[string]string {
	if m != nil {
		return m.NodeLabels
	}
	return nil
}

// StorageCluster represents the state and information about the cluster
type StorageCluster struct {
	// Status of the cluster
	Status Status `protobuf:"varint,1,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// Id of the cluster
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// The id of the node servicing these requests
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// List of all the node ids in the cluster
	NodeIds              []string `protobuf:"bytes,4,rep,name=node_ids,json=nodeIds" json:"node_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageCluster) Reset()         { *m = StorageCluster{} }
func (m *StorageCluster) String() string { return proto.CompactTextString(m) }
func (*StorageCluster) ProtoMessage()    {}
func (*StorageCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{31}
}
func (m *StorageCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageCluster.Unmarshal(m, b)
}
func (m *StorageCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageCluster.Marshal(b, m, deterministic)
}
func (dst *StorageCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageCluster.Merge(dst, src)
}
func (m *StorageCluster) XXX_Size() int {
	return xxx_messageInfo_StorageCluster.Size(m)
}
func (m *StorageCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageCluster.DiscardUnknown(m)
}

var xxx_messageInfo_StorageCluster proto.InternalMessageInfo

func (m *StorageCluster) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageCluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *StorageCluster) GetNodeIds() []string {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type SdkSchedulePolicyCreateRequest struct {
	// Schedule Policy
	SchedulePolicy       *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=SchedulePolicy" json:"SchedulePolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyCreateRequest) Reset()         { *m = SdkSchedulePolicyCreateRequest{} }
func (m *SdkSchedulePolicyCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyCreateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{32}
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyCreateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Size(m)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyCreateRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyCreateRequest) GetSchedulePolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.SchedulePolicy
	}
	return nil
}

type SdkSchedulePolicyCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyCreateResponse) Reset()         { *m = SdkSchedulePolicyCreateResponse{} }
func (m *SdkSchedulePolicyCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyCreateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{33}
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyCreateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Size(m)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyCreateResponse proto.InternalMessageInfo

type SdkSchedulePolicyUpdateRequest struct {
	// Schedule Policy
	SchedulePolicy       *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=SchedulePolicy" json:"SchedulePolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyUpdateRequest) Reset()         { *m = SdkSchedulePolicyUpdateRequest{} }
func (m *SdkSchedulePolicyUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyUpdateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{34}
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Size(m)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyUpdateRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyUpdateRequest) GetSchedulePolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.SchedulePolicy
	}
	return nil
}

type SdkSchedulePolicyUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyUpdateResponse) Reset()         { *m = SdkSchedulePolicyUpdateResponse{} }
func (m *SdkSchedulePolicyUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyUpdateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{35}
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Size(m)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyUpdateResponse proto.InternalMessageInfo

type SdkSchedulePolicyEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyEnumerateRequest) Reset()         { *m = SdkSchedulePolicyEnumerateRequest{} }
func (m *SdkSchedulePolicyEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyEnumerateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{36}
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Size(m)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyEnumerateRequest proto.InternalMessageInfo

type SdkSchedulePolicyEnumerateResponse struct {
	// List of Schedule Policy
	Policies             []*SdkSchedulePolicy `protobuf:"bytes,1,rep,name=policies" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SdkSchedulePolicyEnumerateResponse) Reset()         { *m = SdkSchedulePolicyEnumerateResponse{} }
func (m *SdkSchedulePolicyEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyEnumerateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{37}
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Size(m)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyEnumerateResponse proto.InternalMessageInfo

func (m *SdkSchedulePolicyEnumerateResponse) GetPolicies() []*SdkSchedulePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type SdkSchedulePolicyInspectRequest struct {
	// Name of the schedule Policy
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyInspectRequest) Reset()         { *m = SdkSchedulePolicyInspectRequest{} }
func (m *SdkSchedulePolicyInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInspectRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{38}
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInspectRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Size(m)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInspectRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyInspectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SdkSchedulePolicyInspectResponse struct {
	// List of Schedule Policy
	Policy               *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=policy" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyInspectResponse) Reset()         { *m = SdkSchedulePolicyInspectResponse{} }
func (m *SdkSchedulePolicyInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInspectResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{39}
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInspectResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Size(m)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInspectResponse proto.InternalMessageInfo

func (m *SdkSchedulePolicyInspectResponse) GetPolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type SdkSchedulePolicyDeleteRequest struct {
	// Name of the schedule policy
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyDeleteRequest) Reset()         { *m = SdkSchedulePolicyDeleteRequest{} }
func (m *SdkSchedulePolicyDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyDeleteRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{40}
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Size(m)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyDeleteRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SdkSchedulePolicyDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyDeleteResponse) Reset()         { *m = SdkSchedulePolicyDeleteResponse{} }
func (m *SdkSchedulePolicyDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyDeleteResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{41}
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Size(m)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyDeleteResponse proto.InternalMessageInfo

type SdkSchedulePolicyIntervalDaily struct {
	// Range: 0-23
	Hour int32 `protobuf:"varint,1,opt,name=hour" json:"hour,omitempty"`
	// Range: 0-59
	Minute               int32    `protobuf:"varint,2,opt,name=minute" json:"minute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyIntervalDaily) Reset()         { *m = SdkSchedulePolicyIntervalDaily{} }
func (m *SdkSchedulePolicyIntervalDaily) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyIntervalDaily) ProtoMessage()    {}
func (*SdkSchedulePolicyIntervalDaily) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{42}
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyIntervalDaily) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Merge(dst, src)
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Size(m)
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyIntervalDaily.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyIntervalDaily proto.InternalMessageInfo

func (m *SdkSchedulePolicyIntervalDaily) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalDaily) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

type SdkSchedulePolicyIntervalWeekly struct {
	Day SdkTimeWeekday `protobuf:"varint,1,opt,name=day,enum=openstorage.api.SdkTimeWeekday" json:"day,omitempty"`
	// Range: 0-23
	Hour int32 `protobuf:"varint,2,opt,name=hour" json:"hour,omitempty"`
	// Range: 0-59
	Minute               int32    `protobuf:"varint,3,opt,name=minute" json:"minute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyIntervalWeekly) Reset()         { *m = SdkSchedulePolicyIntervalWeekly{} }
func (m *SdkSchedulePolicyIntervalWeekly) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyIntervalWeekly) ProtoMessage()    {}
func (*SdkSchedulePolicyIntervalWeekly) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{43}
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyIntervalWeekly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Merge(dst, src)
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Size(m)
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyIntervalWeekly proto.InternalMessageInfo

func (m *SdkSchedulePolicyIntervalWeekly) GetDay() SdkTimeWeekday {
	if m != nil {
		return m.Day
	}
	return SdkTimeWeekday_SdkTimeWeekdaySunday
}

func (m *SdkSchedulePolicyIntervalWeekly) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalWeekly) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

type SdkSchedulePolicyIntervalMonthly struct {
	// Range: 1-28
	Day int32 `protobuf:"varint,1,opt,name=day" json:"day,omitempty"`
	// Range: 0-59
	Hour int32 `protobuf:"varint,2,opt,name=hour" json:"hour,omitempty"`
	// Range: 0-59
	Minute               int32    `protobuf:"varint,3,opt,name=minute" json:"minute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyIntervalMonthly) Reset()         { *m = SdkSchedulePolicyIntervalMonthly{} }
func (m *SdkSchedulePolicyIntervalMonthly) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyIntervalMonthly) ProtoMessage()    {}
func (*SdkSchedulePolicyIntervalMonthly) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{44}
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyIntervalMonthly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Merge(dst, src)
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Size(m)
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyIntervalMonthly proto.InternalMessageInfo

func (m *SdkSchedulePolicyIntervalMonthly) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalMonthly) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalMonthly) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

type SdkSchedulePolicyInterval struct {
	// Number of instances to retain
	Retain int64 `protobuf:"varint,1,opt,name=retain" json:"retain,omitempty"`
	// Types that are valid to be assigned to PeriodType:
	//	*SdkSchedulePolicyInterval_Daily
	//	*SdkSchedulePolicyInterval_Weekly
	//	*SdkSchedulePolicyInterval_Monthly
	PeriodType           isSdkSchedulePolicyInterval_PeriodType `protobuf_oneof:"period_type"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SdkSchedulePolicyInterval) Reset()         { *m = SdkSchedulePolicyInterval{} }
func (m *SdkSchedulePolicyInterval) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInterval) ProtoMessage()    {}
func (*SdkSchedulePolicyInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{45}
}
func (m *SdkSchedulePolicyInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInterval.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInterval.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInterval.Merge(dst, src)
}
func (m *SdkSchedulePolicyInterval) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInterval.Size(m)
}
func (m *SdkSchedulePolicyInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInterval.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInterval proto.InternalMessageInfo

type isSdkSchedulePolicyInterval_PeriodType interface {
	isSdkSchedulePolicyInterval_PeriodType()
}

type SdkSchedulePolicyInterval_Daily struct {
	Daily *SdkSchedulePolicyIntervalDaily `protobuf:"bytes,2,opt,name=daily,oneof"`
}
type SdkSchedulePolicyInterval_Weekly struct {
	Weekly *SdkSchedulePolicyIntervalWeekly `protobuf:"bytes,3,opt,name=weekly,oneof"`
}
type SdkSchedulePolicyInterval_Monthly struct {
	Monthly *SdkSchedulePolicyIntervalMonthly `protobuf:"bytes,4,opt,name=monthly,oneof"`
}

func (*SdkSchedulePolicyInterval_Daily) isSdkSchedulePolicyInterval_PeriodType()   {}
func (*SdkSchedulePolicyInterval_Weekly) isSdkSchedulePolicyInterval_PeriodType()  {}
func (*SdkSchedulePolicyInterval_Monthly) isSdkSchedulePolicyInterval_PeriodType() {}

func (m *SdkSchedulePolicyInterval) GetPeriodType() isSdkSchedulePolicyInterval_PeriodType {
	if m != nil {
		return m.PeriodType
	}
	return nil
}

func (m *SdkSchedulePolicyInterval) GetRetain() int64 {
	if m != nil {
		return m.Retain
	}
	return 0
}

func (m *SdkSchedulePolicyInterval) GetDaily() *SdkSchedulePolicyIntervalDaily {
	if x, ok := m.GetPeriodType().(*SdkSchedulePolicyInterval_Daily); ok {
		return x.Daily
	}
	return nil
}

func (m *SdkSchedulePolicyInterval) GetWeekly() *SdkSchedulePolicyIntervalWeekly {
	if x, ok := m.GetPeriodType().(*SdkSchedulePolicyInterval_Weekly); ok {
		return x.Weekly
	}
	return nil
}

func (m *SdkSchedulePolicyInterval) GetMonthly() *SdkSchedulePolicyIntervalMonthly {
	if x, ok := m.GetPeriodType().(*SdkSchedulePolicyInterval_Monthly); ok {
		return x.Monthly
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkSchedulePolicyInterval) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkSchedulePolicyInterval_OneofMarshaler, _SdkSchedulePolicyInterval_OneofUnmarshaler, _SdkSchedulePolicyInterval_OneofSizer, []interface{}{
		(*SdkSchedulePolicyInterval_Daily)(nil),
		(*SdkSchedulePolicyInterval_Weekly)(nil),
		(*SdkSchedulePolicyInterval_Monthly)(nil),
	}
}

func _SdkSchedulePolicyInterval_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkSchedulePolicyInterval)
	// period_type
	switch x := m.PeriodType.(type) {
	case *SdkSchedulePolicyInterval_Daily:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Daily); err != nil {
			return err
		}
	case *SdkSchedulePolicyInterval_Weekly:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Weekly); err != nil {
			return err
		}
	case *SdkSchedulePolicyInterval_Monthly:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Monthly); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkSchedulePolicyInterval.PeriodType has unexpected type %T", x)
	}
	return nil
}

func _SdkSchedulePolicyInterval_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkSchedulePolicyInterval)
	switch tag {
	case 2: // period_type.daily
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkSchedulePolicyIntervalDaily)
		err := b.DecodeMessage(msg)
		m.PeriodType = &SdkSchedulePolicyInterval_Daily{msg}
		return true, err
	case 3: // period_type.weekly
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkSchedulePolicyIntervalWeekly)
		err := b.DecodeMessage(msg)
		m.PeriodType = &SdkSchedulePolicyInterval_Weekly{msg}
		return true, err
	case 4: // period_type.monthly
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkSchedulePolicyIntervalMonthly)
		err := b.DecodeMessage(msg)
		m.PeriodType = &SdkSchedulePolicyInterval_Monthly{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkSchedulePolicyInterval_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkSchedulePolicyInterval)
	// period_type
	switch x := m.PeriodType.(type) {
	case *SdkSchedulePolicyInterval_Daily:
		s := proto.Size(x.Daily)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkSchedulePolicyInterval_Weekly:
		s := proto.Size(x.Weekly)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkSchedulePolicyInterval_Monthly:
		s := proto.Size(x.Monthly)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SdkSchedulePolicy struct {
	// Name of the schedule policy
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Schedule policy
	Schedule             *SdkSchedulePolicyInterval `protobuf:"bytes,2,opt,name=schedule" json:"schedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SdkSchedulePolicy) Reset()         { *m = SdkSchedulePolicy{} }
func (m *SdkSchedulePolicy) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicy) ProtoMessage()    {}
func (*SdkSchedulePolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{46}
}
func (m *SdkSchedulePolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicy.Unmarshal(m, b)
}
func (m *SdkSchedulePolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicy.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicy.Merge(dst, src)
}
func (m *SdkSchedulePolicy) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicy.Size(m)
}
func (m *SdkSchedulePolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicy proto.InternalMessageInfo

func (m *SdkSchedulePolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkSchedulePolicy) GetSchedule() *SdkSchedulePolicyInterval {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type SdkCredentialCreateRequest struct {
	// Types that are valid to be assigned to CredentialType:
	//	*SdkCredentialCreateRequest_AwsCredential
	//	*SdkCredentialCreateRequest_AzureCredential
	//	*SdkCredentialCreateRequest_GoogleCredential
	CredentialType       isSdkCredentialCreateRequest_CredentialType `protobuf_oneof:"credential_type"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *SdkCredentialCreateRequest) Reset()         { *m = SdkCredentialCreateRequest{} }
func (m *SdkCredentialCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateRequest) ProtoMessage()    {}
func (*SdkCredentialCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{47}
}
func (m *SdkCredentialCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateRequest.Merge(dst, src)
}
func (m *SdkCredentialCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateRequest.Size(m)
}
func (m *SdkCredentialCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateRequest proto.InternalMessageInfo

type isSdkCredentialCreateRequest_CredentialType interface {
	isSdkCredentialCreateRequest_CredentialType()
}

type SdkCredentialCreateRequest_AwsCredential struct {
	AwsCredential *SdkAwsCredentialRequest `protobuf:"bytes,1,opt,name=aws_credential,json=awsCredential,oneof"`
}
type SdkCredentialCreateRequest_AzureCredential struct {
	AzureCredential *SdkAzureCredentialRequest `protobuf:"bytes,2,opt,name=azure_credential,json=azureCredential,oneof"`
}
type SdkCredentialCreateRequest_GoogleCredential struct {
	GoogleCredential *SdkGoogleCredentialRequest `protobuf:"bytes,3,opt,name=google_credential,json=googleCredential,oneof"`
}

func (*SdkCredentialCreateRequest_AwsCredential) isSdkCredentialCreateRequest_CredentialType()    {}
func (*SdkCredentialCreateRequest_AzureCredential) isSdkCredentialCreateRequest_CredentialType()  {}
func (*SdkCredentialCreateRequest_GoogleCredential) isSdkCredentialCreateRequest_CredentialType() {}

func (m *SdkCredentialCreateRequest) GetCredentialType() isSdkCredentialCreateRequest_CredentialType {
	if m != nil {
		return m.CredentialType
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetAwsCredential() *SdkAwsCredentialRequest {
	if x, ok := m.GetCredentialType().(*SdkCredentialCreateRequest_AwsCredential); ok {
		return x.AwsCredential
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetAzureCredential() *SdkAzureCredentialRequest {
	if x, ok := m.GetCredentialType().(*SdkCredentialCreateRequest_AzureCredential); ok {
		return x.AzureCredential
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetGoogleCredential() *SdkGoogleCredentialRequest {
	if x, ok := m.GetCredentialType().(*SdkCredentialCreateRequest_GoogleCredential); ok {
		return x.GoogleCredential
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkCredentialCreateRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkCredentialCreateRequest_OneofMarshaler, _SdkCredentialCreateRequest_OneofUnmarshaler, _SdkCredentialCreateRequest_OneofSizer, []interface{}{
		(*SdkCredentialCreateRequest_AwsCredential)(nil),
		(*SdkCredentialCreateRequest_AzureCredential)(nil),
		(*SdkCredentialCreateRequest_GoogleCredential)(nil),
	}
}

func _SdkCredentialCreateRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkCredentialCreateRequest)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialCreateRequest_AwsCredential:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsCredential); err != nil {
			return err
		}
	case *SdkCredentialCreateRequest_AzureCredential:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AzureCredential); err != nil {
			return err
		}
	case *SdkCredentialCreateRequest_GoogleCredential:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GoogleCredential); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkCredentialCreateRequest.CredentialType has unexpected type %T", x)
	}
	return nil
}

func _SdkCredentialCreateRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkCredentialCreateRequest)
	switch tag {
	case 1: // credential_type.aws_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAwsCredentialRequest)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialCreateRequest_AwsCredential{msg}
		return true, err
	case 2: // credential_type.azure_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAzureCredentialRequest)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialCreateRequest_AzureCredential{msg}
		return true, err
	case 3: // credential_type.google_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkGoogleCredentialRequest)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialCreateRequest_GoogleCredential{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkCredentialCreateRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkCredentialCreateRequest)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialCreateRequest_AwsCredential:
		s := proto.Size(x.AwsCredential)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialCreateRequest_AzureCredential:
		s := proto.Size(x.AzureCredential)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialCreateRequest_GoogleCredential:
		s := proto.Size(x.GoogleCredential)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SdkCredentialCreateResponse struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialCreateResponse) Reset()         { *m = SdkCredentialCreateResponse{} }
func (m *SdkCredentialCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateResponse) ProtoMessage()    {}
func (*SdkCredentialCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{48}
}
func (m *SdkCredentialCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateResponse.Merge(dst, src)
}
func (m *SdkCredentialCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateResponse.Size(m)
}
func (m *SdkCredentialCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateResponse proto.InternalMessageInfo

func (m *SdkCredentialCreateResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkAwsCredentialRequest struct {
	// Access key
	AccessKey string `protobuf:"bytes,1,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// Secret key
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// Endpoint
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	// Region
	Region               string   `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAwsCredentialRequest) Reset()         { *m = SdkAwsCredentialRequest{} }
func (m *SdkAwsCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*SdkAwsCredentialRequest) ProtoMessage()    {}
func (*SdkAwsCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{49}
}
func (m *SdkAwsCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAwsCredentialRequest.Unmarshal(m, b)
}
func (m *SdkAwsCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAwsCredentialRequest.Marshal(b, m, deterministic)
}
func (dst *SdkAwsCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAwsCredentialRequest.Merge(dst, src)
}
func (m *SdkAwsCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_SdkAwsCredentialRequest.Size(m)
}
func (m *SdkAwsCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAwsCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAwsCredentialRequest proto.InternalMessageInfo

func (m *SdkAwsCredentialRequest) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *SdkAwsCredentialRequest) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *SdkAwsCredentialRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *SdkAwsCredentialRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type SdkAzureCredentialRequest struct {
	// Account name
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// Account key
	AccountKey           string   `protobuf:"bytes,2,opt,name=account_key,json=accountKey" json:"account_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAzureCredentialRequest) Reset()         { *m = SdkAzureCredentialRequest{} }
func (m *SdkAzureCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*SdkAzureCredentialRequest) ProtoMessage()    {}
func (*SdkAzureCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{50}
}
func (m *SdkAzureCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAzureCredentialRequest.Unmarshal(m, b)
}
func (m *SdkAzureCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAzureCredentialRequest.Marshal(b, m, deterministic)
}
func (dst *SdkAzureCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAzureCredentialRequest.Merge(dst, src)
}
func (m *SdkAzureCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_SdkAzureCredentialRequest.Size(m)
}
func (m *SdkAzureCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAzureCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAzureCredentialRequest proto.InternalMessageInfo

func (m *SdkAzureCredentialRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *SdkAzureCredentialRequest) GetAccountKey() string {
	if m != nil {
		return m.AccountKey
	}
	return ""
}

type SdkGoogleCredentialRequest struct {
	// Project ID
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// JSON Key
	JsonKey              string   `protobuf:"bytes,2,opt,name=json_key,json=jsonKey" json:"json_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkGoogleCredentialRequest) Reset()         { *m = SdkGoogleCredentialRequest{} }
func (m *SdkGoogleCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*SdkGoogleCredentialRequest) ProtoMessage()    {}
func (*SdkGoogleCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{51}
}
func (m *SdkGoogleCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkGoogleCredentialRequest.Unmarshal(m, b)
}
func (m *SdkGoogleCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkGoogleCredentialRequest.Marshal(b, m, deterministic)
}
func (dst *SdkGoogleCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkGoogleCredentialRequest.Merge(dst, src)
}
func (m *SdkGoogleCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_SdkGoogleCredentialRequest.Size(m)
}
func (m *SdkGoogleCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkGoogleCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkGoogleCredentialRequest proto.InternalMessageInfo

func (m *SdkGoogleCredentialRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *SdkGoogleCredentialRequest) GetJsonKey() string {
	if m != nil {
		return m.JsonKey
	}
	return ""
}

type SdkAwsCredentialResponse struct {
	// Credential Id
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	// Access key
	AccessKey string `protobuf:"bytes,2,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// Endpoint
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	// Region
	Region               string   `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAwsCredentialResponse) Reset()         { *m = SdkAwsCredentialResponse{} }
func (m *SdkAwsCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*SdkAwsCredentialResponse) ProtoMessage()    {}
func (*SdkAwsCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{52}
}
func (m *SdkAwsCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAwsCredentialResponse.Unmarshal(m, b)
}
func (m *SdkAwsCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAwsCredentialResponse.Marshal(b, m, deterministic)
}
func (dst *SdkAwsCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAwsCredentialResponse.Merge(dst, src)
}
func (m *SdkAwsCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_SdkAwsCredentialResponse.Size(m)
}
func (m *SdkAwsCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAwsCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAwsCredentialResponse proto.InternalMessageInfo

func (m *SdkAwsCredentialResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *SdkAwsCredentialResponse) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *SdkAwsCredentialResponse) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *SdkAwsCredentialResponse) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type SdkAzureCredentialResponse struct {
	// Credential Id
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	// Account name
	AccountName          string   `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAzureCredentialResponse) Reset()         { *m = SdkAzureCredentialResponse{} }
func (m *SdkAzureCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*SdkAzureCredentialResponse) ProtoMessage()    {}
func (*SdkAzureCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{53}
}
func (m *SdkAzureCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAzureCredentialResponse.Unmarshal(m, b)
}
func (m *SdkAzureCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAzureCredentialResponse.Marshal(b, m, deterministic)
}
func (dst *SdkAzureCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAzureCredentialResponse.Merge(dst, src)
}
func (m *SdkAzureCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_SdkAzureCredentialResponse.Size(m)
}
func (m *SdkAzureCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAzureCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAzureCredentialResponse proto.InternalMessageInfo

func (m *SdkAzureCredentialResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *SdkAzureCredentialResponse) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

type SdkGoogleCredentialResponse struct {
	// Credential Id
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	// Project ID
	ProjectId            string   `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkGoogleCredentialResponse) Reset()         { *m = SdkGoogleCredentialResponse{} }
func (m *SdkGoogleCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*SdkGoogleCredentialResponse) ProtoMessage()    {}
func (*SdkGoogleCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{54}
}
func (m *SdkGoogleCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkGoogleCredentialResponse.Unmarshal(m, b)
}
func (m *SdkGoogleCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkGoogleCredentialResponse.Marshal(b, m, deterministic)
}
func (dst *SdkGoogleCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkGoogleCredentialResponse.Merge(dst, src)
}
func (m *SdkGoogleCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_SdkGoogleCredentialResponse.Size(m)
}
func (m *SdkGoogleCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkGoogleCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkGoogleCredentialResponse proto.InternalMessageInfo

func (m *SdkGoogleCredentialResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *SdkGoogleCredentialResponse) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type SdkCredentialEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialEnumerateRequest) Reset()         { *m = SdkCredentialEnumerateRequest{} }
func (m *SdkCredentialEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateRequest) ProtoMessage()    {}
func (*SdkCredentialEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{55}
}
func (m *SdkCredentialEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateRequest.Merge(dst, src)
}
func (m *SdkCredentialEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateRequest.Size(m)
}
func (m *SdkCredentialEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateRequest proto.InternalMessageInfo

type SdkCredentialEnumerateResponse struct {
	CredentialIds        []string `protobuf:"bytes,1,rep,name=credential_ids,json=credentialIds" json:"credential_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialEnumerateResponse) Reset()         { *m = SdkCredentialEnumerateResponse{} }
func (m *SdkCredentialEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateResponse) ProtoMessage()    {}
func (*SdkCredentialEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{56}
}
func (m *SdkCredentialEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateResponse.Merge(dst, src)
}
func (m *SdkCredentialEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateResponse.Size(m)
}
func (m *SdkCredentialEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateResponse proto.InternalMessageInfo

func (m *SdkCredentialEnumerateResponse) GetCredentialIds() []string {
	if m != nil {
		return m.CredentialIds
	}
	return nil
}

type SdkCredentialInspectRequest struct {
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialInspectRequest) Reset()         { *m = SdkCredentialInspectRequest{} }
func (m *SdkCredentialInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialInspectRequest) ProtoMessage()    {}
func (*SdkCredentialInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{57}
}
func (m *SdkCredentialInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialInspectRequest.Unmarshal(m, b)
}
func (m *SdkCredentialInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialInspectRequest.Merge(dst, src)
}
func (m *SdkCredentialInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialInspectRequest.Size(m)
}
func (m *SdkCredentialInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialInspectRequest proto.InternalMessageInfo

func (m *SdkCredentialInspectRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

// This response uses OneOf proto style. Depending on your programming language
// you will need to check if the value of credential_type is one of the ones below.
type SdkCredentialInspectResponse struct {
	// Types that are valid to be assigned to CredentialType:
	//	*SdkCredentialInspectResponse_AwsCredential
	//	*SdkCredentialInspectResponse_AzureCredential
	//	*SdkCredentialInspectResponse_GoogleCredential
	CredentialType       isSdkCredentialInspectResponse_CredentialType `protobuf_oneof:"credential_type"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *SdkCredentialInspectResponse) Reset()         { *m = SdkCredentialInspectResponse{} }
func (m *SdkCredentialInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialInspectResponse) ProtoMessage()    {}
func (*SdkCredentialInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{58}
}
func (m *SdkCredentialInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialInspectResponse.Unmarshal(m, b)
}
func (m *SdkCredentialInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialInspectResponse.Merge(dst, src)
}
func (m *SdkCredentialInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialInspectResponse.Size(m)
}
func (m *SdkCredentialInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialInspectResponse proto.InternalMessageInfo

type isSdkCredentialInspectResponse_CredentialType interface {
	isSdkCredentialInspectResponse_CredentialType()
}

type SdkCredentialInspectResponse_AwsCredential struct {
	AwsCredential *SdkAwsCredentialResponse `protobuf:"bytes,1,opt,name=aws_credential,json=awsCredential,oneof"`
}
type SdkCredentialInspectResponse_AzureCredential struct {
	AzureCredential *SdkAzureCredentialResponse `protobuf:"bytes,2,opt,name=azure_credential,json=azureCredential,oneof"`
}
type SdkCredentialInspectResponse_GoogleCredential struct {
	GoogleCredential *SdkGoogleCredentialResponse `protobuf:"bytes,3,opt,name=google_credential,json=googleCredential,oneof"`
}

func (*SdkCredentialInspectResponse_AwsCredential) isSdkCredentialInspectResponse_CredentialType()   {}
func (*SdkCredentialInspectResponse_AzureCredential) isSdkCredentialInspectResponse_CredentialType() {}
func (*SdkCredentialInspectResponse_GoogleCredential) isSdkCredentialInspectResponse_CredentialType() {
}

func (m *SdkCredentialInspectResponse) GetCredentialType() isSdkCredentialInspectResponse_CredentialType {
	if m != nil {
		return m.CredentialType
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetAwsCredential() *SdkAwsCredentialResponse {
	if x, ok := m.GetCredentialType().(*SdkCredentialInspectResponse_AwsCredential); ok {
		return x.AwsCredential
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetAzureCredential() *SdkAzureCredentialResponse {
	if x, ok := m.GetCredentialType().(*SdkCredentialInspectResponse_AzureCredential); ok {
		return x.AzureCredential
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetGoogleCredential() *SdkGoogleCredentialResponse {
	if x, ok := m.GetCredentialType().(*SdkCredentialInspectResponse_GoogleCredential); ok {
		return x.GoogleCredential
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkCredentialInspectResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkCredentialInspectResponse_OneofMarshaler, _SdkCredentialInspectResponse_OneofUnmarshaler, _SdkCredentialInspectResponse_OneofSizer, []interface{}{
		(*SdkCredentialInspectResponse_AwsCredential)(nil),
		(*SdkCredentialInspectResponse_AzureCredential)(nil),
		(*SdkCredentialInspectResponse_GoogleCredential)(nil),
	}
}

func _SdkCredentialInspectResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkCredentialInspectResponse)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialInspectResponse_AwsCredential:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsCredential); err != nil {
			return err
		}
	case *SdkCredentialInspectResponse_AzureCredential:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AzureCredential); err != nil {
			return err
		}
	case *SdkCredentialInspectResponse_GoogleCredential:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GoogleCredential); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkCredentialInspectResponse.CredentialType has unexpected type %T", x)
	}
	return nil
}

func _SdkCredentialInspectResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkCredentialInspectResponse)
	switch tag {
	case 1: // credential_type.aws_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAwsCredentialResponse)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialInspectResponse_AwsCredential{msg}
		return true, err
	case 2: // credential_type.azure_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAzureCredentialResponse)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialInspectResponse_AzureCredential{msg}
		return true, err
	case 3: // credential_type.google_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkGoogleCredentialResponse)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialInspectResponse_GoogleCredential{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkCredentialInspectResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkCredentialInspectResponse)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialInspectResponse_AwsCredential:
		s := proto.Size(x.AwsCredential)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialInspectResponse_AzureCredential:
		s := proto.Size(x.AzureCredential)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialInspectResponse_GoogleCredential:
		s := proto.Size(x.GoogleCredential)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SdkCredentialDeleteRequest struct {
	// ID for credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteRequest) Reset()         { *m = SdkCredentialDeleteRequest{} }
func (m *SdkCredentialDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteRequest) ProtoMessage()    {}
func (*SdkCredentialDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{59}
}
func (m *SdkCredentialDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteRequest.Merge(dst, src)
}
func (m *SdkCredentialDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Size(m)
}
func (m *SdkCredentialDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteRequest proto.InternalMessageInfo

func (m *SdkCredentialDeleteRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteResponse) Reset()         { *m = SdkCredentialDeleteResponse{} }
func (m *SdkCredentialDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteResponse) ProtoMessage()    {}
func (*SdkCredentialDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{60}
}
func (m *SdkCredentialDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteResponse.Merge(dst, src)
}
func (m *SdkCredentialDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Size(m)
}
func (m *SdkCredentialDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteResponse proto.InternalMessageInfo

type SdkCredentialValidateRequest struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialValidateRequest) Reset()         { *m = SdkCredentialValidateRequest{} }
func (m *SdkCredentialValidateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialValidateRequest) ProtoMessage()    {}
func (*SdkCredentialValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{61}
}
func (m *SdkCredentialValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialValidateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialValidateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialValidateRequest.Merge(dst, src)
}
func (m *SdkCredentialValidateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialValidateRequest.Size(m)
}
func (m *SdkCredentialValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialValidateRequest proto.InternalMessageInfo

func (m *SdkCredentialValidateRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialValidateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialValidateResponse) Reset()         { *m = SdkCredentialValidateResponse{} }
func (m *SdkCredentialValidateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialValidateResponse) ProtoMessage()    {}
func (*SdkCredentialValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{62}
}
func (m *SdkCredentialValidateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialValidateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialValidateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialValidateResponse.Merge(dst, src)
}
func (m *SdkCredentialValidateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialValidateResponse.Size(m)
}
func (m *SdkCredentialValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialValidateResponse proto.InternalMessageInfo

type SdkVolumeMountRequest struct {
	// Id of the volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Mount path for mounting the volume.
	MountPath string `protobuf:"bytes,2,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// Additional options
	Options              map[string]string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeMountRequest) Reset()         { *m = SdkVolumeMountRequest{} }
func (m *SdkVolumeMountRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeMountRequest) ProtoMessage()    {}
func (*SdkVolumeMountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{63}
}
func (m *SdkVolumeMountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeMountRequest.Unmarshal(m, b)
}
func (m *SdkVolumeMountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeMountRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeMountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeMountRequest.Merge(dst, src)
}
func (m *SdkVolumeMountRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeMountRequest.Size(m)
}
func (m *SdkVolumeMountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeMountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeMountRequest proto.InternalMessageInfo

func (m *SdkVolumeMountRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeMountRequest) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *SdkVolumeMountRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type SdkVolumeMountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeMountResponse) Reset()         { *m = SdkVolumeMountResponse{} }
func (m *SdkVolumeMountResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeMountResponse) ProtoMessage()    {}
func (*SdkVolumeMountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{64}
}
func (m *SdkVolumeMountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeMountResponse.Unmarshal(m, b)
}
func (m *SdkVolumeMountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeMountResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeMountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeMountResponse.Merge(dst, src)
}
func (m *SdkVolumeMountResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeMountResponse.Size(m)
}
func (m *SdkVolumeMountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeMountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeMountResponse proto.InternalMessageInfo

type SdkVolumeUnmountRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// MountPath for device
	MountPath string `protobuf:"bytes,2,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// Options to unmount device
	Options              map[string]string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeUnmountRequest) Reset()         { *m = SdkVolumeUnmountRequest{} }
func (m *SdkVolumeUnmountRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeUnmountRequest) ProtoMessage()    {}
func (*SdkVolumeUnmountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{65}
}
func (m *SdkVolumeUnmountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeUnmountRequest.Unmarshal(m, b)
}
func (m *SdkVolumeUnmountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeUnmountRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeUnmountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeUnmountRequest.Merge(dst, src)
}
func (m *SdkVolumeUnmountRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeUnmountRequest.Size(m)
}
func (m *SdkVolumeUnmountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeUnmountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeUnmountRequest proto.InternalMessageInfo

func (m *SdkVolumeUnmountRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeUnmountRequest) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *SdkVolumeUnmountRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type SdkVolumeUnmountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeUnmountResponse) Reset()         { *m = SdkVolumeUnmountResponse{} }
func (m *SdkVolumeUnmountResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeUnmountResponse) ProtoMessage()    {}
func (*SdkVolumeUnmountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{66}
}
func (m *SdkVolumeUnmountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeUnmountResponse.Unmarshal(m, b)
}
func (m *SdkVolumeUnmountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeUnmountResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeUnmountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeUnmountResponse.Merge(dst, src)
}
func (m *SdkVolumeUnmountResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeUnmountResponse.Size(m)
}
func (m *SdkVolumeUnmountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeUnmountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeUnmountResponse proto.InternalMessageInfo

type SdkVolumeAttachRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Options for attaching volume, right now only passphrase options is supported
	Options              map[string]string `protobuf:"bytes,2,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeAttachRequest) Reset()         { *m = SdkVolumeAttachRequest{} }
func (m *SdkVolumeAttachRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeAttachRequest) ProtoMessage()    {}
func (*SdkVolumeAttachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{67}
}
func (m *SdkVolumeAttachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeAttachRequest.Unmarshal(m, b)
}
func (m *SdkVolumeAttachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeAttachRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeAttachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeAttachRequest.Merge(dst, src)
}
func (m *SdkVolumeAttachRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeAttachRequest.Size(m)
}
func (m *SdkVolumeAttachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeAttachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeAttachRequest proto.InternalMessageInfo

func (m *SdkVolumeAttachRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeAttachRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type SdkVolumeAttachResponse struct {
	// Device path where device is exported
	DevicePath           string   `protobuf:"bytes,1,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeAttachResponse) Reset()         { *m = SdkVolumeAttachResponse{} }
func (m *SdkVolumeAttachResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeAttachResponse) ProtoMessage()    {}
func (*SdkVolumeAttachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{68}
}
func (m *SdkVolumeAttachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeAttachResponse.Unmarshal(m, b)
}
func (m *SdkVolumeAttachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeAttachResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeAttachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeAttachResponse.Merge(dst, src)
}
func (m *SdkVolumeAttachResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeAttachResponse.Size(m)
}
func (m *SdkVolumeAttachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeAttachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeAttachResponse proto.InternalMessageInfo

func (m *SdkVolumeAttachResponse) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

type SdkVolumeDetachRequest struct {
	// Id of the volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDetachRequest) Reset()         { *m = SdkVolumeDetachRequest{} }
func (m *SdkVolumeDetachRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDetachRequest) ProtoMessage()    {}
func (*SdkVolumeDetachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{69}
}
func (m *SdkVolumeDetachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDetachRequest.Unmarshal(m, b)
}
func (m *SdkVolumeDetachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDetachRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDetachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDetachRequest.Merge(dst, src)
}
func (m *SdkVolumeDetachRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDetachRequest.Size(m)
}
func (m *SdkVolumeDetachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDetachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDetachRequest proto.InternalMessageInfo

func (m *SdkVolumeDetachRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeDetachResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDetachResponse) Reset()         { *m = SdkVolumeDetachResponse{} }
func (m *SdkVolumeDetachResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDetachResponse) ProtoMessage()    {}
func (*SdkVolumeDetachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{70}
}
func (m *SdkVolumeDetachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDetachResponse.Unmarshal(m, b)
}
func (m *SdkVolumeDetachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDetachResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDetachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDetachResponse.Merge(dst, src)
}
func (m *SdkVolumeDetachResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDetachResponse.Size(m)
}
func (m *SdkVolumeDetachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDetachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDetachResponse proto.InternalMessageInfo

type SdkVolumeCreateRequest struct {
	// Unique name of the volume. This will be used for idempotency.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Volume specification
	Spec                 *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SdkVolumeCreateRequest) Reset()         { *m = SdkVolumeCreateRequest{} }
func (m *SdkVolumeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCreateRequest) ProtoMessage()    {}
func (*SdkVolumeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{71}
}
func (m *SdkVolumeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCreateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCreateRequest.Merge(dst, src)
}
func (m *SdkVolumeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCreateRequest.Size(m)
}
func (m *SdkVolumeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCreateRequest proto.InternalMessageInfo

func (m *SdkVolumeCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkVolumeCreateRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type SdkVolumeCreateResponse struct {
	// Id of new volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeCreateResponse) Reset()         { *m = SdkVolumeCreateResponse{} }
func (m *SdkVolumeCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCreateResponse) ProtoMessage()    {}
func (*SdkVolumeCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{72}
}
func (m *SdkVolumeCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCreateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCreateResponse.Merge(dst, src)
}
func (m *SdkVolumeCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCreateResponse.Size(m)
}
func (m *SdkVolumeCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCreateResponse proto.InternalMessageInfo

func (m *SdkVolumeCreateResponse) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeCloneRequest struct {
	// Unique name of the volume. This will be used for idempotency.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Parent volume id, if specified will create a new volume as a clone of the parent.
	ParentId string `protobuf:"bytes,2,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	// Volume specification
	Spec                 *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SdkVolumeCloneRequest) Reset()         { *m = SdkVolumeCloneRequest{} }
func (m *SdkVolumeCloneRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCloneRequest) ProtoMessage()    {}
func (*SdkVolumeCloneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{73}
}
func (m *SdkVolumeCloneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCloneRequest.Unmarshal(m, b)
}
func (m *SdkVolumeCloneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCloneRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCloneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCloneRequest.Merge(dst, src)
}
func (m *SdkVolumeCloneRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCloneRequest.Size(m)
}
func (m *SdkVolumeCloneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCloneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCloneRequest proto.InternalMessageInfo

func (m *SdkVolumeCloneRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkVolumeCloneRequest) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *SdkVolumeCloneRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type SdkVolumeCloneResponse struct {
	// Id of new volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeCloneResponse) Reset()         { *m = SdkVolumeCloneResponse{} }
func (m *SdkVolumeCloneResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCloneResponse) ProtoMessage()    {}
func (*SdkVolumeCloneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{74}
}
func (m *SdkVolumeCloneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCloneResponse.Unmarshal(m, b)
}
func (m *SdkVolumeCloneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCloneResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCloneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCloneResponse.Merge(dst, src)
}
func (m *SdkVolumeCloneResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCloneResponse.Size(m)
}
func (m *SdkVolumeCloneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCloneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCloneResponse proto.InternalMessageInfo

func (m *SdkVolumeCloneResponse) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeDeleteRequest struct {
	// Id of volume to delete
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDeleteRequest) Reset()         { *m = SdkVolumeDeleteRequest{} }
func (m *SdkVolumeDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDeleteRequest) ProtoMessage()    {}
func (*SdkVolumeDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{75}
}
func (m *SdkVolumeDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDeleteRequest.Unmarshal(m, b)
}
func (m *SdkVolumeDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDeleteRequest.Merge(dst, src)
}
func (m *SdkVolumeDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDeleteRequest.Size(m)
}
func (m *SdkVolumeDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDeleteRequest proto.InternalMessageInfo

func (m *SdkVolumeDeleteRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDeleteResponse) Reset()         { *m = SdkVolumeDeleteResponse{} }
func (m *SdkVolumeDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDeleteResponse) ProtoMessage()    {}
func (*SdkVolumeDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{76}
}
func (m *SdkVolumeDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDeleteResponse.Unmarshal(m, b)
}
func (m *SdkVolumeDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDeleteResponse.Merge(dst, src)
}
func (m *SdkVolumeDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDeleteResponse.Size(m)
}
func (m *SdkVolumeDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDeleteResponse proto.InternalMessageInfo

type SdkVolumeInspectRequest struct {
	// Id of volume to inspect
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeInspectRequest) Reset()         { *m = SdkVolumeInspectRequest{} }
func (m *SdkVolumeInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeInspectRequest) ProtoMessage()    {}
func (*SdkVolumeInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{77}
}
func (m *SdkVolumeInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeInspectRequest.Unmarshal(m, b)
}
func (m *SdkVolumeInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeInspectRequest.Merge(dst, src)
}
func (m *SdkVolumeInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeInspectRequest.Size(m)
}
func (m *SdkVolumeInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeInspectRequest proto.InternalMessageInfo

func (m *SdkVolumeInspectRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeInspectResponse struct {
	// Information about the volume
	Volume               *Volume  `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeInspectResponse) Reset()         { *m = SdkVolumeInspectResponse{} }
func (m *SdkVolumeInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeInspectResponse) ProtoMessage()    {}
func (*SdkVolumeInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{78}
}
func (m *SdkVolumeInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeInspectResponse.Unmarshal(m, b)
}
func (m *SdkVolumeInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeInspectResponse.Merge(dst, src)
}
func (m *SdkVolumeInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeInspectResponse.Size(m)
}
func (m *SdkVolumeInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeInspectResponse proto.InternalMessageInfo

func (m *SdkVolumeInspectResponse) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

// This request is used to adjust or set new values in the volume
type SdkVolumeSetRequest struct {
	// Id of the volume to update
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Change locator values. Some of these values may not be able to be changed.
	// New labels will be added to the current volume labels. To delete a label, set the
	// value of the label to an empty string.
	Locator *VolumeLocator `protobuf:"bytes,2,opt,name=locator" json:"locator,omitempty"`
	// VolumeSpecSet provides a method to request that certain values
	// in the VolumeSpec are changed. This is necessary as a separate variable
	// because values like int and bool in the VolumeSpec cannot be determined
	// if they are being requested to change in gRPC proto3. Some of these
	// values may not be able to be changed.
	// Here are a few examples of actions that can be accomplished using the VolumeSpec.
	// To resize the volume: Set a new value in spec.size.
	// To change number of replicas: Adjust spec.ha_level.
	// To change the I/O Profile: Adjust spec.io_profile.
	Spec                 *VolumeSpecSet `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SdkVolumeSetRequest) Reset()         { *m = SdkVolumeSetRequest{} }
func (m *SdkVolumeSetRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSetRequest) ProtoMessage()    {}
func (*SdkVolumeSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{79}
}
func (m *SdkVolumeSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSetRequest.Unmarshal(m, b)
}
func (m *SdkVolumeSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSetRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSetRequest.Merge(dst, src)
}
func (m *SdkVolumeSetRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSetRequest.Size(m)
}
func (m *SdkVolumeSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSetRequest proto.InternalMessageInfo

func (m *SdkVolumeSetRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeSetRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *SdkVolumeSetRequest) GetSpec() *VolumeSpecSet {
	if m != nil {
		return m.Spec
	}
	return nil
}

// The response returns no data
type SdkVolumeSetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSetResponse) Reset()         { *m = SdkVolumeSetResponse{} }
func (m *SdkVolumeSetResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSetResponse) ProtoMessage()    {}
func (*SdkVolumeSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{80}
}
func (m *SdkVolumeSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSetResponse.Unmarshal(m, b)
}
func (m *SdkVolumeSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSetResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSetResponse.Merge(dst, src)
}
func (m *SdkVolumeSetResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSetResponse.Size(m)
}
func (m *SdkVolumeSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSetResponse proto.InternalMessageInfo

type SdkVolumeEnumerateRequest struct {
	// Volumes to match to this locator.
	// If not provided, all volumes will be returned.
	Locator              *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SdkVolumeEnumerateRequest) Reset()         { *m = SdkVolumeEnumerateRequest{} }
func (m *SdkVolumeEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeEnumerateRequest) ProtoMessage()    {}
func (*SdkVolumeEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{81}
}
func (m *SdkVolumeEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeEnumerateRequest.Merge(dst, src)
}
func (m *SdkVolumeEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeEnumerateRequest.Size(m)
}
func (m *SdkVolumeEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeEnumerateRequest proto.InternalMessageInfo

func (m *SdkVolumeEnumerateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

type SdkVolumeEnumerateResponse struct {
	// List of volumes matching label
	VolumeIds            []string `protobuf:"bytes,1,rep,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeEnumerateResponse) Reset()         { *m = SdkVolumeEnumerateResponse{} }
func (m *SdkVolumeEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeEnumerateResponse) ProtoMessage()    {}
func (*SdkVolumeEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{82}
}
func (m *SdkVolumeEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeEnumerateResponse.Merge(dst, src)
}
func (m *SdkVolumeEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeEnumerateResponse.Size(m)
}
func (m *SdkVolumeEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeEnumerateResponse proto.InternalMessageInfo

func (m *SdkVolumeEnumerateResponse) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

type SdkVolumeSnapshotCreateRequest struct {
	// Id of volume to take the snapshot from
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Labels to apply to snapshot
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeSnapshotCreateRequest) Reset()         { *m = SdkVolumeSnapshotCreateRequest{} }
func (m *SdkVolumeSnapshotCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotCreateRequest) ProtoMessage()    {}
func (*SdkVolumeSnapshotCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{83}
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Merge(dst, src)
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Size(m)
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotCreateRequest proto.InternalMessageInfo

func (m *SdkVolumeSnapshotCreateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeSnapshotCreateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type SdkVolumeSnapshotCreateResponse struct {
	// Id of immutable snapshot
	SnapshotId           string   `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotCreateResponse) Reset()         { *m = SdkVolumeSnapshotCreateResponse{} }
func (m *SdkVolumeSnapshotCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotCreateResponse) ProtoMessage()    {}
func (*SdkVolumeSnapshotCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{84}
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Merge(dst, src)
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Size(m)
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotCreateResponse proto.InternalMessageInfo

func (m *SdkVolumeSnapshotCreateResponse) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type SdkVolumeSnapshotRestoreRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Snapshot id to apply to `volume_id`
	SnapshotId           string   `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotRestoreRequest) Reset()         { *m = SdkVolumeSnapshotRestoreRequest{} }
func (m *SdkVolumeSnapshotRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotRestoreRequest) ProtoMessage()    {}
func (*SdkVolumeSnapshotRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{85}
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Merge(dst, src)
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Size(m)
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotRestoreRequest proto.InternalMessageInfo

func (m *SdkVolumeSnapshotRestoreRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeSnapshotRestoreRequest) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type SdkVolumeSnapshotRestoreResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotRestoreResponse) Reset()         { *m = SdkVolumeSnapshotRestoreResponse{} }
func (m *SdkVolumeSnapshotRestoreResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotRestoreResponse) ProtoMessage()    {}
func (*SdkVolumeSnapshotRestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{86}
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotRestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Merge(dst, src)
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Size(m)
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotRestoreResponse proto.InternalMessageInfo

type SdkVolumeSnapshotEnumerateRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Labels from snapshot
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeSnapshotEnumerateRequest) Reset()         { *m = SdkVolumeSnapshotEnumerateRequest{} }
func (m *SdkVolumeSnapshotEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotEnumerateRequest) ProtoMessage()    {}
func (*SdkVolumeSnapshotEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{87}
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Merge(dst, src)
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Size(m)
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest proto.InternalMessageInfo

func (m *SdkVolumeSnapshotEnumerateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeSnapshotEnumerateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type SdkVolumeSnapshotEnumerateResponse struct {
	// List of immutable snapshots
	VolumeSnapshotIds    []string `protobuf:"bytes,1,rep,name=volume_snapshot_ids,json=volumeSnapshotIds" json:"volume_snapshot_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotEnumerateResponse) Reset()         { *m = SdkVolumeSnapshotEnumerateResponse{} }
func (m *SdkVolumeSnapshotEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotEnumerateResponse) ProtoMessage()    {}
func (*SdkVolumeSnapshotEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{88}
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Merge(dst, src)
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Size(m)
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse proto.InternalMessageInfo

func (m *SdkVolumeSnapshotEnumerateResponse) GetVolumeSnapshotIds() []string {
	if m != nil {
		return m.VolumeSnapshotIds
	}
	return nil
}

// This request is an empty request
type SdkClusterEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterEnumerateRequest) Reset()         { *m = SdkClusterEnumerateRequest{} }
func (m *SdkClusterEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterEnumerateRequest) ProtoMessage()    {}
func (*SdkClusterEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{89}
}
func (m *SdkClusterEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkClusterEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterEnumerateRequest.Merge(dst, src)
}
func (m *SdkClusterEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterEnumerateRequest.Size(m)
}
func (m *SdkClusterEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterEnumerateRequest proto.InternalMessageInfo

// This response returns information about the cluster
type SdkClusterEnumerateResponse struct {
	// Cluster information
	Cluster              *StorageCluster `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SdkClusterEnumerateResponse) Reset()         { *m = SdkClusterEnumerateResponse{} }
func (m *SdkClusterEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterEnumerateResponse) ProtoMessage()    {}
func (*SdkClusterEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{90}
}
func (m *SdkClusterEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkClusterEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterEnumerateResponse.Merge(dst, src)
}
func (m *SdkClusterEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterEnumerateResponse.Size(m)
}
func (m *SdkClusterEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterEnumerateResponse proto.InternalMessageInfo

func (m *SdkClusterEnumerateResponse) GetCluster() *StorageCluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

// Contains the request when inspecting a node
type SdkClusterInspectRequest struct {
	// Id of node to inspect (required)
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterInspectRequest) Reset()         { *m = SdkClusterInspectRequest{} }
func (m *SdkClusterInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterInspectRequest) ProtoMessage()    {}
func (*SdkClusterInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{91}
}
func (m *SdkClusterInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterInspectRequest.Unmarshal(m, b)
}
func (m *SdkClusterInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterInspectRequest.Merge(dst, src)
}
func (m *SdkClusterInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterInspectRequest.Size(m)
}
func (m *SdkClusterInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterInspectRequest proto.InternalMessageInfo

func (m *SdkClusterInspectRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

// This response contains information about the respective node requested
type SdkClusterInspectResponse struct {
	// Node information
	Node                 *StorageNode `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SdkClusterInspectResponse) Reset()         { *m = SdkClusterInspectResponse{} }
func (m *SdkClusterInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterInspectResponse) ProtoMessage()    {}
func (*SdkClusterInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{92}
}
func (m *SdkClusterInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterInspectResponse.Unmarshal(m, b)
}
func (m *SdkClusterInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterInspectResponse.Merge(dst, src)
}
func (m *SdkClusterInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterInspectResponse.Size(m)
}
func (m *SdkClusterInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterInspectResponse proto.InternalMessageInfo

func (m *SdkClusterInspectResponse) GetNode() *StorageNode {
	if m != nil {
		return m.Node
	}
	return nil
}

// This request contains the information needed to get alerts from
// the storage system
type SdkClusterAlertEnumerateRequest struct {
	// Start time of alerts
	TimeStart *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time_start,json=timeStart" json:"time_start,omitempty"`
	// End time of alerts
	TimeEnd *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time_end,json=timeEnd" json:"time_end,omitempty"`
	// Type of resource
	Resource             ResourceType `protobuf:"varint,3,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SdkClusterAlertEnumerateRequest) Reset()         { *m = SdkClusterAlertEnumerateRequest{} }
func (m *SdkClusterAlertEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertEnumerateRequest) ProtoMessage()    {}
func (*SdkClusterAlertEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{93}
}
func (m *SdkClusterAlertEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkClusterAlertEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertEnumerateRequest.Merge(dst, src)
}
func (m *SdkClusterAlertEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertEnumerateRequest.Size(m)
}
func (m *SdkClusterAlertEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertEnumerateRequest proto.InternalMessageInfo

func (m *SdkClusterAlertEnumerateRequest) GetTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStart
	}
	return nil
}

func (m *SdkClusterAlertEnumerateRequest) GetTimeEnd() *timestamp.Timestamp {
	if m != nil {
		return m.TimeEnd
	}
	return nil
}

func (m *SdkClusterAlertEnumerateRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

// This response provides a list of the alerts at the specified time.
type SdkClusterAlertEnumerateResponse struct {
	// Information on the alerts requested
	Alerts               []*Alert `protobuf:"bytes,1,rep,name=alerts" json:"alerts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertEnumerateResponse) Reset()         { *m = SdkClusterAlertEnumerateResponse{} }
func (m *SdkClusterAlertEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertEnumerateResponse) ProtoMessage()    {}
func (*SdkClusterAlertEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{94}
}
func (m *SdkClusterAlertEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkClusterAlertEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertEnumerateResponse.Merge(dst, src)
}
func (m *SdkClusterAlertEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertEnumerateResponse.Size(m)
}
func (m *SdkClusterAlertEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertEnumerateResponse proto.InternalMessageInfo

func (m *SdkClusterAlertEnumerateResponse) GetAlerts() []*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

type SdkClusterAlertClearRequest struct {
	// Type of resource (required)
	Resource ResourceType `protobuf:"varint,1,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Id of alert as returned by ClusterEnumerateAlertResponse (required)
	AlertId              int64    `protobuf:"varint,2,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertClearRequest) Reset()         { *m = SdkClusterAlertClearRequest{} }
func (m *SdkClusterAlertClearRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertClearRequest) ProtoMessage()    {}
func (*SdkClusterAlertClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{95}
}
func (m *SdkClusterAlertClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertClearRequest.Unmarshal(m, b)
}
func (m *SdkClusterAlertClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertClearRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertClearRequest.Merge(dst, src)
}
func (m *SdkClusterAlertClearRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertClearRequest.Size(m)
}
func (m *SdkClusterAlertClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertClearRequest proto.InternalMessageInfo

func (m *SdkClusterAlertClearRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *SdkClusterAlertClearRequest) GetAlertId() int64 {
	if m != nil {
		return m.AlertId
	}
	return 0
}

type SdkClusterAlertClearResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertClearResponse) Reset()         { *m = SdkClusterAlertClearResponse{} }
func (m *SdkClusterAlertClearResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertClearResponse) ProtoMessage()    {}
func (*SdkClusterAlertClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{96}
}
func (m *SdkClusterAlertClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertClearResponse.Unmarshal(m, b)
}
func (m *SdkClusterAlertClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertClearResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertClearResponse.Merge(dst, src)
}
func (m *SdkClusterAlertClearResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertClearResponse.Size(m)
}
func (m *SdkClusterAlertClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertClearResponse proto.InternalMessageInfo

type SdkClusterAlertDeleteRequest struct {
	// Type of resource (required)
	Resource ResourceType `protobuf:"varint,1,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Id of alert as returned by ClusterEnumerateAlertResponse (required)
	AlertId              int64    `protobuf:"varint,2,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertDeleteRequest) Reset()         { *m = SdkClusterAlertDeleteRequest{} }
func (m *SdkClusterAlertDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertDeleteRequest) ProtoMessage()    {}
func (*SdkClusterAlertDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{97}
}
func (m *SdkClusterAlertDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertDeleteRequest.Unmarshal(m, b)
}
func (m *SdkClusterAlertDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertDeleteRequest.Merge(dst, src)
}
func (m *SdkClusterAlertDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertDeleteRequest.Size(m)
}
func (m *SdkClusterAlertDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertDeleteRequest proto.InternalMessageInfo

func (m *SdkClusterAlertDeleteRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *SdkClusterAlertDeleteRequest) GetAlertId() int64 {
	if m != nil {
		return m.AlertId
	}
	return 0
}

type SdkClusterAlertDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertDeleteResponse) Reset()         { *m = SdkClusterAlertDeleteResponse{} }
func (m *SdkClusterAlertDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertDeleteResponse) ProtoMessage()    {}
func (*SdkClusterAlertDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{98}
}
func (m *SdkClusterAlertDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertDeleteResponse.Unmarshal(m, b)
}
func (m *SdkClusterAlertDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertDeleteResponse.Merge(dst, src)
}
func (m *SdkClusterAlertDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertDeleteResponse.Size(m)
}
func (m *SdkClusterAlertDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertDeleteResponse proto.InternalMessageInfo

type SdkObjectstoreInspectRequest struct {
	// ObjecstoreID to query objestore status
	ObjectstoreId        string   `protobuf:"bytes,1,opt,name=objectstore_id,json=objectstoreId" json:"objectstore_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreInspectRequest) Reset()         { *m = SdkObjectstoreInspectRequest{} }
func (m *SdkObjectstoreInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreInspectRequest) ProtoMessage()    {}
func (*SdkObjectstoreInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{99}
}
func (m *SdkObjectstoreInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreInspectRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreInspectRequest.Merge(dst, src)
}
func (m *SdkObjectstoreInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreInspectRequest.Size(m)
}
func (m *SdkObjectstoreInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreInspectRequest proto.InternalMessageInfo

func (m *SdkObjectstoreInspectRequest) GetObjectstoreId() string {
	if m != nil {
		return m.ObjectstoreId
	}
	return ""
}

type SdkObjectstoreInspectResponse struct {
	// Objectstore status
	ObjectstoreStatus    *ObjectstoreInfo `protobuf:"bytes,1,opt,name=objectstore_status,json=objectstoreStatus" json:"objectstore_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SdkObjectstoreInspectResponse) Reset()         { *m = SdkObjectstoreInspectResponse{} }
func (m *SdkObjectstoreInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreInspectResponse) ProtoMessage()    {}
func (*SdkObjectstoreInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{100}
}
func (m *SdkObjectstoreInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreInspectResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreInspectResponse.Merge(dst, src)
}
func (m *SdkObjectstoreInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreInspectResponse.Size(m)
}
func (m *SdkObjectstoreInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreInspectResponse proto.InternalMessageInfo

func (m *SdkObjectstoreInspectResponse) GetObjectstoreStatus() *ObjectstoreInfo {
	if m != nil {
		return m.ObjectstoreStatus
	}
	return nil
}

type SdkObjectstoreCreateRequest struct {
	// Volume on which objectstore will be running
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreCreateRequest) Reset()         { *m = SdkObjectstoreCreateRequest{} }
func (m *SdkObjectstoreCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreCreateRequest) ProtoMessage()    {}
func (*SdkObjectstoreCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{101}
}
func (m *SdkObjectstoreCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreCreateRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreCreateRequest.Merge(dst, src)
}
func (m *SdkObjectstoreCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreCreateRequest.Size(m)
}
func (m *SdkObjectstoreCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreCreateRequest proto.InternalMessageInfo

func (m *SdkObjectstoreCreateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkObjectstoreCreateResponse struct {
	// Created objecstore status
	ObjectstoreStatus    *ObjectstoreInfo `protobuf:"bytes,1,opt,name=objectstore_status,json=objectstoreStatus" json:"objectstore_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SdkObjectstoreCreateResponse) Reset()         { *m = SdkObjectstoreCreateResponse{} }
func (m *SdkObjectstoreCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreCreateResponse) ProtoMessage()    {}
func (*SdkObjectstoreCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{102}
}
func (m *SdkObjectstoreCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreCreateResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreCreateResponse.Merge(dst, src)
}
func (m *SdkObjectstoreCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreCreateResponse.Size(m)
}
func (m *SdkObjectstoreCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreCreateResponse proto.InternalMessageInfo

func (m *SdkObjectstoreCreateResponse) GetObjectstoreStatus() *ObjectstoreInfo {
	if m != nil {
		return m.ObjectstoreStatus
	}
	return nil
}

type SdkObjectstoreDeleteRequest struct {
	// Objectstore ID to delete
	ObjectstoreId        string   `protobuf:"bytes,1,opt,name=objectstore_id,json=objectstoreId" json:"objectstore_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreDeleteRequest) Reset()         { *m = SdkObjectstoreDeleteRequest{} }
func (m *SdkObjectstoreDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreDeleteRequest) ProtoMessage()    {}
func (*SdkObjectstoreDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{103}
}
func (m *SdkObjectstoreDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreDeleteRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreDeleteRequest.Merge(dst, src)
}
func (m *SdkObjectstoreDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreDeleteRequest.Size(m)
}
func (m *SdkObjectstoreDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreDeleteRequest proto.InternalMessageInfo

func (m *SdkObjectstoreDeleteRequest) GetObjectstoreId() string {
	if m != nil {
		return m.ObjectstoreId
	}
	return ""
}

type SdkObjectstoreDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreDeleteResponse) Reset()         { *m = SdkObjectstoreDeleteResponse{} }
func (m *SdkObjectstoreDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreDeleteResponse) ProtoMessage()    {}
func (*SdkObjectstoreDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{104}
}
func (m *SdkObjectstoreDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreDeleteResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreDeleteResponse.Merge(dst, src)
}
func (m *SdkObjectstoreDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreDeleteResponse.Size(m)
}
func (m *SdkObjectstoreDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreDeleteResponse proto.InternalMessageInfo

type SdkObjectstoreUpdateRequest struct {
	// Objectstore Id to update
	ObjectstoreId string `protobuf:"bytes,1,opt,name=objectstore_id,json=objectstoreId" json:"objectstore_id,omitempty"`
	// enable/disable objectstore
	Enable               bool     `protobuf:"varint,2,opt,name=enable" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreUpdateRequest) Reset()         { *m = SdkObjectstoreUpdateRequest{} }
func (m *SdkObjectstoreUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreUpdateRequest) ProtoMessage()    {}
func (*SdkObjectstoreUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{105}
}
func (m *SdkObjectstoreUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreUpdateRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreUpdateRequest.Merge(dst, src)
}
func (m *SdkObjectstoreUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreUpdateRequest.Size(m)
}
func (m *SdkObjectstoreUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreUpdateRequest proto.InternalMessageInfo

func (m *SdkObjectstoreUpdateRequest) GetObjectstoreId() string {
	if m != nil {
		return m.ObjectstoreId
	}
	return ""
}

func (m *SdkObjectstoreUpdateRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type SdkObjectstoreUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreUpdateResponse) Reset()         { *m = SdkObjectstoreUpdateResponse{} }
func (m *SdkObjectstoreUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreUpdateResponse) ProtoMessage()    {}
func (*SdkObjectstoreUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{106}
}
func (m *SdkObjectstoreUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreUpdateResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreUpdateResponse.Merge(dst, src)
}
func (m *SdkObjectstoreUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreUpdateResponse.Size(m)
}
func (m *SdkObjectstoreUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreUpdateResponse proto.InternalMessageInfo

type SdkCloudBackupCreateRequest struct {
	// VolumeID of the volume for which cloudbackup is requested
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// CredentialUUID is cloud credential to be used for backup
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Full indicates if full backup is desired even though incremental is possible
	Full                 bool     `protobuf:"varint,3,opt,name=full" json:"full,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCreateRequest) Reset()         { *m = SdkCloudBackupCreateRequest{} }
func (m *SdkCloudBackupCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCreateRequest) ProtoMessage()    {}
func (*SdkCloudBackupCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{107}
}
func (m *SdkCloudBackupCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCreateRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCreateRequest.Merge(dst, src)
}
func (m *SdkCloudBackupCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCreateRequest.Size(m)
}
func (m *SdkCloudBackupCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCreateRequest proto.InternalMessageInfo

func (m *SdkCloudBackupCreateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkCloudBackupCreateRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupCreateRequest) GetFull() bool {
	if m != nil {
		return m.Full
	}
	return false
}

type SdkCloudBackupCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCreateResponse) Reset()         { *m = SdkCloudBackupCreateResponse{} }
func (m *SdkCloudBackupCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCreateResponse) ProtoMessage()    {}
func (*SdkCloudBackupCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{108}
}
func (m *SdkCloudBackupCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCreateResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCreateResponse.Merge(dst, src)
}
func (m *SdkCloudBackupCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCreateResponse.Size(m)
}
func (m *SdkCloudBackupCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCreateResponse proto.InternalMessageInfo

type SdkCloudBackupRestoreRequest struct {
	// Backup ID being restored
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// Optional volume Name of the new volume to be created
	// in the cluster for restoring the cloudbackup
	RestoreVolumeName string `protobuf:"bytes,2,opt,name=restore_volume_name,json=restoreVolumeName" json:"restore_volume_name,omitempty"`
	// The credential to be used for restore operation
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Optional for provisioning restore
	// volume (ResoreVolumeName should not be specified)
	NodeId               string   `protobuf:"bytes,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupRestoreRequest) Reset()         { *m = SdkCloudBackupRestoreRequest{} }
func (m *SdkCloudBackupRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupRestoreRequest) ProtoMessage()    {}
func (*SdkCloudBackupRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{109}
}
func (m *SdkCloudBackupRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupRestoreRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupRestoreRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupRestoreRequest.Merge(dst, src)
}
func (m *SdkCloudBackupRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupRestoreRequest.Size(m)
}
func (m *SdkCloudBackupRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupRestoreRequest proto.InternalMessageInfo

func (m *SdkCloudBackupRestoreRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupRestoreRequest) GetRestoreVolumeName() string {
	if m != nil {
		return m.RestoreVolumeName
	}
	return ""
}

func (m *SdkCloudBackupRestoreRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupRestoreRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type SdkCloudBackupRestoreResponse struct {
	// VolumeID to which the backup is being restored
	RestoreVolumeId      string   `protobuf:"bytes,1,opt,name=restore_volume_id,json=restoreVolumeId" json:"restore_volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupRestoreResponse) Reset()         { *m = SdkCloudBackupRestoreResponse{} }
func (m *SdkCloudBackupRestoreResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupRestoreResponse) ProtoMessage()    {}
func (*SdkCloudBackupRestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{110}
}
func (m *SdkCloudBackupRestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupRestoreResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupRestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupRestoreResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupRestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupRestoreResponse.Merge(dst, src)
}
func (m *SdkCloudBackupRestoreResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupRestoreResponse.Size(m)
}
func (m *SdkCloudBackupRestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupRestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupRestoreResponse proto.InternalMessageInfo

func (m *SdkCloudBackupRestoreResponse) GetRestoreVolumeId() string {
	if m != nil {
		return m.RestoreVolumeId
	}
	return ""
}

type SdkCloudBackupDeleteRequest struct {
	// ID is the ID of the cloud backup
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Force Delete cloudbackup even if there are dependencies
	Force                bool     `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteRequest) Reset()         { *m = SdkCloudBackupDeleteRequest{} }
func (m *SdkCloudBackupDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteRequest) ProtoMessage()    {}
func (*SdkCloudBackupDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{111}
}
func (m *SdkCloudBackupDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteRequest.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteRequest.Size(m)
}
func (m *SdkCloudBackupDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteRequest proto.InternalMessageInfo

func (m *SdkCloudBackupDeleteRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupDeleteRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupDeleteRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type SdkCloudBackupDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteResponse) Reset()         { *m = SdkCloudBackupDeleteResponse{} }
func (m *SdkCloudBackupDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteResponse) ProtoMessage()    {}
func (*SdkCloudBackupDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{112}
}
func (m *SdkCloudBackupDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteResponse.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteResponse.Size(m)
}
func (m *SdkCloudBackupDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteResponse proto.InternalMessageInfo

type SdkCloudBackupDeleteAllRequest struct {
	// id of the volume for the request
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid       string   `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteAllRequest) Reset()         { *m = SdkCloudBackupDeleteAllRequest{} }
func (m *SdkCloudBackupDeleteAllRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteAllRequest) ProtoMessage()    {}
func (*SdkCloudBackupDeleteAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{113}
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Size(m)
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteAllRequest proto.InternalMessageInfo

func (m *SdkCloudBackupDeleteAllRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupDeleteAllRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

type SdkCloudBackupDeleteAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteAllResponse) Reset()         { *m = SdkCloudBackupDeleteAllResponse{} }
func (m *SdkCloudBackupDeleteAllResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteAllResponse) ProtoMessage()    {}
func (*SdkCloudBackupDeleteAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{114}
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Size(m)
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteAllResponse proto.InternalMessageInfo

type SdkCloudBackupEnumerateRequest struct {
	// Optional source id of the volume for the request
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// ClusterID is the optional clusterID for the request
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// All if set to true, backups for all clusters in the cloud are processed
	All                  bool     `protobuf:"varint,4,opt,name=all" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupEnumerateRequest) Reset()         { *m = SdkCloudBackupEnumerateRequest{} }
func (m *SdkCloudBackupEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupEnumerateRequest) ProtoMessage()    {}
func (*SdkCloudBackupEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{115}
}
func (m *SdkCloudBackupEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupEnumerateRequest.Merge(dst, src)
}
func (m *SdkCloudBackupEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupEnumerateRequest.Size(m)
}
func (m *SdkCloudBackupEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupEnumerateRequest proto.InternalMessageInfo

func (m *SdkCloudBackupEnumerateRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupEnumerateRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *SdkCloudBackupEnumerateRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupEnumerateRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type SdkCloudBackupInfo struct {
	// ID is the ID of the cloud backup
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Source volumeID of the backup
	SrcVolumeId string `protobuf:"bytes,2,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// Name of the sourceVolume of the backup
	SrcVolumeName string `protobuf:"bytes,3,opt,name=src_volume_name,json=srcVolumeName" json:"src_volume_name,omitempty"`
	// Timestamp is the timestamp at which the source volume
	// was backed up to cloud
	Timestamp *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	// Metadata associated with the backup
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Status indicates the status of the backup
	Status               SdkCloudBackupStatusType `protobuf:"varint,6,opt,name=status,enum=openstorage.api.SdkCloudBackupStatusType" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SdkCloudBackupInfo) Reset()         { *m = SdkCloudBackupInfo{} }
func (m *SdkCloudBackupInfo) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupInfo) ProtoMessage()    {}
func (*SdkCloudBackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{116}
}
func (m *SdkCloudBackupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupInfo.Unmarshal(m, b)
}
func (m *SdkCloudBackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupInfo.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupInfo.Merge(dst, src)
}
func (m *SdkCloudBackupInfo) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupInfo.Size(m)
}
func (m *SdkCloudBackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupInfo proto.InternalMessageInfo

func (m *SdkCloudBackupInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SdkCloudBackupInfo) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupInfo) GetSrcVolumeName() string {
	if m != nil {
		return m.SrcVolumeName
	}
	return ""
}

func (m *SdkCloudBackupInfo) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SdkCloudBackupInfo) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SdkCloudBackupInfo) GetStatus() SdkCloudBackupStatusType {
	if m != nil {
		return m.Status
	}
	return SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown
}

type SdkCloudBackupEnumerateResponse struct {
	Backups              []*SdkCloudBackupInfo `protobuf:"bytes,1,rep,name=backups" json:"backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SdkCloudBackupEnumerateResponse) Reset()         { *m = SdkCloudBackupEnumerateResponse{} }
func (m *SdkCloudBackupEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupEnumerateResponse) ProtoMessage()    {}
func (*SdkCloudBackupEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{117}
}
func (m *SdkCloudBackupEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupEnumerateResponse.Merge(dst, src)
}
func (m *SdkCloudBackupEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupEnumerateResponse.Size(m)
}
func (m *SdkCloudBackupEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupEnumerateResponse proto.InternalMessageInfo

func (m *SdkCloudBackupEnumerateResponse) GetBackups() []*SdkCloudBackupInfo {
	if m != nil {
		return m.Backups
	}
	return nil
}

type SdkCloudBackupStatus struct {
	// ID is the ID for the operation
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// OpType indicates if this is a backup or restore
	Optype SdkCloudBackupOpType `protobuf:"varint,2,opt,name=optype,enum=openstorage.api.SdkCloudBackupOpType" json:"optype,omitempty"`
	// State indicates if the op is currently active/done/failed
	Status SdkCloudBackupStatusType `protobuf:"varint,3,opt,name=status,enum=openstorage.api.SdkCloudBackupStatusType" json:"status,omitempty"`
	// BytesDone indicates total Bytes uploaded/downloaded
	BytesDone uint64 `protobuf:"varint,4,opt,name=bytes_done,json=bytesDone" json:"bytes_done,omitempty"`
	// StartTime indicates Op's start time
	StartTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// CompletedTime indicates Op's completed time
	CompletedTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=completed_time,json=completedTime" json:"completed_time,omitempty"`
	// NodeID is the ID of the node where this Op is active
	NodeId               string   `protobuf:"bytes,7,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupStatus) Reset()         { *m = SdkCloudBackupStatus{} }
func (m *SdkCloudBackupStatus) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStatus) ProtoMessage()    {}
func (*SdkCloudBackupStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{118}
}
func (m *SdkCloudBackupStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStatus.Unmarshal(m, b)
}
func (m *SdkCloudBackupStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStatus.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStatus.Merge(dst, src)
}
func (m *SdkCloudBackupStatus) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStatus.Size(m)
}
func (m *SdkCloudBackupStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStatus proto.InternalMessageInfo

func (m *SdkCloudBackupStatus) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupStatus) GetOptype() SdkCloudBackupOpType {
	if m != nil {
		return m.Optype
	}
	return SdkCloudBackupOpType_SdkCloudBackupOpTypeUnknown
}

func (m *SdkCloudBackupStatus) GetStatus() SdkCloudBackupStatusType {
	if m != nil {
		return m.Status
	}
	return SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown
}

func (m *SdkCloudBackupStatus) GetBytesDone() uint64 {
	if m != nil {
		return m.BytesDone
	}
	return 0
}

func (m *SdkCloudBackupStatus) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *SdkCloudBackupStatus) GetCompletedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CompletedTime
	}
	return nil
}

func (m *SdkCloudBackupStatus) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type SdkCloudBackupStatusRequest struct {
	// SrcVolumeID optional volumeID to list status of backup/restore
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// Local indicates if only those backups/restores that are
	// active on current node must be returned
	Local                bool     `protobuf:"varint,2,opt,name=local" json:"local,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupStatusRequest) Reset()         { *m = SdkCloudBackupStatusRequest{} }
func (m *SdkCloudBackupStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStatusRequest) ProtoMessage()    {}
func (*SdkCloudBackupStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{119}
}
func (m *SdkCloudBackupStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStatusRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStatusRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStatusRequest.Merge(dst, src)
}
func (m *SdkCloudBackupStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStatusRequest.Size(m)
}
func (m *SdkCloudBackupStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStatusRequest proto.InternalMessageInfo

func (m *SdkCloudBackupStatusRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupStatusRequest) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

type SdkCloudBackupStatusResponse struct {
	// statuses is list of currently active/failed/done backup/restores
	Statuses             map[string]*SdkCloudBackupStatus `protobuf:"bytes,1,rep,name=statuses" json:"statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *SdkCloudBackupStatusResponse) Reset()         { *m = SdkCloudBackupStatusResponse{} }
func (m *SdkCloudBackupStatusResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStatusResponse) ProtoMessage()    {}
func (*SdkCloudBackupStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{120}
}
func (m *SdkCloudBackupStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStatusResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStatusResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStatusResponse.Merge(dst, src)
}
func (m *SdkCloudBackupStatusResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStatusResponse.Size(m)
}
func (m *SdkCloudBackupStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStatusResponse proto.InternalMessageInfo

func (m *SdkCloudBackupStatusResponse) GetStatuses() map[string]*SdkCloudBackupStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type SdkCloudBackupCatalogRequest struct {
	// Id of the backup
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// is the credential for cloud
	CredentialUuid       string   `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCatalogRequest) Reset()         { *m = SdkCloudBackupCatalogRequest{} }
func (m *SdkCloudBackupCatalogRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCatalogRequest) ProtoMessage()    {}
func (*SdkCloudBackupCatalogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{121}
}
func (m *SdkCloudBackupCatalogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCatalogRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupCatalogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCatalogRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCatalogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCatalogRequest.Merge(dst, src)
}
func (m *SdkCloudBackupCatalogRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCatalogRequest.Size(m)
}
func (m *SdkCloudBackupCatalogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCatalogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCatalogRequest proto.InternalMessageInfo

func (m *SdkCloudBackupCatalogRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupCatalogRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

type SdkCloudBackupCatalogResponse struct {
	// Contents is listing of backup contents
	Contents             []string `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCatalogResponse) Reset()         { *m = SdkCloudBackupCatalogResponse{} }
func (m *SdkCloudBackupCatalogResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCatalogResponse) ProtoMessage()    {}
func (*SdkCloudBackupCatalogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{122}
}
func (m *SdkCloudBackupCatalogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCatalogResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupCatalogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCatalogResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCatalogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCatalogResponse.Merge(dst, src)
}
func (m *SdkCloudBackupCatalogResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCatalogResponse.Size(m)
}
func (m *SdkCloudBackupCatalogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCatalogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCatalogResponse proto.InternalMessageInfo

func (m *SdkCloudBackupCatalogResponse) GetContents() []string {
	if m != nil {
		return m.Contents
	}
	return nil
}

type SdkCloudBackupHistoryItem struct {
	// SrcVolumeID is volume ID which was backedup
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// TimeStamp is the time at which either backup completed/failed
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	// Status indicates whether backup was completed/failed
	Status               SdkCloudBackupStatusType `protobuf:"varint,3,opt,name=status,enum=openstorage.api.SdkCloudBackupStatusType" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SdkCloudBackupHistoryItem) Reset()         { *m = SdkCloudBackupHistoryItem{} }
func (m *SdkCloudBackupHistoryItem) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupHistoryItem) ProtoMessage()    {}
func (*SdkCloudBackupHistoryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{123}
}
func (m *SdkCloudBackupHistoryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupHistoryItem.Unmarshal(m, b)
}
func (m *SdkCloudBackupHistoryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupHistoryItem.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupHistoryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupHistoryItem.Merge(dst, src)
}
func (m *SdkCloudBackupHistoryItem) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupHistoryItem.Size(m)
}
func (m *SdkCloudBackupHistoryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupHistoryItem.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupHistoryItem proto.InternalMessageInfo

func (m *SdkCloudBackupHistoryItem) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupHistoryItem) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SdkCloudBackupHistoryItem) GetStatus() SdkCloudBackupStatusType {
	if m != nil {
		return m.Status
	}
	return SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown
}

type SdkCloudBackupHistoryRequest struct {
	// volumeID for which history of backup/restore is being requested
	// (optional) If not provided, it will return the history for all volumes.
	SrcVolumeId          string   `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupHistoryRequest) Reset()         { *m = SdkCloudBackupHistoryRequest{} }
func (m *SdkCloudBackupHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupHistoryRequest) ProtoMessage()    {}
func (*SdkCloudBackupHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{124}
}
func (m *SdkCloudBackupHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupHistoryRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupHistoryRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupHistoryRequest.Merge(dst, src)
}
func (m *SdkCloudBackupHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupHistoryRequest.Size(m)
}
func (m *SdkCloudBackupHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupHistoryRequest proto.InternalMessageInfo

func (m *SdkCloudBackupHistoryRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

type SdkCloudBackupHistoryResponse struct {
	// HistoryList is list of past backup/restores in the cluster
	HistoryList          []*SdkCloudBackupHistoryItem `protobuf:"bytes,1,rep,name=history_list,json=historyList" json:"history_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SdkCloudBackupHistoryResponse) Reset()         { *m = SdkCloudBackupHistoryResponse{} }
func (m *SdkCloudBackupHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupHistoryResponse) ProtoMessage()    {}
func (*SdkCloudBackupHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{125}
}
func (m *SdkCloudBackupHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupHistoryResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupHistoryResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupHistoryResponse.Merge(dst, src)
}
func (m *SdkCloudBackupHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupHistoryResponse.Size(m)
}
func (m *SdkCloudBackupHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupHistoryResponse proto.InternalMessageInfo

func (m *SdkCloudBackupHistoryResponse) GetHistoryList() []*SdkCloudBackupHistoryItem {
	if m != nil {
		return m.HistoryList
	}
	return nil
}

type SdkCloudBackupStateChangeRequest struct {
	// SrcVolumeID is volume ID on which backup/restore
	// state change is being requested
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// RequestedState is desired state of the op
	// can be pause/resume/stop
	RequestedState       SdkCloudBackupRequestedState `protobuf:"varint,2,opt,name=requested_state,json=requestedState,enum=openstorage.api.SdkCloudBackupRequestedState" json:"requested_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SdkCloudBackupStateChangeRequest) Reset()         { *m = SdkCloudBackupStateChangeRequest{} }
func (m *SdkCloudBackupStateChangeRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStateChangeRequest) ProtoMessage()    {}
func (*SdkCloudBackupStateChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{126}
}
func (m *SdkCloudBackupStateChangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStateChangeRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupStateChangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStateChangeRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStateChangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStateChangeRequest.Merge(dst, src)
}
func (m *SdkCloudBackupStateChangeRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStateChangeRequest.Size(m)
}
func (m *SdkCloudBackupStateChangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStateChangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStateChangeRequest proto.InternalMessageInfo

func (m *SdkCloudBackupStateChangeRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupStateChangeRequest) GetRequestedState() SdkCloudBackupRequestedState {
	if m != nil {
		return m.RequestedState
	}
	return SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateUnknown
}

type SdkCloudBackupStateChangeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupStateChangeResponse) Reset()         { *m = SdkCloudBackupStateChangeResponse{} }
func (m *SdkCloudBackupStateChangeResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStateChangeResponse) ProtoMessage()    {}
func (*SdkCloudBackupStateChangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{127}
}
func (m *SdkCloudBackupStateChangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStateChangeResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupStateChangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStateChangeResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStateChangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStateChangeResponse.Merge(dst, src)
}
func (m *SdkCloudBackupStateChangeResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStateChangeResponse.Size(m)
}
func (m *SdkCloudBackupStateChangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStateChangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStateChangeResponse proto.InternalMessageInfo

type SdkCloudBackupScheduleInfo struct {
	// SrcVolumeID is the schedule's source volume
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// CredentialUUID is the cloud credential used with this schedule
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Schedule is the frequence of backup
	Schedule *SdkSchedulePolicyInterval `protobuf:"bytes,3,opt,name=schedule" json:"schedule,omitempty"`
	// MaxBackups are the maximum number of backups retained
	// in cloud.Older backups are deleted
	MaxBackups           uint64   `protobuf:"varint,4,opt,name=max_backups,json=maxBackups" json:"max_backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupScheduleInfo) Reset()         { *m = SdkCloudBackupScheduleInfo{} }
func (m *SdkCloudBackupScheduleInfo) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupScheduleInfo) ProtoMessage()    {}
func (*SdkCloudBackupScheduleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{128}
}
func (m *SdkCloudBackupScheduleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupScheduleInfo.Unmarshal(m, b)
}
func (m *SdkCloudBackupScheduleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupScheduleInfo.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupScheduleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupScheduleInfo.Merge(dst, src)
}
func (m *SdkCloudBackupScheduleInfo) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupScheduleInfo.Size(m)
}
func (m *SdkCloudBackupScheduleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupScheduleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupScheduleInfo proto.InternalMessageInfo

func (m *SdkCloudBackupScheduleInfo) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupScheduleInfo) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupScheduleInfo) GetSchedule() *SdkSchedulePolicyInterval {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *SdkCloudBackupScheduleInfo) GetMaxBackups() uint64 {
	if m != nil {
		return m.MaxBackups
	}
	return 0
}

type SdkCloudBackupSchedCreateRequest struct {
	// Cloud Backup Schedule info
	CloudSchedInfo       *SdkCloudBackupScheduleInfo `protobuf:"bytes,1,opt,name=cloud_sched_info,json=cloudSchedInfo" json:"cloud_sched_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SdkCloudBackupSchedCreateRequest) Reset()         { *m = SdkCloudBackupSchedCreateRequest{} }
func (m *SdkCloudBackupSchedCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupSchedCreateRequest) ProtoMessage()    {}
func (*SdkCloudBackupSchedCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{129}
}
func (m *SdkCloudBackupSchedCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupSchedCreateRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupSchedCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupSchedCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupSchedCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupSchedCreateRequest.Merge(dst, src)
}
func (m *SdkCloudBackupSchedCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupSchedCreateRequest.Size(m)
}
func (m *SdkCloudBackupSchedCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupSchedCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupSchedCreateRequest proto.InternalMessageInfo

func (m *SdkCloudBackupSchedCreateRequest) GetCloudSchedInfo() *SdkCloudBackupScheduleInfo {
	if m != nil {
		return m.CloudSchedInfo
	}
	return nil
}

type SdkCloudBackupSchedCreateResponse struct {
	// UUID of newly created backup schedule
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupSchedCreateResponse) Reset()         { *m = SdkCloudBackupSchedCreateResponse{} }
func (m *SdkCloudBackupSchedCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupSchedCreateResponse) ProtoMessage()    {}
func (*SdkCloudBackupSchedCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{130}
}
func (m *SdkCloudBackupSchedCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupSchedCreateResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupSchedCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupSchedCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupSchedCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupSchedCreateResponse.Merge(dst, src)
}
func (m *SdkCloudBackupSchedCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupSchedCreateResponse.Size(m)
}
func (m *SdkCloudBackupSchedCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupSchedCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupSchedCreateResponse proto.InternalMessageInfo

func (m *SdkCloudBackupSchedCreateResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type SdkCloudBackupSchedDeleteRequest struct {
	// UUID of cloud backup to delete
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupSchedDeleteRequest) Reset()         { *m = SdkCloudBackupSchedDeleteRequest{} }
func (m *SdkCloudBackupSchedDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupSchedDeleteRequest) ProtoMessage()    {}
func (*SdkCloudBackupSchedDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{131}
}
func (m *SdkCloudBackupSchedDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupSchedDeleteRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupSchedDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupSchedDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupSchedDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupSchedDeleteRequest.Merge(dst, src)
}
func (m *SdkCloudBackupSchedDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupSchedDeleteRequest.Size(m)
}
func (m *SdkCloudBackupSchedDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupSchedDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupSchedDeleteRequest proto.InternalMessageInfo

func (m *SdkCloudBackupSchedDeleteRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type SdkCloudBackupSchedDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupSchedDeleteResponse) Reset()         { *m = SdkCloudBackupSchedDeleteResponse{} }
func (m *SdkCloudBackupSchedDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupSchedDeleteResponse) ProtoMessage()    {}
func (*SdkCloudBackupSchedDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{132}
}
func (m *SdkCloudBackupSchedDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupSchedDeleteResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupSchedDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupSchedDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupSchedDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupSchedDeleteResponse.Merge(dst, src)
}
func (m *SdkCloudBackupSchedDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupSchedDeleteResponse.Size(m)
}
func (m *SdkCloudBackupSchedDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupSchedDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupSchedDeleteResponse proto.InternalMessageInfo

type SdkCloudBackupSchedEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupSchedEnumerateRequest) Reset()         { *m = SdkCloudBackupSchedEnumerateRequest{} }
func (m *SdkCloudBackupSchedEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupSchedEnumerateRequest) ProtoMessage()    {}
func (*SdkCloudBackupSchedEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{133}
}
func (m *SdkCloudBackupSchedEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupSchedEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupSchedEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupSchedEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupSchedEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupSchedEnumerateRequest.Merge(dst, src)
}
func (m *SdkCloudBackupSchedEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupSchedEnumerateRequest.Size(m)
}
func (m *SdkCloudBackupSchedEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupSchedEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupSchedEnumerateRequest proto.InternalMessageInfo

type SdkCloudBackupSchedEnumerateResponse struct {
	// Returns list of backup schedules
	CloudSchedList       map[string]*SdkCloudBackupScheduleInfo `protobuf:"bytes,1,rep,name=cloud_sched_list,json=cloudSchedList" json:"cloud_sched_list,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SdkCloudBackupSchedEnumerateResponse) Reset()         { *m = SdkCloudBackupSchedEnumerateResponse{} }
func (m *SdkCloudBackupSchedEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupSchedEnumerateResponse) ProtoMessage()    {}
func (*SdkCloudBackupSchedEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{134}
}
func (m *SdkCloudBackupSchedEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupSchedEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupSchedEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupSchedEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupSchedEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupSchedEnumerateResponse.Merge(dst, src)
}
func (m *SdkCloudBackupSchedEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupSchedEnumerateResponse.Size(m)
}
func (m *SdkCloudBackupSchedEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupSchedEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupSchedEnumerateResponse proto.InternalMessageInfo

func (m *SdkCloudBackupSchedEnumerateResponse) GetCloudSchedList() map[string]*SdkCloudBackupScheduleInfo {
	if m != nil {
		return m.CloudSchedList
	}
	return nil
}

type CloudMigrate struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudMigrate) Reset()         { *m = CloudMigrate{} }
func (m *CloudMigrate) String() string { return proto.CompactTextString(m) }
func (*CloudMigrate) ProtoMessage()    {}
func (*CloudMigrate) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{135}
}
func (m *CloudMigrate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudMigrate.Unmarshal(m, b)
}
func (m *CloudMigrate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudMigrate.Marshal(b, m, deterministic)
}
func (dst *CloudMigrate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudMigrate.Merge(dst, src)
}
func (m *CloudMigrate) XXX_Size() int {
	return xxx_messageInfo_CloudMigrate.Size(m)
}
func (m *CloudMigrate) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudMigrate.DiscardUnknown(m)
}

var xxx_messageInfo_CloudMigrate proto.InternalMessageInfo

// Request to start a cloud migration
type CloudMigrateStartRequest struct {
	// The type of operation to start
	Operation CloudMigrate_OperationType `protobuf:"varint,1,opt,name=operation,enum=openstorage.api.CloudMigrate_OperationType" json:"operation,omitempty"`
	// ID of the cluster to which volumes are to be migrated
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// Depending on the operation type this can be a VolumeID or VolumeGroupID
	TargetId             string   `protobuf:"bytes,3,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudMigrateStartRequest) Reset()         { *m = CloudMigrateStartRequest{} }
func (m *CloudMigrateStartRequest) String() string { return proto.CompactTextString(m) }
func (*CloudMigrateStartRequest) ProtoMessage()    {}
func (*CloudMigrateStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{136}
}
func (m *CloudMigrateStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudMigrateStartRequest.Unmarshal(m, b)
}
func (m *CloudMigrateStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudMigrateStartRequest.Marshal(b, m, deterministic)
}
func (dst *CloudMigrateStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudMigrateStartRequest.Merge(dst, src)
}
func (m *CloudMigrateStartRequest) XXX_Size() int {
	return xxx_messageInfo_CloudMigrateStartRequest.Size(m)
}
func (m *CloudMigrateStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudMigrateStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudMigrateStartRequest proto.InternalMessageInfo

func (m *CloudMigrateStartRequest) GetOperation() CloudMigrate_OperationType {
	if m != nil {
		return m.Operation
	}
	return CloudMigrate_InvalidType
}

func (m *CloudMigrateStartRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CloudMigrateStartRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

// Request to stop a cloud migration
type CloudMigrateCancelRequest struct {
	// The type of operation to cancel
	Operation CloudMigrate_OperationType `protobuf:"varint,1,opt,name=operation,enum=openstorage.api.CloudMigrate_OperationType" json:"operation,omitempty"`
	// ID of the cluster to which migration should be cancelled
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// Depending on the operation type this can be a VolumeID or VolumeGroupID
	TargetId             string   `protobuf:"bytes,3,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudMigrateCancelRequest) Reset()         { *m = CloudMigrateCancelRequest{} }
func (m *CloudMigrateCancelRequest) String() string { return proto.CompactTextString(m) }
func (*CloudMigrateCancelRequest) ProtoMessage()    {}
func (*CloudMigrateCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{137}
}
func (m *CloudMigrateCancelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudMigrateCancelRequest.Unmarshal(m, b)
}
func (m *CloudMigrateCancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudMigrateCancelRequest.Marshal(b, m, deterministic)
}
func (dst *CloudMigrateCancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudMigrateCancelRequest.Merge(dst, src)
}
func (m *CloudMigrateCancelRequest) XXX_Size() int {
	return xxx_messageInfo_CloudMigrateCancelRequest.Size(m)
}
func (m *CloudMigrateCancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudMigrateCancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudMigrateCancelRequest proto.InternalMessageInfo

func (m *CloudMigrateCancelRequest) GetOperation() CloudMigrate_OperationType {
	if m != nil {
		return m.Operation
	}
	return CloudMigrate_InvalidType
}

func (m *CloudMigrateCancelRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CloudMigrateCancelRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

type CloudMigrateInfo struct {
	// ID of the cluster where the volume is being migrated
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// ID of the volume on the local cluster
	LocalVolumeId string `protobuf:"bytes,2,opt,name=local_volume_id,json=localVolumeId" json:"local_volume_id,omitempty"`
	// Name of the volume on the local cluster
	LocalVolumeName string `protobuf:"bytes,3,opt,name=local_volume_name,json=localVolumeName" json:"local_volume_name,omitempty"`
	// ID of the volume on the remote cluster
	RemoteVolumeId string `protobuf:"bytes,4,opt,name=remote_volume_id,json=remoteVolumeId" json:"remote_volume_id,omitempty"`
	// ID of the cloudbackup used for the migration
	CloudbackupId string `protobuf:"bytes,5,opt,name=cloudbackup_id,json=cloudbackupId" json:"cloudbackup_id,omitempty"`
	// Current stage of the volume migration
	CurrentStage CloudMigrate_Stage `protobuf:"varint,6,opt,name=current_stage,json=currentStage,enum=openstorage.api.CloudMigrate_Stage" json:"current_stage,omitempty"`
	// Status of the current stage
	Status CloudMigrate_Status `protobuf:"varint,7,opt,name=status,enum=openstorage.api.CloudMigrate_Status" json:"status,omitempty"`
	// Last time the status was updated
	LastUpdate *timestamp.Timestamp `protobuf:"bytes,8,opt,name=last_update,json=lastUpdate" json:"last_update,omitempty"`
	// Time of the last successful migration of the volume
	LastSuccess          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_success,json=lastSuccess" json:"last_success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CloudMigrateInfo) Reset()         { *m = CloudMigrateInfo{} }
func (m *CloudMigrateInfo) String() string { return proto.CompactTextString(m) }
func (*CloudMigrateInfo) ProtoMessage()    {}
func (*CloudMigrateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{138}
}
func (m *CloudMigrateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudMigrateInfo.Unmarshal(m, b)
}
func (m *CloudMigrateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudMigrateInfo.Marshal(b, m, deterministic)
}
func (dst *CloudMigrateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudMigrateInfo.Merge(dst, src)
}
func (m *CloudMigrateInfo) XXX_Size() int {
	return xxx_messageInfo_CloudMigrateInfo.Size(m)
}
func (m *CloudMigrateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudMigrateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CloudMigrateInfo proto.InternalMessageInfo

func (m *CloudMigrateInfo) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CloudMigrateInfo) GetLocalVolumeId() string {
	if m != nil {
		return m.LocalVolumeId
	}
	return ""
}

func (m *CloudMigrateInfo) GetLocalVolumeName() string {
	if m != nil {
		return m.LocalVolumeName
	}
	return ""
}

func (m *CloudMigrateInfo) GetRemoteVolumeId() string {
	if m != nil {
		return m.RemoteVolumeId
	}
	return ""
}

func (m *CloudMigrateInfo) GetCloudbackupId() string {
	if m != nil {
		return m.CloudbackupId
	}
	return ""
}

func (m *CloudMigrateInfo) GetCurrentStage() CloudMigrate_Stage {
	if m != nil {
		return m.CurrentStage
	}
	return CloudMigrate_InvalidStage
}

func (m *CloudMigrateInfo) GetStatus() CloudMigrate_Status {
	if m != nil {
		return m.Status
	}
	return CloudMigrate_InvalidStatus
}

func (m *CloudMigrateInfo) GetLastUpdate() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *CloudMigrateInfo) GetLastSuccess() *timestamp.Timestamp {
	if m != nil {
		return m.LastSuccess
	}
	return nil
}

type CloudMigrateInfoList struct {
	List                 []*CloudMigrateInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CloudMigrateInfoList) Reset()         { *m = CloudMigrateInfoList{} }
func (m *CloudMigrateInfoList) String() string { return proto.CompactTextString(m) }
func (*CloudMigrateInfoList) ProtoMessage()    {}
func (*CloudMigrateInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{139}
}
func (m *CloudMigrateInfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudMigrateInfoList.Unmarshal(m, b)
}
func (m *CloudMigrateInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudMigrateInfoList.Marshal(b, m, deterministic)
}
func (dst *CloudMigrateInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudMigrateInfoList.Merge(dst, src)
}
func (m *CloudMigrateInfoList) XXX_Size() int {
	return xxx_messageInfo_CloudMigrateInfoList.Size(m)
}
func (m *CloudMigrateInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudMigrateInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_CloudMigrateInfoList proto.InternalMessageInfo

func (m *CloudMigrateInfoList) GetList() []*CloudMigrateInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// Response with a status of the cloud migration operations
type CloudMigrateStatusResponse struct {
	// Map of cluster id to the status of volumes being migrated
	Info                 map[string]*CloudMigrateInfoList `protobuf:"bytes,1,rep,name=info" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CloudMigrateStatusResponse) Reset()         { *m = CloudMigrateStatusResponse{} }
func (m *CloudMigrateStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CloudMigrateStatusResponse) ProtoMessage()    {}
func (*CloudMigrateStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4884044d9f25f52, []int{140}
}
func (m *CloudMigrateStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudMigrateStatusResponse.Unmarshal(m, b)
}
func (m *CloudMigrateStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudMigrateStatusResponse.Marshal(b, m, deterministic)
}
func (dst *CloudMigrateStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudMigrateStatusResponse.Merge(dst, src)
}
func (m *CloudMigrateStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CloudMigrateStatusResponse.Size(m)
}
func (m *CloudMigrateStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudMigrateStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudMigrateStatusResponse proto.InternalMessageInfo

func (m *CloudMigrateStatusResponse) GetInfo() map[string]*CloudMigrateInfoList {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*StorageResource)(nil), "openstorage.api.StorageResource")
	proto.RegisterType((*StoragePool)(nil), "openstorage.api.StoragePool")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.StoragePool.LabelsEntry")
	proto.RegisterType((*VolumeLocator)(nil), "openstorage.api.VolumeLocator")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeLocator.VolumeLabelsEntry")
	proto.RegisterType((*Source)(nil), "openstorage.api.Source")
	proto.RegisterType((*Group)(nil), "openstorage.api.Group")
	proto.RegisterType((*VolumeSpec)(nil), "openstorage.api.VolumeSpec")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSpec.VolumeLabelsEntry")
	proto.RegisterType((*VolumeSpecSet)(nil), "openstorage.api.VolumeSpecSet")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSpecSet.VolumeLabelsEntry")
	proto.RegisterType((*ReplicaSet)(nil), "openstorage.api.ReplicaSet")
	proto.RegisterType((*RuntimeStateMap)(nil), "openstorage.api.RuntimeStateMap")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.RuntimeStateMap.RuntimeStateEntry")
	proto.RegisterType((*Volume)(nil), "openstorage.api.Volume")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.Volume.AttachInfoEntry")
	proto.RegisterType((*Stats)(nil), "openstorage.api.Stats")
	proto.RegisterType((*Alert)(nil), "openstorage.api.Alert")
	proto.RegisterType((*Alerts)(nil), "openstorage.api.Alerts")
	proto.RegisterType((*ObjectstoreInfo)(nil), "openstorage.api.ObjectstoreInfo")
	proto.RegisterType((*VolumeCreateRequest)(nil), "openstorage.api.VolumeCreateRequest")
	proto.RegisterType((*VolumeResponse)(nil), "openstorage.api.VolumeResponse")
	proto.RegisterType((*VolumeCreateResponse)(nil), "openstorage.api.VolumeCreateResponse")
	proto.RegisterType((*VolumeStateAction)(nil), "openstorage.api.VolumeStateAction")
	proto.RegisterType((*VolumeSetRequest)(nil), "openstorage.api.VolumeSetRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSetRequest.OptionsEntry")
	proto.RegisterType((*VolumeSetResponse)(nil), "openstorage.api.VolumeSetResponse")
	proto.RegisterType((*SnapCreateRequest)(nil), "openstorage.api.SnapCreateRequest")
	proto.RegisterType((*SnapCreateResponse)(nil), "openstorage.api.SnapCreateResponse")
	proto.RegisterType((*VolumeInfo)(nil), "openstorage.api.VolumeInfo")
	proto.RegisterType((*VolumeConsumer)(nil), "openstorage.api.VolumeConsumer")
	proto.RegisterType((*GraphDriverChanges)(nil), "openstorage.api.GraphDriverChanges")
	proto.RegisterType((*ClusterResponse)(nil), "openstorage.api.ClusterResponse")
	proto.RegisterType((*ActiveRequest)(nil), "openstorage.api.ActiveRequest")
	proto.RegisterMapType((map[int64]string)(nil), "openstorage.api.ActiveRequest.ReqestKVEntry")
	proto.RegisterType((*ActiveRequests)(nil), "openstorage.api.ActiveRequests")
	proto.RegisterType((*GroupSnapCreateRequest)(nil), "openstorage.api.GroupSnapCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.GroupSnapCreateRequest.LabelsEntry")
	proto.RegisterType((*GroupSnapCreateResponse)(nil), "openstorage.api.GroupSnapCreateResponse")
	proto.RegisterMapType((map[string]*SnapCreateResponse)(nil), "openstorage.api.GroupSnapCreateResponse.SnapshotsEntry")
	proto.RegisterType((*StorageNode)(nil), "openstorage.api.StorageNode")
	proto.RegisterMapType((map[string]*StorageResource)(nil), "openstorage.api.StorageNode.DisksEntry")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.StorageNode.NodeLabelsEntry")
	proto.RegisterType((*StorageCluster)(nil), "openstorage.api.StorageCluster")
	proto.RegisterType((*SdkSchedulePolicyCreateRequest)(nil), "openstorage.api.SdkSchedulePolicyCreateRequest")
	proto.RegisterType((*SdkSchedulePolicyCreateResponse)(nil), "openstorage.api.SdkSchedulePolicyCreateResponse")
	proto.RegisterType((*SdkSchedulePolicyUpdateRequest)(nil), "openstorage.api.SdkSchedulePolicyUpdateRequest")
	proto.RegisterType((*SdkSchedulePolicyUpdateResponse)(nil), "openstorage.api.SdkSchedulePolicyUpdateResponse")
	proto.RegisterType((*SdkSchedulePolicyEnumerateRequest)(nil), "openstorage.api.SdkSchedulePolicyEnumerateRequest")
	proto.RegisterType((*SdkSchedulePolicyEnumerateResponse)(nil), "openstorage.api.SdkSchedulePolicyEnumerateResponse")
	proto.RegisterType((*SdkSchedulePolicyInspectRequest)(nil), "openstorage.api.SdkSchedulePolicyInspectRequest")
	proto.RegisterType((*SdkSchedulePolicyInspectResponse)(nil), "openstorage.api.SdkSchedulePolicyInspectResponse")
	proto.RegisterType((*SdkSchedulePolicyDeleteRequest)(nil), "openstorage.api.SdkSchedulePolicyDeleteRequest")
	proto.RegisterType((*SdkSchedulePolicyDeleteResponse)(nil), "openstorage.api.SdkSchedulePolicyDeleteResponse")
	proto.RegisterType((*SdkSchedulePolicyIntervalDaily)(nil), "openstorage.api.SdkSchedulePolicyIntervalDaily")
	proto.RegisterType((*SdkSchedulePolicyIntervalWeekly)(nil), "openstorage.api.SdkSchedulePolicyIntervalWeekly")
	proto.RegisterType((*SdkSchedulePolicyIntervalMonthly)(nil), "openstorage.api.SdkSchedulePolicyIntervalMonthly")
	proto.RegisterType((*SdkSchedulePolicyInterval)(nil), "openstorage.api.SdkSchedulePolicyInterval")
	proto.RegisterType((*SdkSchedulePolicy)(nil), "openstorage.api.SdkSchedulePolicy")
	proto.RegisterType((*SdkCredentialCreateRequest)(nil), "openstorage.api.SdkCredentialCreateRequest")
	proto.RegisterType((*SdkCredentialCreateResponse)(nil), "openstorage.api.SdkCredentialCreateResponse")
	proto.RegisterType((*SdkAwsCredentialRequest)(nil), "openstorage.api.SdkAwsCredentialRequest")
	proto.RegisterType((*SdkAzureCredentialRequest)(nil), "openstorage.api.SdkAzureCredentialRequest")
	proto.RegisterType((*SdkGoogleCredentialRequest)(nil), "openstorage.api.SdkGoogleCredentialRequest")
	proto.RegisterType((*SdkAwsCredentialResponse)(nil), "openstorage.api.SdkAwsCredentialResponse")
	proto.RegisterType((*SdkAzureCredentialResponse)(nil), "openstorage.api.SdkAzureCredentialResponse")
	proto.RegisterType((*SdkGoogleCredentialResponse)(nil), "openstorage.api.SdkGoogleCredentialResponse")
	proto.RegisterType((*SdkCredentialEnumerateRequest)(nil), "openstorage.api.SdkCredentialEnumerateRequest")
	proto.RegisterType((*SdkCredentialEnumerateResponse)(nil), "openstorage.api.SdkCredentialEnumerateResponse")
	proto.RegisterType((*SdkCredentialInspectRequest)(nil), "openstorage.api.SdkCredentialInspectRequest")
	proto.RegisterType((*SdkCredentialInspectResponse)(nil), "openstorage.api.SdkCredentialInspectResponse")
	proto.RegisterType((*SdkCredentialDeleteRequest)(nil), "openstorage.api.SdkCredentialDeleteRequest")
	proto.RegisterType((*SdkCredentialDeleteResponse)(nil), "openstorage.api.SdkCredentialDeleteResponse")
	proto.RegisterType((*SdkCredentialValidateRequest)(nil), "openstorage.api.SdkCredentialValidateRequest")
	proto.RegisterType((*SdkCredentialValidateResponse)(nil), "openstorage.api.SdkCredentialValidateResponse")
	proto.RegisterType((*SdkVolumeMountRequest)(nil), "openstorage.api.SdkVolumeMountRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeMountRequest.OptionsEntry")
	proto.RegisterType((*SdkVolumeMountResponse)(nil), "openstorage.api.SdkVolumeMountResponse")
	proto.RegisterType((*SdkVolumeUnmountRequest)(nil), "openstorage.api.SdkVolumeUnmountRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeUnmountRequest.OptionsEntry")
	proto.RegisterType((*SdkVolumeUnmountResponse)(nil), "openstorage.api.SdkVolumeUnmountResponse")
	proto.RegisterType((*SdkVolumeAttachRequest)(nil), "openstorage.api.SdkVolumeAttachRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeAttachRequest.OptionsEntry")
	proto.RegisterType((*SdkVolumeAttachResponse)(nil), "openstorage.api.SdkVolumeAttachResponse")
	proto.RegisterType((*SdkVolumeDetachRequest)(nil), "openstorage.api.SdkVolumeDetachRequest")
	proto.RegisterType((*SdkVolumeDetachResponse)(nil), "openstorage.api.SdkVolumeDetachResponse")
	proto.RegisterType((*SdkVolumeCreateRequest)(nil), "openstorage.api.SdkVolumeCreateRequest")
	proto.RegisterType((*SdkVolumeCreateResponse)(nil), "openstorage.api.SdkVolumeCreateResponse")
	proto.RegisterType((*SdkVolumeCloneRequest)(nil), "openstorage.api.SdkVolumeCloneRequest")
	proto.RegisterType((*SdkVolumeCloneResponse)(nil), "openstorage.api.SdkVolumeCloneResponse")
	proto.RegisterType((*SdkVolumeDeleteRequest)(nil), "openstorage.api.SdkVolumeDeleteRequest")
	proto.RegisterType((*SdkVolumeDeleteResponse)(nil), "openstorage.api.SdkVolumeDeleteResponse")
	proto.RegisterType((*SdkVolumeInspectRequest)(nil), "openstorage.api.SdkVolumeInspectRequest")
	proto.RegisterType((*SdkVolumeInspectResponse)(nil), "openstorage.api.SdkVolumeInspectResponse")
	proto.RegisterType((*SdkVolumeSetRequest)(nil), "openstorage.api.SdkVolumeSetRequest")
	proto.RegisterType((*SdkVolumeSetResponse)(nil), "openstorage.api.SdkVolumeSetResponse")
	proto.RegisterType((*SdkVolumeEnumerateRequest)(nil), "openstorage.api.SdkVolumeEnumerateRequest")
	proto.RegisterType((*SdkVolumeEnumerateResponse)(nil), "openstorage.api.SdkVolumeEnumerateResponse")
	proto.RegisterType((*SdkVolumeSnapshotCreateRequest)(nil), "openstorage.api.SdkVolumeSnapshotCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeSnapshotCreateRequest.LabelsEntry")
	proto.RegisterType((*SdkVolumeSnapshotCreateResponse)(nil), "openstorage.api.SdkVolumeSnapshotCreateResponse")
	proto.RegisterType((*SdkVolumeSnapshotRestoreRequest)(nil), "openstorage.api.SdkVolumeSnapshotRestoreRequest")
	proto.RegisterType((*SdkVolumeSnapshotRestoreResponse)(nil), "openstorage.api.SdkVolumeSnapshotRestoreResponse")
	proto.RegisterType((*SdkVolumeSnapshotEnumerateRequest)(nil), "openstorage.api.SdkVolumeSnapshotEnumerateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeSnapshotEnumerateRequest.LabelsEntry")
	proto.RegisterType((*SdkVolumeSnapshotEnumerateResponse)(nil), "openstorage.api.SdkVolumeSnapshotEnumerateResponse")
	proto.RegisterType((*SdkClusterEnumerateRequest)(nil), "openstorage.api.SdkClusterEnumerateRequest")
	proto.RegisterType((*SdkClusterEnumerateResponse)(nil), "openstorage.api.SdkClusterEnumerateResponse")
	proto.RegisterType((*SdkClusterInspectRequest)(nil), "openstorage.api.SdkClusterInspectRequest")
	proto.RegisterType((*SdkClusterInspectResponse)(nil), "openstorage.api.SdkClusterInspectResponse")
	proto.RegisterType((*SdkClusterAlertEnumerateRequest)(nil), "openstorage.api.SdkClusterAlertEnumerateRequest")
	proto.RegisterType((*SdkClusterAlertEnumerateResponse)(nil), "openstorage.api.SdkClusterAlertEnumerateResponse")
	proto.RegisterType((*SdkClusterAlertClearRequest)(nil), "openstorage.api.SdkClusterAlertClearRequest")
	proto.RegisterType((*SdkClusterAlertClearResponse)(nil), "openstorage.api.SdkClusterAlertClearResponse")
	proto.RegisterType((*SdkClusterAlertDeleteRequest)(nil), "openstorage.api.SdkClusterAlertDeleteRequest")
	proto.RegisterType((*SdkClusterAlertDeleteResponse)(nil), "openstorage.api.SdkClusterAlertDeleteResponse")
	proto.RegisterType((*SdkObjectstoreInspectRequest)(nil), "openstorage.api.SdkObjectstoreInspectRequest")
	proto.RegisterType((*SdkObjectstoreInspectResponse)(nil), "openstorage.api.SdkObjectstoreInspectResponse")
	proto.RegisterType((*SdkObjectstoreCreateRequest)(nil), "openstorage.api.SdkObjectstoreCreateRequest")
	proto.RegisterType((*SdkObjectstoreCreateResponse)(nil), "openstorage.api.SdkObjectstoreCreateResponse")
	proto.RegisterType((*SdkObjectstoreDeleteRequest)(nil), "openstorage.api.SdkObjectstoreDeleteRequest")
	proto.RegisterType((*SdkObjectstoreDeleteResponse)(nil), "openstorage.api.SdkObjectstoreDeleteResponse")
	proto.RegisterType((*SdkObjectstoreUpdateRequest)(nil), "openstorage.api.SdkObjectstoreUpdateRequest")
	proto.RegisterType((*SdkObjectstoreUpdateResponse)(nil), "openstorage.api.SdkObjectstoreUpdateResponse")
	proto.RegisterType((*SdkCloudBackupCreateRequest)(nil), "openstorage.api.SdkCloudBackupCreateRequest")
	proto.RegisterType((*SdkCloudBackupCreateResponse)(nil), "openstorage.api.SdkCloudBackupCreateResponse")
	proto.RegisterType((*SdkCloudBackupRestoreRequest)(nil), "openstorage.api.SdkCloudBackupRestoreRequest")
	proto.RegisterType((*SdkCloudBackupRestoreResponse)(nil), "openstorage.api.SdkCloudBackupRestoreResponse")
	proto.RegisterType((*SdkCloudBackupDeleteRequest)(nil), "openstorage.api.SdkCloudBackupDeleteRequest")
	proto.RegisterType((*SdkCloudBackupDeleteResponse)(nil), "openstorage.api.SdkCloudBackupDeleteResponse")
	proto.RegisterType((*SdkCloudBackupDeleteAllRequest)(nil), "openstorage.api.SdkCloudBackupDeleteAllRequest")
	proto.RegisterType((*SdkCloudBackupDeleteAllResponse)(nil), "openstorage.api.SdkCloudBackupDeleteAllResponse")
	proto.RegisterType((*SdkCloudBackupEnumerateRequest)(nil), "openstorage.api.SdkCloudBackupEnumerateRequest")
	proto.RegisterType((*SdkCloudBackupInfo)(nil), "openstorage.api.SdkCloudBackupInfo")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkCloudBackupInfo.MetadataEntry")
	proto.RegisterType((*SdkCloudBackupEnumerateResponse)(nil), "openstorage.api.SdkCloudBackupEnumerateResponse")
	proto.RegisterType((*SdkCloudBackupStatus)(nil), "openstorage.api.SdkCloudBackupStatus")
	proto.RegisterType((*SdkCloudBackupStatusRequest)(nil), "openstorage.api.SdkCloudBackupStatusRequest")
	proto.RegisterType((*SdkCloudBackupStatusResponse)(nil), "openstorage.api.SdkCloudBackupStatusResponse")
	proto.RegisterMapType((map[string]*SdkCloudBackupStatus)(nil), "openstorage.api.SdkCloudBackupStatusResponse.StatusesEntry")
	proto.RegisterType((*SdkCloudBackupCatalogRequest)(nil), "openstorage.api.SdkCloudBackupCatalogRequest")
	proto.RegisterType((*SdkCloudBackupCatalogResponse)(nil), "openstorage.api.SdkCloudBackupCatalogResponse")
	proto.RegisterType((*SdkCloudBackupHistoryItem)(nil), "openstorage.api.SdkCloudBackupHistoryItem")
	proto.RegisterType((*SdkCloudBackupHistoryRequest)(nil), "openstorage.api.SdkCloudBackupHistoryRequest")
	proto.RegisterType((*SdkCloudBackupHistoryResponse)(nil), "openstorage.api.SdkCloudBackupHistoryResponse")
	proto.RegisterType((*SdkCloudBackupStateChangeRequest)(nil), "openstorage.api.SdkCloudBackupStateChangeRequest")
	proto.RegisterType((*SdkCloudBackupStateChangeResponse)(nil), "openstorage.api.SdkCloudBackupStateChangeResponse")
	proto.RegisterType((*SdkCloudBackupScheduleInfo)(nil), "openstorage.api.SdkCloudBackupScheduleInfo")
	proto.RegisterType((*SdkCloudBackupSchedCreateRequest)(nil), "openstorage.api.SdkCloudBackupSchedCreateRequest")
	proto.RegisterType((*SdkCloudBackupSchedCreateResponse)(nil), "openstorage.api.SdkCloudBackupSchedCreateResponse")
	proto.RegisterType((*SdkCloudBackupSchedDeleteRequest)(nil), "openstorage.api.SdkCloudBackupSchedDeleteRequest")
	proto.RegisterType((*SdkCloudBackupSchedDeleteResponse)(nil), "openstorage.api.SdkCloudBackupSchedDeleteResponse")
	proto.RegisterType((*SdkCloudBackupSchedEnumerateRequest)(nil), "openstorage.api.SdkCloudBackupSchedEnumerateRequest")
	proto.RegisterType((*SdkCloudBackupSchedEnumerateResponse)(nil), "openstorage.api.SdkCloudBackupSchedEnumerateResponse")
	proto.RegisterMapType((map[string]*SdkCloudBackupScheduleInfo)(nil), "openstorage.api.SdkCloudBackupSchedEnumerateResponse.CloudSchedListEntry")
	proto.RegisterType((*CloudMigrate)(nil), "openstorage.api.CloudMigrate")
	proto.RegisterType((*CloudMigrateStartRequest)(nil), "openstorage.api.CloudMigrateStartRequest")
	proto.RegisterType((*CloudMigrateCancelRequest)(nil), "openstorage.api.CloudMigrateCancelRequest")
	proto.RegisterType((*CloudMigrateInfo)(nil), "openstorage.api.CloudMigrateInfo")
	proto.RegisterType((*CloudMigrateInfoList)(nil), "openstorage.api.CloudMigrateInfoList")
	proto.RegisterType((*CloudMigrateStatusResponse)(nil), "openstorage.api.CloudMigrateStatusResponse")
	proto.RegisterMapType((map[string]*CloudMigrateInfoList)(nil), "openstorage.api.CloudMigrateStatusResponse.InfoEntry")
	proto.RegisterEnum("openstorage.api.Status", Status_name, Status_value)
	proto.RegisterEnum("openstorage.api.DriverType", DriverType_name, DriverType_value)
	proto.RegisterEnum("openstorage.api.FSType", FSType_name, FSType_value)
	proto.RegisterEnum("openstorage.api.GraphDriverChangeType", GraphDriverChangeType_name, GraphDriverChangeType_value)
	proto.RegisterEnum("openstorage.api.SeverityType", SeverityType_name, SeverityType_value)
	proto.RegisterEnum("openstorage.api.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterEnum("openstorage.api.AlertActionType", AlertActionType_name, AlertActionType_value)
	proto.RegisterEnum("openstorage.api.VolumeActionParam", VolumeActionParam_name, VolumeActionParam_value)
	proto.RegisterEnum("openstorage.api.CosType", CosType_name, CosType_value)
	proto.RegisterEnum("openstorage.api.IoProfile", IoProfile_name, IoProfile_value)
	proto.RegisterEnum("openstorage.api.VolumeState", VolumeState_name, VolumeState_value)
	proto.RegisterEnum("openstorage.api.VolumeStatus", VolumeStatus_name, VolumeStatus_value)
	proto.RegisterEnum("openstorage.api.StorageMedium", StorageMedium_name, StorageMedium_value)
	proto.RegisterEnum("openstorage.api.ClusterNotify", ClusterNotify_name, ClusterNotify_value)
	proto.RegisterEnum("openstorage.api.AttachState", AttachState_name, AttachState_value)
	proto.RegisterEnum("openstorage.api.OperationFlags", OperationFlags_name, OperationFlags_value)
	proto.RegisterEnum("openstorage.api.SdkTimeWeekday", SdkTimeWeekday_name, SdkTimeWeekday_value)
	proto.RegisterEnum("openstorage.api.SdkCloudBackupOpType", SdkCloudBackupOpType_name, SdkCloudBackupOpType_value)
	proto.RegisterEnum("openstorage.api.SdkCloudBackupStatusType", SdkCloudBackupStatusType_name, SdkCloudBackupStatusType_value)
	proto.RegisterEnum("openstorage.api.SdkCloudBackupRequestedState", SdkCloudBackupRequestedState_name, SdkCloudBackupRequestedState_value)
	proto.RegisterEnum("openstorage.api.CloudMigrate_OperationType", CloudMigrate_OperationType_name, CloudMigrate_OperationType_value)
	proto.RegisterEnum("openstorage.api.CloudMigrate_Stage", CloudMigrate_Stage_name, CloudMigrate_Stage_value)
	proto.RegisterEnum("openstorage.api.CloudMigrate_Status", CloudMigrate_Status_name, CloudMigrate_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OpenStorageCluster service

type OpenStorageClusterClient interface {
	// Enumerate returns information about the cluster and the unique ids of
	// all the nodes in the cluster.
	Enumerate(ctx context.Context, in *SdkClusterEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterEnumerateResponse, error)
	// Inspect returns information about the specified node
	Inspect(ctx context.Context, in *SdkClusterInspectRequest, opts ...grpc.CallOption) (*SdkClusterInspectResponse, error)
	// AlertEnumerate returns a list of alerts from the storage cluster
	AlertEnumerate(ctx context.Context, in *SdkClusterAlertEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterAlertEnumerateResponse, error)
	// AlertClear clears the alert for a given resource
	AlertClear(ctx context.Context, in *SdkClusterAlertClearRequest, opts ...grpc.CallOption) (*SdkClusterAlertClearResponse, error)
	// AlertDelete deletes an alert for all resources
	AlertDelete(ctx context.Context, in *SdkClusterAlertDeleteRequest, opts ...grpc.CallOption) (*SdkClusterAlertDeleteResponse, error)
}

type openStorageClusterClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageClusterClient(cc *grpc.ClientConn) OpenStorageClusterClient {
	return &openStorageClusterClient{cc}
}

func (c *openStorageClusterClient) Enumerate(ctx context.Context, in *SdkClusterEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterEnumerateResponse, error) {
	out := new(SdkClusterEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) Inspect(ctx context.Context, in *SdkClusterInspectRequest, opts ...grpc.CallOption) (*SdkClusterInspectResponse, error) {
	out := new(SdkClusterInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertEnumerate(ctx context.Context, in *SdkClusterAlertEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterAlertEnumerateResponse, error) {
	out := new(SdkClusterAlertEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertEnumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertClear(ctx context.Context, in *SdkClusterAlertClearRequest, opts ...grpc.CallOption) (*SdkClusterAlertClearResponse, error) {
	out := new(SdkClusterAlertClearResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertClear", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertDelete(ctx context.Context, in *SdkClusterAlertDeleteRequest, opts ...grpc.CallOption) (*SdkClusterAlertDeleteResponse, error) {
	out := new(SdkClusterAlertDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCluster service

type OpenStorageClusterServer interface {
	// Enumerate returns information about the cluster and the unique ids of
	// all the nodes in the cluster.
	Enumerate(context.Context, *SdkClusterEnumerateRequest) (*SdkClusterEnumerateResponse, error)
	// Inspect returns information about the specified node
	Inspect(context.Context, *SdkClusterInspectRequest) (*SdkClusterInspectResponse, error)
	// AlertEnumerate returns a list of alerts from the storage cluster
	AlertEnumerate(context.Context, *SdkClusterAlertEnumerateRequest) (*SdkClusterAlertEnumerateResponse, error)
	// AlertClear clears the alert for a given resource
	AlertClear(context.Context, *SdkClusterAlertClearRequest) (*SdkClusterAlertClearResponse, error)
	// AlertDelete deletes an alert for all resources
	AlertDelete(context.Context, *SdkClusterAlertDeleteRequest) (*SdkClusterAlertDeleteResponse, error)
}

func RegisterOpenStorageClusterServer(s *grpc.Server, srv OpenStorageClusterServer) {
	s.RegisterService(&_OpenStorageCluster_serviceDesc, srv)
}

func _OpenStorageCluster_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).Enumerate(ctx, req.(*SdkClusterEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).Inspect(ctx, req.(*SdkClusterInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertEnumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterAlertEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertEnumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertEnumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertEnumerate(ctx, req.(*SdkClusterAlertEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertClear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterAlertClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertClear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertClear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertClear(ctx, req.(*SdkClusterAlertClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterAlertDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertDelete(ctx, req.(*SdkClusterAlertDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCluster",
	HandlerType: (*OpenStorageClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageCluster_Enumerate_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageCluster_Inspect_Handler,
		},
		{
			MethodName: "AlertEnumerate",
			Handler:    _OpenStorageCluster_AlertEnumerate_Handler,
		},
		{
			MethodName: "AlertClear",
			Handler:    _OpenStorageCluster_AlertClear_Handler,
		},
		{
			MethodName: "AlertDelete",
			Handler:    _OpenStorageCluster_AlertDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageVolume service

type OpenStorageVolumeClient interface {
	// Create creates a volume according to the specification provided
	//
	// ##### Example
	// {% codetabs name="Golang", type="go" -%}
	// id, err := client.Create(context.Background(), &api.SdkVolumeCreateRequest{
	//   Name: "volume-12345-east",
	//   Spec: &api.VolumeSpec {
	//     Size: 1234567,
	//   },
	// })
	// {%- language name="Python", type="py" -%}
	// en_resp = client.Create(api_pb2.SdkVolumeCreateRequest(
	//   name="volume-12345-east",
	//   spec=api_pb2.VolumeSpec(size=1234567)))
	// {%- endcodetabs %}
	Create(ctx context.Context, in *SdkVolumeCreateRequest, opts ...grpc.CallOption) (*SdkVolumeCreateResponse, error)
	// Clone creates a new writable volume cloned from an existing volume
	Clone(ctx context.Context, in *SdkVolumeCloneRequest, opts ...grpc.CallOption) (*SdkVolumeCloneResponse, error)
	// Delete deletes the provided volume
	Delete(ctx context.Context, in *SdkVolumeDeleteRequest, opts ...grpc.CallOption) (*SdkVolumeDeleteResponse, error)
	// Inspect returns information about a volume
	Inspect(ctx context.Context, in *SdkVolumeInspectRequest, opts ...grpc.CallOption) (*SdkVolumeInspectResponse, error)
	// Set provides a method for manipulating the specification and attributes of a volume.
	// Set can be used to resize a volume, update labels, change replica count, and much more.
	Set(ctx context.Context, in *SdkVolumeSetRequest, opts ...grpc.CallOption) (*SdkVolumeSetResponse, error)
	// Enumerate returns a list of volume ids that match the labels if any are provided.
	Enumerate(ctx context.Context, in *SdkVolumeEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeEnumerateResponse, error)
	// SnapshotCreate creates a snapshot of a volume. This creates an immutable (read-only),
	// point-in-time snapshot of a volume.
	SnapshotCreate(ctx context.Context, in *SdkVolumeSnapshotCreateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotCreateResponse, error)
	// SnapshotRestore restores a volume to a specified snapshot
	SnapshotRestore(ctx context.Context, in *SdkVolumeSnapshotRestoreRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotRestoreResponse, error)
	// SnapshotEnumerate returns a list of snapshots for a specific volume
	// that match the labels provided if any.
	SnapshotEnumerate(ctx context.Context, in *SdkVolumeSnapshotEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotEnumerateResponse, error)
	// Attach attaches device to the host that the client is communicating with.
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Attach(ctx context.Context, in *SdkVolumeAttachRequest, opts ...grpc.CallOption) (*SdkVolumeAttachResponse, error)
	// Detaches a the volume from the host that the client is communicating with
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Detach(ctx context.Context, in *SdkVolumeDetachRequest, opts ...grpc.CallOption) (*SdkVolumeDetachResponse, error)
	// Mount mounts an attached volume in the host that the client is communicating with
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Mount(ctx context.Context, in *SdkVolumeMountRequest, opts ...grpc.CallOption) (*SdkVolumeMountResponse, error)
	// Unmount unmounts a mounted volume in the host that the client is communicating with
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Unmount(ctx context.Context, in *SdkVolumeUnmountRequest, opts ...grpc.CallOption) (*SdkVolumeUnmountResponse, error)
}

type openStorageVolumeClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageVolumeClient(cc *grpc.ClientConn) OpenStorageVolumeClient {
	return &openStorageVolumeClient{cc}
}

func (c *openStorageVolumeClient) Create(ctx context.Context, in *SdkVolumeCreateRequest, opts ...grpc.CallOption) (*SdkVolumeCreateResponse, error) {
	out := new(SdkVolumeCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Clone(ctx context.Context, in *SdkVolumeCloneRequest, opts ...grpc.CallOption) (*SdkVolumeCloneResponse, error) {
	out := new(SdkVolumeCloneResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Clone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Delete(ctx context.Context, in *SdkVolumeDeleteRequest, opts ...grpc.CallOption) (*SdkVolumeDeleteResponse, error) {
	out := new(SdkVolumeDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Inspect(ctx context.Context, in *SdkVolumeInspectRequest, opts ...grpc.CallOption) (*SdkVolumeInspectResponse, error) {
	out := new(SdkVolumeInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Set(ctx context.Context, in *SdkVolumeSetRequest, opts ...grpc.CallOption) (*SdkVolumeSetResponse, error) {
	out := new(SdkVolumeSetResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Set", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Enumerate(ctx context.Context, in *SdkVolumeEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeEnumerateResponse, error) {
	out := new(SdkVolumeEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotCreate(ctx context.Context, in *SdkVolumeSnapshotCreateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotCreateResponse, error) {
	out := new(SdkVolumeSnapshotCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotRestore(ctx context.Context, in *SdkVolumeSnapshotRestoreRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotRestoreResponse, error) {
	out := new(SdkVolumeSnapshotRestoreResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotRestore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotEnumerate(ctx context.Context, in *SdkVolumeSnapshotEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotEnumerateResponse, error) {
	out := new(SdkVolumeSnapshotEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotEnumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Attach(ctx context.Context, in *SdkVolumeAttachRequest, opts ...grpc.CallOption) (*SdkVolumeAttachResponse, error) {
	out := new(SdkVolumeAttachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Attach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Detach(ctx context.Context, in *SdkVolumeDetachRequest, opts ...grpc.CallOption) (*SdkVolumeDetachResponse, error) {
	out := new(SdkVolumeDetachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Detach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Mount(ctx context.Context, in *SdkVolumeMountRequest, opts ...grpc.CallOption) (*SdkVolumeMountResponse, error) {
	out := new(SdkVolumeMountResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Mount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Unmount(ctx context.Context, in *SdkVolumeUnmountRequest, opts ...grpc.CallOption) (*SdkVolumeUnmountResponse, error) {
	out := new(SdkVolumeUnmountResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Unmount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageVolume service

type OpenStorageVolumeServer interface {
	// Create creates a volume according to the specification provided
	//
	// ##### Example
	// {% codetabs name="Golang", type="go" -%}
	// id, err := client.Create(context.Background(), &api.SdkVolumeCreateRequest{
	//   Name: "volume-12345-east",
	//   Spec: &api.VolumeSpec {
	//     Size: 1234567,
	//   },
	// })
	// {%- language name="Python", type="py" -%}
	// en_resp = client.Create(api_pb2.SdkVolumeCreateRequest(
	//   name="volume-12345-east",
	//   spec=api_pb2.VolumeSpec(size=1234567)))
	// {%- endcodetabs %}
	Create(context.Context, *SdkVolumeCreateRequest) (*SdkVolumeCreateResponse, error)
	// Clone creates a new writable volume cloned from an existing volume
	Clone(context.Context, *SdkVolumeCloneRequest) (*SdkVolumeCloneResponse, error)
	// Delete deletes the provided volume
	Delete(context.Context, *SdkVolumeDeleteRequest) (*SdkVolumeDeleteResponse, error)
	// Inspect returns information about a volume
	Inspect(context.Context, *SdkVolumeInspectRequest) (*SdkVolumeInspectResponse, error)
	// Set provides a method for manipulating the specification and attributes of a volume.
	// Set can be used to resize a volume, update labels, change replica count, and much more.
	Set(context.Context, *SdkVolumeSetRequest) (*SdkVolumeSetResponse, error)
	// Enumerate returns a list of volume ids that match the labels if any are provided.
	Enumerate(context.Context, *SdkVolumeEnumerateRequest) (*SdkVolumeEnumerateResponse, error)
	// SnapshotCreate creates a snapshot of a volume. This creates an immutable (read-only),
	// point-in-time snapshot of a volume.
	SnapshotCreate(context.Context, *SdkVolumeSnapshotCreateRequest) (*SdkVolumeSnapshotCreateResponse, error)
	// SnapshotRestore restores a volume to a specified snapshot
	SnapshotRestore(context.Context, *SdkVolumeSnapshotRestoreRequest) (*SdkVolumeSnapshotRestoreResponse, error)
	// SnapshotEnumerate returns a list of snapshots for a specific volume
	// that match the labels provided if any.
	SnapshotEnumerate(context.Context, *SdkVolumeSnapshotEnumerateRequest) (*SdkVolumeSnapshotEnumerateResponse, error)
	// Attach attaches device to the host that the client is communicating with.
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Attach(context.Context, *SdkVolumeAttachRequest) (*SdkVolumeAttachResponse, error)
	// Detaches a the volume from the host that the client is communicating with
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Detach(context.Context, *SdkVolumeDetachRequest) (*SdkVolumeDetachResponse, error)
	// Mount mounts an attached volume in the host that the client is communicating with
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Mount(context.Context, *SdkVolumeMountRequest) (*SdkVolumeMountResponse, error)
	// Unmount unmounts a mounted volume in the host that the client is communicating with
	// NOTE: Please see [#381](https://github.com/libopenstorage/openstorage/issues/381) for more
	// information about a new feature to allow attachment to any node.
	Unmount(context.Context, *SdkVolumeUnmountRequest) (*SdkVolumeUnmountResponse, error)
}

func RegisterOpenStorageVolumeServer(s *grpc.Server, srv OpenStorageVolumeServer) {
	s.RegisterService(&_OpenStorageVolume_serviceDesc, srv)
}

func _OpenStorageVolume_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Create(ctx, req.(*SdkVolumeCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Clone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeCloneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Clone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Clone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Clone(ctx, req.(*SdkVolumeCloneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Delete(ctx, req.(*SdkVolumeDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Inspect(ctx, req.(*SdkVolumeInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Set(ctx, req.(*SdkVolumeSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Enumerate(ctx, req.(*SdkVolumeEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeSnapshotCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotCreate(ctx, req.(*SdkVolumeSnapshotCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeSnapshotRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotRestore(ctx, req.(*SdkVolumeSnapshotRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotEnumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeSnapshotEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotEnumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotEnumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotEnumerate(ctx, req.(*SdkVolumeSnapshotEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Attach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeAttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Attach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Attach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Attach(ctx, req.(*SdkVolumeAttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Detach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeDetachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Detach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Detach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Detach(ctx, req.(*SdkVolumeDetachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Mount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeMountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Mount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Mount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Mount(ctx, req.(*SdkVolumeMountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Unmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeUnmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Unmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Unmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Unmount(ctx, req.(*SdkVolumeUnmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageVolume_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageVolume",
	HandlerType: (*OpenStorageVolumeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageVolume_Create_Handler,
		},
		{
			MethodName: "Clone",
			Handler:    _OpenStorageVolume_Clone_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageVolume_Delete_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageVolume_Inspect_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _OpenStorageVolume_Set_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageVolume_Enumerate_Handler,
		},
		{
			MethodName: "SnapshotCreate",
			Handler:    _OpenStorageVolume_SnapshotCreate_Handler,
		},
		{
			MethodName: "SnapshotRestore",
			Handler:    _OpenStorageVolume_SnapshotRestore_Handler,
		},
		{
			MethodName: "SnapshotEnumerate",
			Handler:    _OpenStorageVolume_SnapshotEnumerate_Handler,
		},
		{
			MethodName: "Attach",
			Handler:    _OpenStorageVolume_Attach_Handler,
		},
		{
			MethodName: "Detach",
			Handler:    _OpenStorageVolume_Detach_Handler,
		},
		{
			MethodName: "Mount",
			Handler:    _OpenStorageVolume_Mount_Handler,
		},
		{
			MethodName: "Unmount",
			Handler:    _OpenStorageVolume_Unmount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageObjectstore service

type OpenStorageObjectstoreClient interface {
	// Inspect returns information about the object store endpoint
	Inspect(ctx context.Context, in *SdkObjectstoreInspectRequest, opts ...grpc.CallOption) (*SdkObjectstoreInspectResponse, error)
	// Creates creates an object store endpoint on specified volume
	Create(ctx context.Context, in *SdkObjectstoreCreateRequest, opts ...grpc.CallOption) (*SdkObjectstoreCreateResponse, error)
	// Delete destroys the object store endpoint on the volume
	Delete(ctx context.Context, in *SdkObjectstoreDeleteRequest, opts ...grpc.CallOption) (*SdkObjectstoreDeleteResponse, error)
	// Updates provided objectstore status.
	// This call can be used to stop and start the server while maintaining the same
	// object storage id.
	Update(ctx context.Context, in *SdkObjectstoreUpdateRequest, opts ...grpc.CallOption) (*SdkObjectstoreUpdateResponse, error)
}

type openStorageObjectstoreClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageObjectstoreClient(cc *grpc.ClientConn) OpenStorageObjectstoreClient {
	return &openStorageObjectstoreClient{cc}
}

func (c *openStorageObjectstoreClient) Inspect(ctx context.Context, in *SdkObjectstoreInspectRequest, opts ...grpc.CallOption) (*SdkObjectstoreInspectResponse, error) {
	out := new(SdkObjectstoreInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageObjectstoreClient) Create(ctx context.Context, in *SdkObjectstoreCreateRequest, opts ...grpc.CallOption) (*SdkObjectstoreCreateResponse, error) {
	out := new(SdkObjectstoreCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageObjectstoreClient) Delete(ctx context.Context, in *SdkObjectstoreDeleteRequest, opts ...grpc.CallOption) (*SdkObjectstoreDeleteResponse, error) {
	out := new(SdkObjectstoreDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageObjectstoreClient) Update(ctx context.Context, in *SdkObjectstoreUpdateRequest, opts ...grpc.CallOption) (*SdkObjectstoreUpdateResponse, error) {
	out := new(SdkObjectstoreUpdateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageObjectstore service

type OpenStorageObjectstoreServer interface {
	// Inspect returns information about the object store endpoint
	Inspect(context.Context, *SdkObjectstoreInspectRequest) (*SdkObjectstoreInspectResponse, error)
	// Creates creates an object store endpoint on specified volume
	Create(context.Context, *SdkObjectstoreCreateRequest) (*SdkObjectstoreCreateResponse, error)
	// Delete destroys the object store endpoint on the volume
	Delete(context.Context, *SdkObjectstoreDeleteRequest) (*SdkObjectstoreDeleteResponse, error)
	// Updates provided objectstore status.
	// This call can be used to stop and start the server while maintaining the same
	// object storage id.
	Update(context.Context, *SdkObjectstoreUpdateRequest) (*SdkObjectstoreUpdateResponse, error)
}

func RegisterOpenStorageObjectstoreServer(s *grpc.Server, srv OpenStorageObjectstoreServer) {
	s.RegisterService(&_OpenStorageObjectstore_serviceDesc, srv)
}

func _OpenStorageObjectstore_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Inspect(ctx, req.(*SdkObjectstoreInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageObjectstore_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Create(ctx, req.(*SdkObjectstoreCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageObjectstore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Delete(ctx, req.(*SdkObjectstoreDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageObjectstore_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Update(ctx, req.(*SdkObjectstoreUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageObjectstore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageObjectstore",
	HandlerType: (*OpenStorageObjectstoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageObjectstore_Inspect_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _OpenStorageObjectstore_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageObjectstore_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OpenStorageObjectstore_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageCredentials service

type OpenStorageCredentialsClient interface {
	// Create is used to submit cloud credentials. It will return an
	// id of the credentials once they are verified to work.
	//
	// ##### Example
	// {% codetabs name="Golang", type="go" -%}
	// id, err := client.Create(context.Background(), &api.SdkCredentialCreateRequest{
	//   CredentialType: &api.SdkCredentialCreateRequest_AwsCredential{
	//     AwsCredential: &api.SdkAwsCredentialRequest{
	//     AccessKey: "dummy-access",
	//     SecretKey: "dummy-secret",
	//     Endpoint:  "dummy-endpoint",
	//     Region:    "dummy-region",
	//   },
	// })
	// {%- language name="Python", type="py" -%}
	// en_resp = client.Create(api_pb2.SdkCredentialCreateRequest(
	//   aws_credential=api_pb2.SdkAwsCredentialRequest(
	//     access_key='dummy-access',
	//     secret_key='dumm-secret',
	//     endpoint='dummy-endpoint',
	//     region='dummy-region')))
	// {%- endcodetabs %}
	Create(ctx context.Context, in *SdkCredentialCreateRequest, opts ...grpc.CallOption) (*SdkCredentialCreateResponse, error)
	// Enumerate returns a list of credential ids
	Enumerate(ctx context.Context, in *SdkCredentialEnumerateRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateResponse, error)
	// Inspect returns the information about a credential, but does not return the secret key.
	Inspect(ctx context.Context, in *SdkCredentialInspectRequest, opts ...grpc.CallOption) (*SdkCredentialInspectResponse, error)
	// Delete a specified credential
	Delete(ctx context.Context, in *SdkCredentialDeleteRequest, opts ...grpc.CallOption) (*SdkCredentialDeleteResponse, error)
	// Validate is used to validate credentials
	Validate(ctx context.Context, in *SdkCredentialValidateRequest, opts ...grpc.CallOption) (*SdkCredentialValidateResponse, error)
}

type openStorageCredentialsClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageCredentialsClient(cc *grpc.ClientConn) OpenStorageCredentialsClient {
	return &openStorageCredentialsClient{cc}
}

func (c *openStorageCredentialsClient) Create(ctx context.Context, in *SdkCredentialCreateRequest, opts ...grpc.CallOption) (*SdkCredentialCreateResponse, error) {
	out := new(SdkCredentialCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) Enumerate(ctx context.Context, in *SdkCredentialEnumerateRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateResponse, error) {
	out := new(SdkCredentialEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) Inspect(ctx context.Context, in *SdkCredentialInspectRequest, opts ...grpc.CallOption) (*SdkCredentialInspectResponse, error) {
	out := new(SdkCredentialInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) Delete(ctx context.Context, in *SdkCredentialDeleteRequest, opts ...grpc.CallOption) (*SdkCredentialDeleteResponse, error) {
	out := new(SdkCredentialDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) Validate(ctx context.Context, in *SdkCredentialValidateRequest, opts ...grpc.CallOption) (*SdkCredentialValidateResponse, error) {
	out := new(SdkCredentialValidateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/Validate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCredentials service

type OpenStorageCredentialsServer interface {
	// Create is used to submit cloud credentials. It will return an
	// id of the credentials once they are verified to work.
	//
	// ##### Example
	// {% codetabs name="Golang", type="go" -%}
	// id, err := client.Create(context.Background(), &api.SdkCredentialCreateRequest{
	//   CredentialType: &api.SdkCredentialCreateRequest_AwsCredential{
	//     AwsCredential: &api.SdkAwsCredentialRequest{
	//     AccessKey: "dummy-access",
	//     SecretKey: "dummy-secret",
	//     Endpoint:  "dummy-endpoint",
	//     Region:    "dummy-region",
	//   },
	// })
	// {%- language name="Python", type="py" -%}
	// en_resp = client.Create(api_pb2.SdkCredentialCreateRequest(
	//   aws_credential=api_pb2.SdkAwsCredentialRequest(
	//     access_key='dummy-access',
	//     secret_key='dumm-secret',
	//     endpoint='dummy-endpoint',
	//     region='dummy-region')))
	// {%- endcodetabs %}
	Create(context.Context, *SdkCredentialCreateRequest) (*SdkCredentialCreateResponse, error)
	// Enumerate returns a list of credential ids
	Enumerate(context.Context, *SdkCredentialEnumerateRequest) (*SdkCredentialEnumerateResponse, error)
	// Inspect returns the information about a credential, but does not return the secret key.
	Inspect(context.Context, *SdkCredentialInspectRequest) (*SdkCredentialInspectResponse, error)
	// Delete a specified credential
	Delete(context.Context, *SdkCredentialDeleteRequest) (*SdkCredentialDeleteResponse, error)
	// Validate is used to validate credentials
	Validate(context.Context, *SdkCredentialValidateRequest) (*SdkCredentialValidateResponse, error)
}

func RegisterOpenStorageCredentialsServer(s *grpc.Server, srv OpenStorageCredentialsServer) {
	s.RegisterService(&_OpenStorageCredentials_serviceDesc, srv)
}

func _OpenStorageCredentials_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).Create(ctx, req.(*SdkCredentialCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).Enumerate(ctx, req.(*SdkCredentialEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).Inspect(ctx, req.(*SdkCredentialInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).Delete(ctx, req.(*SdkCredentialDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).Validate(ctx, req.(*SdkCredentialValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCredentials_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCredentials",
	HandlerType: (*OpenStorageCredentialsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageCredentials_Create_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageCredentials_Enumerate_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageCredentials_Inspect_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageCredentials_Delete_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _OpenStorageCredentials_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageSchedulePolicy service

type OpenStorageSchedulePolicyClient interface {
	// Create creates a new snapshot schedule. They can be setup daily,
	// weekly, or monthly.
	Create(ctx context.Context, in *SdkSchedulePolicyCreateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyCreateResponse, error)
	// Update a snapshot schedule
	Update(ctx context.Context, in *SdkSchedulePolicyUpdateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyUpdateResponse, error)
	// Enumerate returns a list of schedules
	Enumerate(ctx context.Context, in *SdkSchedulePolicyEnumerateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyEnumerateResponse, error)
	// Inspect returns information about a specified schedule
	Inspect(ctx context.Context, in *SdkSchedulePolicyInspectRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyInspectResponse, error)
	// Delete removes a snapshot schedule
	Delete(ctx context.Context, in *SdkSchedulePolicyDeleteRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyDeleteResponse, error)
}

type openStorageSchedulePolicyClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageSchedulePolicyClient(cc *grpc.ClientConn) OpenStorageSchedulePolicyClient {
	return &openStorageSchedulePolicyClient{cc}
}

func (c *openStorageSchedulePolicyClient) Create(ctx context.Context, in *SdkSchedulePolicyCreateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyCreateResponse, error) {
	out := new(SdkSchedulePolicyCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Update(ctx context.Context, in *SdkSchedulePolicyUpdateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyUpdateResponse, error) {
	out := new(SdkSchedulePolicyUpdateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Enumerate(ctx context.Context, in *SdkSchedulePolicyEnumerateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyEnumerateResponse, error) {
	out := new(SdkSchedulePolicyEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Inspect(ctx context.Context, in *SdkSchedulePolicyInspectRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyInspectResponse, error) {
	out := new(SdkSchedulePolicyInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Delete(ctx context.Context, in *SdkSchedulePolicyDeleteRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyDeleteResponse, error) {
	out := new(SdkSchedulePolicyDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageSchedulePolicy service

type OpenStorageSchedulePolicyServer interface {
	// Create creates a new snapshot schedule. They can be setup daily,
	// weekly, or monthly.
	Create(context.Context, *SdkSchedulePolicyCreateRequest) (*SdkSchedulePolicyCreateResponse, error)
	// Update a snapshot schedule
	Update(context.Context, *SdkSchedulePolicyUpdateRequest) (*SdkSchedulePolicyUpdateResponse, error)
	// Enumerate returns a list of schedules
	Enumerate(context.Context, *SdkSchedulePolicyEnumerateRequest) (*SdkSchedulePolicyEnumerateResponse, error)
	// Inspect returns information about a specified schedule
	Inspect(context.Context, *SdkSchedulePolicyInspectRequest) (*SdkSchedulePolicyInspectResponse, error)
	// Delete removes a snapshot schedule
	Delete(context.Context, *SdkSchedulePolicyDeleteRequest) (*SdkSchedulePolicyDeleteResponse, error)
}

func RegisterOpenStorageSchedulePolicyServer(s *grpc.Server, srv OpenStorageSchedulePolicyServer) {
	s.RegisterService(&_OpenStorageSchedulePolicy_serviceDesc, srv)
}

func _OpenStorageSchedulePolicy_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Create(ctx, req.(*SdkSchedulePolicyCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Update(ctx, req.(*SdkSchedulePolicyUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Enumerate(ctx, req.(*SdkSchedulePolicyEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Inspect(ctx, req.(*SdkSchedulePolicyInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Delete(ctx, req.(*SdkSchedulePolicyDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageSchedulePolicy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageSchedulePolicy",
	HandlerType: (*OpenStorageSchedulePolicyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageSchedulePolicy_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OpenStorageSchedulePolicy_Update_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageSchedulePolicy_Enumerate_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageSchedulePolicy_Inspect_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageSchedulePolicy_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageCloudBackup service

type OpenStorageCloudBackupClient interface {
	// Creates a backup request for a specified volume. Use
	// OpenStorageCloudBackup.Status() to get the current status of the
	// backup request.
	Create(ctx context.Context, in *SdkCloudBackupCreateRequest, opts ...grpc.CallOption) (*SdkCloudBackupCreateResponse, error)
	// Restore creates a new volume from a backup id. The newly created volume
	// has an ha_level (number of replicas) of only 1. To increase the number of
	// replicas, use OpenStorageVolume.Set() to change the ha_level.
	Restore(ctx context.Context, in *SdkCloudBackupRestoreRequest, opts ...grpc.CallOption) (*SdkCloudBackupRestoreResponse, error)
	// Delete deletes a backup stored in the cloud. If the backup is an incremental
	// backup and other backups are dependent on it, it will not be able to be deleted.
	Delete(ctx context.Context, in *SdkCloudBackupDeleteRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteResponse, error)
	// DeleteAll deletes all the backups in the cloud for the specified volume.
	DeleteAll(ctx context.Context, in *SdkCloudBackupDeleteAllRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteAllResponse, error)
	// Return a list of backups for the specified volume
	Enumerate(ctx context.Context, in *SdkCloudBackupEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudBackupEnumerateResponse, error)
	// Status returns the status of any cloud backups of a volume
	Status(ctx context.Context, in *SdkCloudBackupStatusRequest, opts ...grpc.CallOption) (*SdkCloudBackupStatusResponse, error)
	// Catalog returns a list of the contents in the backup
	Catalog(ctx context.Context, in *SdkCloudBackupCatalogRequest, opts ...grpc.CallOption) (*SdkCloudBackupCatalogResponse, error)
	// History returns a list of backups for a specified volume
	History(ctx context.Context, in *SdkCloudBackupHistoryRequest, opts ...grpc.CallOption) (*SdkCloudBackupHistoryResponse, error)
	// StateChange can be used to stop, pause, and restart a backup
	StateChange(ctx context.Context, in *SdkCloudBackupStateChangeRequest, opts ...grpc.CallOption) (*SdkCloudBackupStateChangeResponse, error)
	// Create cloud backup schedule
	SchedCreate(ctx context.Context, in *SdkCloudBackupSchedCreateRequest, opts ...grpc.CallOption) (*SdkCloudBackupSchedCreateResponse, error)
	// Delete cloud backup schedule
	SchedDelete(ctx context.Context, in *SdkCloudBackupSchedDeleteRequest, opts ...grpc.CallOption) (*SdkCloudBackupSchedDeleteResponse, error)
	// Enumerate cloud backup schedules
	SchedEnumerate(ctx context.Context, in *SdkCloudBackupSchedEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudBackupSchedEnumerateResponse, error)
}

type openStorageCloudBackupClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageCloudBackupClient(cc *grpc.ClientConn) OpenStorageCloudBackupClient {
	return &openStorageCloudBackupClient{cc}
}

func (c *openStorageCloudBackupClient) Create(ctx context.Context, in *SdkCloudBackupCreateRequest, opts ...grpc.CallOption) (*SdkCloudBackupCreateResponse, error) {
	out := new(SdkCloudBackupCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Restore(ctx context.Context, in *SdkCloudBackupRestoreRequest, opts ...grpc.CallOption) (*SdkCloudBackupRestoreResponse, error) {
	out := new(SdkCloudBackupRestoreResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Restore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Delete(ctx context.Context, in *SdkCloudBackupDeleteRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteResponse, error) {
	out := new(SdkCloudBackupDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) DeleteAll(ctx context.Context, in *SdkCloudBackupDeleteAllRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteAllResponse, error) {
	out := new(SdkCloudBackupDeleteAllResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/DeleteAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Enumerate(ctx context.Context, in *SdkCloudBackupEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudBackupEnumerateResponse, error) {
	out := new(SdkCloudBackupEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Status(ctx context.Context, in *SdkCloudBackupStatusRequest, opts ...grpc.CallOption) (*SdkCloudBackupStatusResponse, error) {
	out := new(SdkCloudBackupStatusResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Catalog(ctx context.Context, in *SdkCloudBackupCatalogRequest, opts ...grpc.CallOption) (*SdkCloudBackupCatalogResponse, error) {
	out := new(SdkCloudBackupCatalogResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Catalog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) History(ctx context.Context, in *SdkCloudBackupHistoryRequest, opts ...grpc.CallOption) (*SdkCloudBackupHistoryResponse, error) {
	out := new(SdkCloudBackupHistoryResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/History", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) StateChange(ctx context.Context, in *SdkCloudBackupStateChangeRequest, opts ...grpc.CallOption) (*SdkCloudBackupStateChangeResponse, error) {
	out := new(SdkCloudBackupStateChangeResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/StateChange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) SchedCreate(ctx context.Context, in *SdkCloudBackupSchedCreateRequest, opts ...grpc.CallOption) (*SdkCloudBackupSchedCreateResponse, error) {
	out := new(SdkCloudBackupSchedCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/SchedCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) SchedDelete(ctx context.Context, in *SdkCloudBackupSchedDeleteRequest, opts ...grpc.CallOption) (*SdkCloudBackupSchedDeleteResponse, error) {
	out := new(SdkCloudBackupSchedDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/SchedDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) SchedEnumerate(ctx context.Context, in *SdkCloudBackupSchedEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudBackupSchedEnumerateResponse, error) {
	out := new(SdkCloudBackupSchedEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/SchedEnumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCloudBackup service

type OpenStorageCloudBackupServer interface {
	// Creates a backup request for a specified volume. Use
	// OpenStorageCloudBackup.Status() to get the current status of the
	// backup request.
	Create(context.Context, *SdkCloudBackupCreateRequest) (*SdkCloudBackupCreateResponse, error)
	// Restore creates a new volume from a backup id. The newly created volume
	// has an ha_level (number of replicas) of only 1. To increase the number of
	// replicas, use OpenStorageVolume.Set() to change the ha_level.
	Restore(context.Context, *SdkCloudBackupRestoreRequest) (*SdkCloudBackupRestoreResponse, error)
	// Delete deletes a backup stored in the cloud. If the backup is an incremental
	// backup and other backups are dependent on it, it will not be able to be deleted.
	Delete(context.Context, *SdkCloudBackupDeleteRequest) (*SdkCloudBackupDeleteResponse, error)
	// DeleteAll deletes all the backups in the cloud for the specified volume.
	DeleteAll(context.Context, *SdkCloudBackupDeleteAllRequest) (*SdkCloudBackupDeleteAllResponse, error)
	// Return a list of backups for the specified volume
	Enumerate(context.Context, *SdkCloudBackupEnumerateRequest) (*SdkCloudBackupEnumerateResponse, error)
	// Status returns the status of any cloud backups of a volume
	Status(context.Context, *SdkCloudBackupStatusRequest) (*SdkCloudBackupStatusResponse, error)
	// Catalog returns a list of the contents in the backup
	Catalog(context.Context, *SdkCloudBackupCatalogRequest) (*SdkCloudBackupCatalogResponse, error)
	// History returns a list of backups for a specified volume
	History(context.Context, *SdkCloudBackupHistoryRequest) (*SdkCloudBackupHistoryResponse, error)
	// StateChange can be used to stop, pause, and restart a backup
	StateChange(context.Context, *SdkCloudBackupStateChangeRequest) (*SdkCloudBackupStateChangeResponse, error)
	// Create cloud backup schedule
	SchedCreate(context.Context, *SdkCloudBackupSchedCreateRequest) (*SdkCloudBackupSchedCreateResponse, error)
	// Delete cloud backup schedule
	SchedDelete(context.Context, *SdkCloudBackupSchedDeleteRequest) (*SdkCloudBackupSchedDeleteResponse, error)
	// Enumerate cloud backup schedules
	SchedEnumerate(context.Context, *SdkCloudBackupSchedEnumerateRequest) (*SdkCloudBackupSchedEnumerateResponse, error)
}

func RegisterOpenStorageCloudBackupServer(s *grpc.Server, srv OpenStorageCloudBackupServer) {
	s.RegisterService(&_OpenStorageCloudBackup_serviceDesc, srv)
}

func _OpenStorageCloudBackup_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Create(ctx, req.(*SdkCloudBackupCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Restore(ctx, req.(*SdkCloudBackupRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Delete(ctx, req.(*SdkCloudBackupDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_DeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupDeleteAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).DeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/DeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).DeleteAll(ctx, req.(*SdkCloudBackupDeleteAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Enumerate(ctx, req.(*SdkCloudBackupEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Status(ctx, req.(*SdkCloudBackupStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Catalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupCatalogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Catalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Catalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Catalog(ctx, req.(*SdkCloudBackupCatalogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_History_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).History(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/History",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).History(ctx, req.(*SdkCloudBackupHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_StateChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupStateChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).StateChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/StateChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).StateChange(ctx, req.(*SdkCloudBackupStateChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_SchedCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupSchedCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).SchedCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/SchedCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).SchedCreate(ctx, req.(*SdkCloudBackupSchedCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_SchedDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupSchedDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).SchedDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/SchedDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).SchedDelete(ctx, req.(*SdkCloudBackupSchedDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_SchedEnumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupSchedEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).SchedEnumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/SchedEnumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).SchedEnumerate(ctx, req.(*SdkCloudBackupSchedEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCloudBackup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCloudBackup",
	HandlerType: (*OpenStorageCloudBackupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageCloudBackup_Create_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _OpenStorageCloudBackup_Restore_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageCloudBackup_Delete_Handler,
		},
		{
			MethodName: "DeleteAll",
			Handler:    _OpenStorageCloudBackup_DeleteAll_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageCloudBackup_Enumerate_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _OpenStorageCloudBackup_Status_Handler,
		},
		{
			MethodName: "Catalog",
			Handler:    _OpenStorageCloudBackup_Catalog_Handler,
		},
		{
			MethodName: "History",
			Handler:    _OpenStorageCloudBackup_History_Handler,
		},
		{
			MethodName: "StateChange",
			Handler:    _OpenStorageCloudBackup_StateChange_Handler,
		},
		{
			MethodName: "SchedCreate",
			Handler:    _OpenStorageCloudBackup_SchedCreate_Handler,
		},
		{
			MethodName: "SchedDelete",
			Handler:    _OpenStorageCloudBackup_SchedDelete_Handler,
		},
		{
			MethodName: "SchedEnumerate",
			Handler:    _OpenStorageCloudBackup_SchedEnumerate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor_api_e4884044d9f25f52) }

var fileDescriptor_api_e4884044d9f25f52 = []byte{
	// 8056 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x7c, 0x6d, 0x8c, 0x1b, 0x49,
	0x76, 0x98, 0x9a, 0x9c, 0xe1, 0xc7, 0x9b, 0xe1, 0x4c, 0x4f, 0x69, 0x34, 0xa2, 0xa8, 0xaf, 0xd9,
	0xd6, 0x6a, 0xa5, 0xe5, 0x49, 0x33, 0xda, 0xb9, 0xdd, 0xbd, 0x5b, 0xc9, 0x7b, 0x09, 0x67, 0x86,
	0x23, 0xf2, 0x34, 0x5f, 0xd7, 0xe4, 0x48, 0x7b, 0xe7, 0xd8, 0x74, 0x8b, 0x2c, 0x8d, 0xb8, 0x22,
	0xd9, 0x5c, 0x76, 0x73, 0xd6, 0x73, 0x8a, 0xec, 0x24, 0x80, 0xe1, 0xe0, 0x7c, 0xb6, 0x13, 0x3b,
	0x0e, 0x70, 0x48, 0x6c, 0x27, 0x0e, 0xe0, 0x3f, 0x86, 0x81, 0xe4, 0x57, 0x7e, 0xe4, 0x12, 0x23,
	0xbf, 0x82, 0x00, 0xf1, 0xfd, 0x88, 0x7f, 0x04, 0x48, 0x80, 0x20, 0x48, 0xf2, 0x27, 0x08, 0x92,
	0x1f, 0xf9, 0xe7, 0x7f, 0x41, 0xbd, 0xaa, 0x6e, 0x56, 0x75, 0x37, 0xc9, 0xe6, 0x9e, 0x2e, 0xc8,
	0x9f, 0x19, 0x56, 0xd5, 0xab, 0x57, 0xaf, 0x5e, 0xbd, 0xf7, 0xea, 0xd5, 0xab, 0x57, 0x0d, 0x39,
	0xab, 0xdf, 0xde, 0xb4, 0xfa, 0xed, 0x8d, 0xfe, 0xc0, 0x76, 0x6d, 0xb2, 0x6c, 0xf7, 0x69, 0xcf,
	0x71, 0xed, 0x81, 0x75, 0x4a, 0x37, 0xac, 0x7e, 0xbb, 0x70, 0xf3, 0xd4, 0xb6, 0x4f, 0x3b, 0x74,
	0x13, 0x9b, 0x9f, 0x0f, 0x5f, 0x6c, 0xba, 0xed, 0x2e, 0x75, 0x5c, 0xab, 0xdb, 0xe7, 0x3d, 0x0a,
	0xd7, 0x04, 0x00, 0xe2, 0xe9, 0xf5, 0x6c, 0xd7, 0x72, 0xdb, 0x76, 0xcf, 0xe1, 0xad, 0xc6, 0x6f,
	0x26, 0x61, 0xb9, 0xc6, 0xd1, 0x99, 0xd4, 0xb1, 0x87, 0x83, 0x26, 0x25, 0x4b, 0x90, 0x68, 0xb7,
	0xf2, 0xda, 0xba, 0x76, 0x37, 0x6b, 0x26, 0xda, 0x2d, 0x42, 0x60, 0xae, 0x6f, 0xb9, 0x2f, 0xf3,
	0x09, 0xac, 0xc1, 0xdf, 0xe4, 0x63, 0x48, 0x75, 0x69, 0xab, 0x3d, 0xec, 0xe6, 0x93, 0xeb, 0xda,
	0xdd, 0xa5, 0xad, 0x1b, 0x1b, 0x01, 0xc2, 0x36, 0x04, 0xd6, 0x03, 0x84, 0x32, 0x05, 0x34, 0x59,
	0x83, 0x94, 0xdd, 0xeb, 0xb4, 0x7b, 0x34, 0x3f, 0xb7, 0xae, 0xdd, 0xcd, 0x98, 0xa2, 0xc4, 0xc6,
	0x68, 0xdb, 0x7d, 0x27, 0x3f, 0xbf, 0xae, 0xdd, 0x9d, 0x33, 0xf1, 0x37, 0xb9, 0x0a, 0x59, 0x87,
	0x7e, 0xd1, 0xf8, 0x72, 0xd0, 0x76, 0x69, 0x3e, 0xb5, 0xae, 0xdd, 0xd5, 0xcc, 0x8c, 0x43, 0xbf,
	0x78, 0xc6, 0xca, 0xe4, 0x0a, 0xb0, 0xdf, 0x8d, 0x01, 0xb5, 0x5a, 0xf9, 0x34, 0xb6, 0xa5, 0x1d,
	0xfa, 0x85, 0x49, 0xad, 0x16, 0x1b, 0x63, 0x60, 0xf5, 0x5a, 0xe6, 0xb3, 0x7c, 0x06, 0x1b, 0x44,
	0x89, 0x8d, 0xe1, 0xb4, 0xbf, 0x4f, 0xf3, 0x59, 0x3e, 0x06, 0xfb, 0xcd, 0xea, 0x86, 0x0e, 0x6d,
	0xe5, 0x81, 0xd7, 0xb1, 0xdf, 0xe4, 0x36, 0x2c, 0x0d, 0x04, 0x9b, 0x1a, 0x4e, 0x9f, 0xd2, 0x56,
	0x7e, 0x01, 0x67, 0x9e, 0xf3, 0x6a, 0x6b, 0xac, 0x92, 0x7c, 0x03, 0xb2, 0x1d, 0xcb, 0x71, 0x1b,
	0x4e, 0xd3, 0xea, 0xe5, 0x17, 0xd7, 0xb5, 0xbb, 0x0b, 0x5b, 0x85, 0x0d, 0xce, 0xec, 0x0d, 0x6f,
	0x35, 0x36, 0xea, 0xde, 0x6a, 0x98, 0x19, 0x06, 0x5c, 0x6b, 0x5a, 0x3d, 0x52, 0x80, 0x4c, 0x97,
	0xba, 0x56, 0xcb, 0x72, 0xad, 0x7c, 0x0e, 0xb9, 0xe0, 0x97, 0x8d, 0x9f, 0x24, 0x60, 0x41, 0x70,
	0xee, 0xd8, 0xb6, 0x3b, 0x6c, 0x2d, 0xaa, 0xbb, 0xb8, 0x16, 0xf3, 0x66, 0xa2, 0xba, 0x4b, 0x8a,
	0x90, 0xdc, 0xb1, 0x1d, 0x5c, 0x8a, 0xa5, 0xad, 0x7c, 0x88, 0xe9, 0x3b, 0xb6, 0x53, 0x3f, 0xef,
	0x53, 0x93, 0x01, 0xb1, 0x35, 0x3a, 0x98, 0x69, 0x8d, 0xf8, 0x7f, 0x72, 0x0d, 0xb2, 0xa6, 0xd5,
	0x6e, 0xed, 0xd3, 0x33, 0xda, 0xc1, 0x65, 0xca, 0x9a, 0xa3, 0x0a, 0xd6, 0x5a, 0xb7, 0x5d, 0xab,
	0x53, 0x63, 0xac, 0x4c, 0x23, 0xdb, 0x46, 0x15, 0x8c, 0x9f, 0x27, 0x8c, 0x9f, 0x19, 0xce, 0x4f,
	0xf6, 0x9b, 0xfc, 0x55, 0x48, 0x75, 0xac, 0xe7, 0xb4, 0xe3, 0xe4, 0xb3, 0xeb, 0xc9, 0xbb, 0x0b,
	0x5b, 0x77, 0xc7, 0xd1, 0xc1, 0x66, 0xbc, 0xb1, 0x8f, 0xa0, 0xe5, 0x9e, 0x3b, 0x38, 0x37, 0x45,
	0xbf, 0xc2, 0x27, 0xb0, 0x20, 0x55, 0x13, 0x1d, 0x92, 0xaf, 0xe8, 0xb9, 0x90, 0x50, 0xf6, 0x93,
	0xac, 0xc2, 0xfc, 0x99, 0xd5, 0x19, 0x52, 0x21, 0xa3, 0xbc, 0xf0, 0x30, 0xf1, 0x4d, 0xcd, 0xf8,
	0x17, 0x1a, 0xe4, 0x9e, 0xda, 0x9d, 0x61, 0x97, 0xee, 0xdb, 0x4d, 0xcb, 0xb5, 0x07, 0x8c, 0xc4,
	0x9e, 0xd5, 0xa5, 0xa2, 0x3b, 0xfe, 0x26, 0x27, 0x90, 0x3b, 0x43, 0xa0, 0x86, 0xa0, 0x34, 0x81,
	0x94, 0x3e, 0x08, 0x51, 0xaa, 0xa0, 0xf2, 0x4a, 0x12, 0xc5, 0x8b, 0x67, 0x52, 0x55, 0xe1, 0xaf,
	0xc0, 0x4a, 0x08, 0x64, 0x26, 0xea, 0x3f, 0x84, 0x54, 0x8d, 0x2b, 0xe5, 0x1a, 0xa4, 0xfa, 0xd6,
	0x80, 0xf6, 0x5c, 0xd1, 0x51, 0x94, 0x50, 0xa8, 0x99, 0x88, 0x0a, 0xe5, 0x64, 0xbf, 0x8d, 0xcb,
	0x30, 0xff, 0x78, 0x60, 0x0f, 0xfb, 0x41, 0x4d, 0x36, 0xfe, 0x3c, 0x0d, 0xc0, 0x09, 0xaa, 0xf5,
	0x69, 0x93, 0x2d, 0x25, 0xed, 0xbf, 0xa4, 0x5d, 0x3a, 0xb0, 0x3a, 0x08, 0x95, 0x31, 0x47, 0x15,
	0xbe, 0xba, 0x24, 0x24, 0x75, 0xd9, 0x84, 0xd4, 0x0b, 0x7b, 0xd0, 0xb5, 0x5c, 0x21, 0x52, 0x97,
	0x43, 0x0c, 0xda, 0xab, 0xa1, 0x00, 0x0a, 0x30, 0x72, 0x1d, 0xe0, 0x79, 0xc7, 0x6e, 0xbe, 0x6a,
	0x20, 0x2a, 0x26, 0x4c, 0x49, 0x33, 0x8b, 0x35, 0x28, 0x2e, 0x57, 0x20, 0xf3, 0xd2, 0x6a, 0x74,
	0x50, 0xd2, 0xe6, 0xb1, 0x31, 0xfd, 0xd2, 0xe2, 0x72, 0x56, 0x84, 0x64, 0xd3, 0x76, 0x50, 0xef,
	0x27, 0x4a, 0x7a, 0xd3, 0x76, 0xc8, 0x27, 0x00, 0x6d, 0xbb, 0xd1, 0x1f, 0xd8, 0x2f, 0xda, 0x1d,
	0x2e, 0x94, 0x4b, 0x5b, 0x85, 0x50, 0x97, 0xaa, 0x7d, 0xcc, 0x21, 0xcc, 0x6c, 0xdb, 0xfb, 0xc9,
	0xf8, 0xda, 0xa2, 0xad, 0x61, 0x9f, 0xa2, 0xc8, 0x66, 0x4c, 0x51, 0x22, 0x5f, 0x83, 0x15, 0xa7,
	0x67, 0xf5, 0x9d, 0x97, 0xb6, 0xdb, 0x68, 0xf7, 0x5c, 0x3a, 0x38, 0xb3, 0x3a, 0x68, 0x39, 0x72,
	0xa6, 0xee, 0x35, 0x54, 0x45, 0x3d, 0x31, 0x83, 0xe2, 0x03, 0x28, 0x3e, 0xf7, 0xc7, 0x88, 0x0f,
	0x63, 0xfe, 0x34, 0xd9, 0x61, 0x84, 0x39, 0x2f, 0xad, 0x81, 0xb0, 0x3e, 0x19, 0x53, 0x94, 0xc8,
	0xcf, 0xc1, 0xc2, 0x80, 0xf6, 0x3b, 0xed, 0xa6, 0xd5, 0x70, 0xa8, 0x2b, 0x0c, 0xcf, 0xd5, 0xd0,
	0x48, 0x26, 0x87, 0xa9, 0x51, 0xd7, 0x84, 0x81, 0xff, 0x9b, 0x4d, 0xcb, 0x3a, 0x3d, 0x1d, 0xd0,
	0x53, 0x6e, 0xde, 0x38, 0xe7, 0x73, 0x7c, 0x5a, 0x52, 0x83, 0xaf, 0xea, 0xb4, 0xd7, 0x1c, 0x9c,
	0xf7, 0x5d, 0xda, 0xca, 0x2f, 0x09, 0xf9, 0xf0, 0x2a, 0xc8, 0x0d, 0x80, 0xbe, 0xe5, 0x38, 0xfd,
	0x97, 0x03, 0xcb, 0xa1, 0xf9, 0x65, 0x14, 0x32, 0xa9, 0x46, 0xe1, 0xa0, 0xd3, 0x7c, 0x49, 0x5b,
	0xc3, 0x0e, 0xcd, 0xeb, 0x08, 0xe6, 0x73, 0xb0, 0x26, 0xea, 0x99, 0x0a, 0x38, 0x4d, 0xab, 0x43,
	0xf3, 0x2b, 0x48, 0x0b, 0x2f, 0x20, 0x0f, 0xdc, 0x76, 0xf3, 0xd5, 0x79, 0x9e, 0x08, 0x1e, 0x60,
	0x89, 0xdc, 0x83, 0xf9, 0x53, 0x26, 0xe0, 0xf9, 0x4b, 0x38, 0xfb, 0xb5, 0xd0, 0xec, 0x51, 0xfc,
	0x4d, 0x0e, 0xc4, 0xec, 0x39, 0xfe, 0x68, 0xd0, 0xde, 0x0b, 0x7b, 0xd0, 0xa4, 0xad, 0xfc, 0x1a,
	0x62, 0xcb, 0x61, 0x6d, 0x59, 0x54, 0xb2, 0xf9, 0x34, 0xed, 0x6e, 0x7f, 0x40, 0x1d, 0x66, 0xc0,
	0x2e, 0x23, 0x88, 0x54, 0xc3, 0xcc, 0x76, 0xd3, 0x72, 0x9a, 0x56, 0x8b, 0xb6, 0xf2, 0x79, 0x6e,
	0xb6, 0xbd, 0x32, 0xc9, 0x43, 0xfa, 0x73, 0x7b, 0x38, 0xe8, 0x59, 0x9d, 0xfc, 0x15, 0x6c, 0xf2,
	0x8a, 0xac, 0x17, 0x5f, 0xb8, 0xb3, 0x0f, 0xf3, 0x05, 0xde, 0xcb, 0x2b, 0xff, 0xf4, 0xe6, 0xe1,
	0xff, 0x80, 0x67, 0xdc, 0x98, 0x48, 0xb1, 0xf5, 0xbd, 0x11, 0x52, 0xe9, 0xca, 0x05, 0x59, 0xa9,
	0x57, 0x65, 0xa5, 0xae, 0x68, 0x42, 0xad, 0x3f, 0x88, 0xa9, 0xd6, 0x95, 0x84, 0xaf, 0xd8, 0x37,
	0xc3, 0x8a, 0x5d, 0x51, 0x54, 0xfb, 0x6a, 0x50, 0xb5, 0x2b, 0x73, 0x23, 0xe5, 0xbe, 0x17, 0x4b,
	0xb9, 0x2b, 0xf3, 0x5c, 0xbd, 0x1f, 0xcd, 0xa6, 0xde, 0x95, 0x94, 0xac, 0xe0, 0x79, 0x55, 0xc1,
	0x2b, 0x69, 0x5f, 0xc5, 0xef, 0x8f, 0x55, 0xf1, 0x4a, 0x26, 0x42, 0xc9, 0x4f, 0xa2, 0x95, 0xfc,
	0xc1, 0x04, 0x25, 0xaf, 0x51, 0x77, 0xaa, 0x9e, 0xe7, 0x55, 0x3d, 0xaf, 0x64, 0xdf, 0x92, 0xa6,
	0xdf, 0x1f, 0xab, 0xe9, 0x15, 0x88, 0xd0, 0xf5, 0x1b, 0x21, 0x5d, 0xaf, 0x2c, 0xc8, 0xda, 0xbe,
	0x1e, 0xd6, 0xf6, 0xca, 0xa2, 0xa2, 0xef, 0xf7, 0xc7, 0xea, 0x7b, 0x25, 0x17, 0xa1, 0xf1, 0x6b,
	0x8a, 0xc6, 0x57, 0x96, 0x3c, 0x9d, 0xcf, 0xab, 0x3a, 0x5f, 0x59, 0xf6, 0xb5, 0x7e, 0xc3, 0xd3,
	0xfa, 0x8b, 0x93, 0xb4, 0xbe, 0xa2, 0x7b, 0x7a, 0x7f, 0x27, 0xa4, 0xf7, 0xab, 0x88, 0x71, 0x25,
	0xa8, 0xf9, 0xeb, 0x8a, 0xe6, 0x5f, 0x42, 0x20, 0xa2, 0xe8, 0xfe, 0x35, 0x49, 0xf7, 0xd1, 0x78,
	0x54, 0x2e, 0x4a, 0xda, 0x5f, 0x18, 0x69, 0x3f, 0x9a, 0x8d, 0xca, 0xea, 0x48, 0xff, 0xaf, 0x49,
	0xfa, 0x8f, 0x56, 0xa3, 0x72, 0xe9, 0x2d, 0x5a, 0x80, 0xed, 0x65, 0xc8, 0xf9, 0xca, 0xdd, 0xb0,
	0xfb, 0xee, 0x36, 0x40, 0x86, 0x69, 0x24, 0xfe, 0x5e, 0x04, 0xe0, 0xda, 0x8a, 0x25, 0x1d, 0x96,
	0x46, 0x1a, 0x8b, 0x35, 0x4b, 0xb0, 0xe8, 0xa9, 0x28, 0x96, 0xb3, 0x90, 0x6e, 0xda, 0x8e, 0x07,
	0x3c, 0x52, 0x39, 0x0f, 0x19, 0xd7, 0x1b, 0x2c, 0x5d, 0x86, 0x4b, 0x21, 0xdd, 0xf1, 0xc0, 0xf8,
	0xec, 0x3c, 0xb0, 0x90, 0x10, 0x62, 0x03, 0xa3, 0xdb, 0x93, 0x2d, 0x6f, 0xc0, 0x91, 0x2c, 0x85,
	0x86, 0xf0, 0xe4, 0x09, 0x1b, 0x16, 0x20, 0x8b, 0xa2, 0xe2, 0x8f, 0x87, 0xe2, 0xe1, 0x35, 0xf1,
	0x25, 0x67, 0x85, 0x55, 0x20, 0xea, 0xfa, 0x7b, 0x03, 0x8d, 0x16, 0xd6, 0x63, 0x83, 0xb7, 0x94,
	0x58, 0xce, 0xc1, 0x82, 0x58, 0x3d, 0xaf, 0xd9, 0x5b, 0x2f, 0x56, 0x36, 0x0c, 0x80, 0x91, 0xca,
	0xb1, 0xa5, 0xe9, 0xd9, 0x2d, 0xea, 0xe4, 0xb5, 0xf5, 0x24, 0x5b, 0x1a, 0x2c, 0x18, 0x7f, 0xa2,
	0xc1, 0xb2, 0x39, 0xec, 0xb1, 0xb3, 0x58, 0xcd, 0xb5, 0x5c, 0x7a, 0x60, 0xf5, 0xc9, 0x33, 0xc8,
	0x0d, 0x78, 0x55, 0xc3, 0x61, 0x75, 0xd8, 0x63, 0x61, 0x6b, 0x2b, 0xac, 0xd0, 0x6a, 0x47, 0xa5,
	0x2c, 0x2c, 0xc8, 0x40, 0xaa, 0x62, 0x42, 0x14, 0x02, 0x99, 0x69, 0x1b, 0xf9, 0x6f, 0x19, 0x48,
	0x71, 0x31, 0x0c, 0x9d, 0xfd, 0x36, 0x21, 0xc5, 0x4f, 0x85, 0xd8, 0x6b, 0x21, 0x62, 0x67, 0xe0,
	0xfe, 0xa9, 0x29, 0xc0, 0x46, 0x5b, 0x73, 0x32, 0xce, 0xd6, 0x5c, 0x80, 0x0c, 0x3b, 0xc1, 0xd9,
	0xbd, 0xce, 0xb9, 0x38, 0x10, 0xfa, 0x65, 0xf2, 0x4d, 0x48, 0x77, 0xb8, 0x9f, 0x8d, 0xfb, 0xc7,
	0x42, 0xc4, 0xf9, 0x45, 0xf1, 0xc6, 0x4d, 0x0f, 0x9c, 0x3c, 0x80, 0xf9, 0x26, 0x63, 0x07, 0xee,
	0x2f, 0x93, 0x4f, 0x65, 0x1c, 0x90, 0x6c, 0xc2, 0x9c, 0xd3, 0xa7, 0x4d, 0xdc, 0x5b, 0xa2, 0x6c,
	0xec, 0xc8, 0xa4, 0x9b, 0x08, 0xc8, 0x98, 0x39, 0x74, 0xac, 0x53, 0x2a, 0x0e, 0x3a, 0xbc, 0xa0,
	0x1e, 0x09, 0xb3, 0x33, 0x1c, 0x09, 0x47, 0x7e, 0x35, 0xc4, 0xf3, 0xab, 0x3f, 0x62, 0x56, 0xd2,
	0x72, 0x87, 0x0e, 0xee, 0x1a, 0x4b, 0x5b, 0xd7, 0xc7, 0x91, 0x8c, 0x40, 0xa6, 0x00, 0x26, 0x5b,
	0x30, 0xcf, 0x65, 0x6f, 0x11, 0x7b, 0x5d, 0x9b, 0xd0, 0x8b, 0x9a, 0x1c, 0x94, 0xdc, 0x84, 0x05,
	0xcb, 0x75, 0x2d, 0xa6, 0x81, 0x0d, 0xbb, 0x87, 0x5b, 0x48, 0xd6, 0x04, 0xaf, 0xea, 0xa8, 0x47,
	0x76, 0x60, 0xc9, 0x07, 0xe0, 0xd8, 0x97, 0xc6, 0x60, 0x2f, 0x21, 0x18, 0xc7, 0x9e, 0xf3, 0xfa,
	0xd4, 0xbc, 0x51, 0x5a, 0xf4, 0xac, 0xdd, 0xa4, 0x0d, 0x8c, 0x35, 0x08, 0x77, 0x92, 0x57, 0x1d,
	0x5b, 0xee, 0x4b, 0x72, 0x0f, 0x88, 0x43, 0x9b, 0xc3, 0x01, 0x6d, 0xc8, 0x70, 0x9e, 0x3f, 0x89,
	0x2d, 0xbb, 0x23, 0x68, 0x9f, 0x68, 0x0e, 0xb6, 0x82, 0xca, 0x29, 0x88, 0x46, 0x80, 0x8a, 0x0f,
	0xd0, 0xee, 0xbd, 0xb0, 0xf3, 0x04, 0x75, 0xf1, 0xce, 0x18, 0x7e, 0x08, 0xc2, 0xab, 0xbd, 0x17,
	0x36, 0x57, 0x40, 0x81, 0x89, 0x55, 0x90, 0x6f, 0xc1, 0xa2, 0xb4, 0x4d, 0x3b, 0xf9, 0x8b, 0x88,
	0x6a, 0xe2, 0x3e, 0xbd, 0x30, 0xda, 0xa7, 0x1d, 0x52, 0x0e, 0xda, 0x85, 0x55, 0x44, 0xb0, 0x3e,
	0xcd, 0x2e, 0xa8, 0x56, 0x80, 0x49, 0x24, 0x1d, 0x0c, 0xec, 0x01, 0xee, 0x5f, 0x59, 0x93, 0x17,
	0xc8, 0xb7, 0x41, 0x17, 0x4e, 0x4b, 0xd3, 0xee, 0x39, 0xc3, 0x2e, 0x1d, 0x38, 0xf9, 0x35, 0xc4,
	0x7f, 0x73, 0xcc, 0x5c, 0x77, 0x04, 0x9c, 0xb9, 0x7c, 0xa6, 0x94, 0x9d, 0xc2, 0xa7, 0xb0, 0x1c,
	0xe0, 0xc3, 0x4c, 0x56, 0xe6, 0x0f, 0x13, 0x30, 0xcf, 0x48, 0x75, 0x18, 0x0c, 0xd3, 0x72, 0x07,
	0xfb, 0xcd, 0x99, 0xbc, 0x40, 0x2e, 0x43, 0x9a, 0xfd, 0x68, 0x74, 0x1d, 0x71, 0xe4, 0x4c, 0xb1,
	0xe2, 0x81, 0xc3, 0xce, 0x90, 0xd8, 0xf0, 0xfc, 0xdc, 0xa5, 0x0e, 0xda, 0x95, 0x39, 0x33, 0xcb,
	0x6a, 0xb6, 0x59, 0x05, 0x3b, 0x24, 0x60, 0x88, 0xc8, 0x41, 0x0b, 0x32, 0x67, 0x8a, 0x12, 0x3b,
	0x5b, 0xe2, 0x2f, 0x86, 0x90, 0x87, 0x95, 0xd2, 0x58, 0x3e, 0x70, 0x98, 0x74, 0xf0, 0x26, 0x8e,
	0x32, 0x85, 0xad, 0x80, 0x55, 0x1c, 0xe7, 0x4d, 0x58, 0xe0, 0xdb, 0xdf, 0x29, 0xdb, 0x27, 0x44,
	0x98, 0x03, 0xd0, 0xa9, 0xc4, 0x1a, 0x72, 0x11, 0xe6, 0xdb, 0x36, 0xc3, 0x9c, 0xf1, 0x02, 0x56,
	0x9c, 0x50, 0x44, 0xd8, 0xc0, 0x90, 0x12, 0x0f, 0x33, 0x65, 0xb1, 0x06, 0xe3, 0x20, 0x0c, 0xa9,
	0xb7, 0x55, 0x76, 0x1d, 0x11, 0x72, 0x02, 0xaf, 0xea, 0xc0, 0x31, 0xfe, 0x65, 0x12, 0xe6, 0x4b,
	0x1d, 0x3a, 0x70, 0x25, 0x33, 0x9c, 0x44, 0x33, 0xfc, 0x09, 0x64, 0x1c, 0x7a, 0x46, 0x07, 0x6d,
	0xf7, 0x5c, 0xc4, 0x7e, 0xc2, 0x0a, 0x5f, 0x13, 0x00, 0x68, 0x27, 0x7c, 0x70, 0x46, 0x94, 0xc5,
	0x70, 0x36, 0xdc, 0xf3, 0x3e, 0x45, 0xee, 0x25, 0xcd, 0x2c, 0xd6, 0x30, 0x40, 0x76, 0x72, 0xe9,
	0x52, 0x07, 0x4d, 0x19, 0x0f, 0xf5, 0x78, 0x45, 0xf2, 0x4d, 0xc8, 0xfa, 0xb1, 0x44, 0x61, 0x81,
	0x27, 0x19, 0xb3, 0x11, 0x30, 0x9b, 0xe8, 0x40, 0x04, 0x13, 0x1b, 0xed, 0x16, 0xb2, 0x37, 0xcb,
	0x7c, 0x53, 0x5e, 0x55, 0xc5, 0xe9, 0x78, 0x25, 0xe1, 0xce, 0x5f, 0x8f, 0x50, 0x17, 0x0e, 0xc0,
	0xa7, 0xe3, 0x81, 0x33, 0x7a, 0x9b, 0x1d, 0x8a, 0xfe, 0x32, 0x3f, 0xb0, 0x7b, 0x45, 0x26, 0x8b,
	0xae, 0xdb, 0x11, 0x6c, 0x67, 0x3f, 0xd9, 0xd4, 0x87, 0xbd, 0xf6, 0x17, 0x43, 0xda, 0x70, 0xad,
	0x53, 0xe4, 0x77, 0xd6, 0xcc, 0xf2, 0x9a, 0xba, 0x75, 0xca, 0xc4, 0xb0, 0x69, 0x0f, 0x7b, 0x2e,
	0x9a, 0xd0, 0xa4, 0xc9, 0x0b, 0xe4, 0x13, 0x80, 0x17, 0xed, 0x01, 0x33, 0xe2, 0x94, 0xc6, 0x89,
	0xeb, 0x65, 0x11, 0xba, 0x46, 0x69, 0xcf, 0xf8, 0x18, 0x52, 0xb8, 0x7c, 0x0e, 0xdb, 0x05, 0x91,
	0xc5, 0x62, 0x8f, 0x0f, 0xef, 0x82, 0x08, 0x67, 0x72, 0x20, 0xe3, 0xdf, 0x25, 0x60, 0xf9, 0xe8,
	0xf9, 0xe7, 0xb4, 0xe9, 0x32, 0x10, 0x8a, 0x56, 0x85, 0xc0, 0xdc, 0x70, 0xe8, 0x6f, 0xc5, 0xf8,
	0x9b, 0x5c, 0x85, 0xac, 0x50, 0xe6, 0xb6, 0x17, 0xf0, 0xc9, 0xf0, 0x8a, 0x2a, 0x1e, 0x41, 0x69,
	0xcf, 0x7a, 0xde, 0xa1, 0x2d, 0x5c, 0xe4, 0x8c, 0xe9, 0x15, 0xf9, 0x29, 0x1a, 0xf7, 0x0a, 0xbe,
	0xc2, 0xde, 0x66, 0xb0, 0x06, 0x29, 0xab, 0xc9, 0xfc, 0x32, 0x11, 0x7a, 0x11, 0x25, 0x94, 0x98,
	0x66, 0x93, 0x3a, 0x4e, 0x83, 0xe9, 0x36, 0x5f, 0xbd, 0x2c, 0xaf, 0x79, 0x42, 0x51, 0xa0, 0x1c,
	0xda, 0x1c, 0x50, 0x17, 0x9b, 0xd3, 0xbc, 0x99, 0xd7, 0xb0, 0x66, 0x0c, 0x1a, 0xb4, 0xfa, 0x76,
	0xbb, 0xe7, 0x32, 0xed, 0x60, 0x76, 0x77, 0x54, 0x41, 0xde, 0x07, 0xbd, 0x39, 0x1c, 0x0c, 0x68,
	0xcf, 0x6d, 0x78, 0x95, 0xb8, 0x62, 0x59, 0x73, 0x59, 0xd4, 0x97, 0x45, 0x35, 0x9a, 0x70, 0x4e,
	0x46, 0xdf, 0x1e, 0xf0, 0x8d, 0x31, 0x69, 0x0a, 0xca, 0x8e, 0xed, 0x81, 0x8b, 0x71, 0x5e, 0x7a,
	0xca, 0xe8, 0xe7, 0xf1, 0x59, 0x51, 0x32, 0xfe, 0x99, 0x06, 0x17, 0x85, 0x2d, 0x1b, 0x50, 0xb6,
	0xd5, 0xd0, 0x2f, 0x86, 0xd4, 0x71, 0x65, 0x87, 0x42, 0x9b, 0xcd, 0xa1, 0x98, 0xd9, 0x0b, 0xf2,
	0xfc, 0x89, 0x64, 0x4c, 0x7f, 0xc2, 0x78, 0x0f, 0x96, 0x78, 0x9d, 0x49, 0x9d, 0xbe, 0xdd, 0x73,
	0x24, 0x7b, 0xae, 0x49, 0xf6, 0xdc, 0xe8, 0xc3, 0xaa, 0x3a, 0x35, 0x01, 0x1d, 0xf4, 0xdb, 0x2a,
	0x20, 0xcc, 0x77, 0x63, 0x20, 0x40, 0x04, 0xe9, 0xe3, 0xcc, 0xbe, 0x87, 0xc9, 0x5c, 0x3a, 0x53,
	0xca, 0xc6, 0xbf, 0xd5, 0xbc, 0x33, 0x0a, 0xee, 0x33, 0x25, 0x2e, 0x23, 0x0f, 0x21, 0xc5, 0xb7,
	0x40, 0x1c, 0x73, 0x69, 0xcb, 0x18, 0x83, 0x96, 0x83, 0x1f, 0x5b, 0x03, 0xab, 0x6b, 0x8a, 0x1e,
	0xe4, 0x9b, 0x30, 0xdf, 0x45, 0xbd, 0x4b, 0xc4, 0xee, 0xca, 0x3b, 0x30, 0xd1, 0xc3, 0x1f, 0x7c,
	0x53, 0x4f, 0x72, 0xd1, 0xc3, 0x1a, 0x6f, 0xd3, 0x97, 0x7d, 0x83, 0xb9, 0xa0, 0x0f, 0x61, 0xfc,
	0x59, 0x02, 0x74, 0x31, 0x17, 0xea, 0xbe, 0x0d, 0xb1, 0xe0, 0xab, 0x9c, 0x88, 0xeb, 0x35, 0x3e,
	0xf4, 0x35, 0x8e, 0x0b, 0x86, 0x31, 0xc9, 0xff, 0xe2, 0xf3, 0xf7, 0xb5, 0xb2, 0x02, 0x69, 0xbb,
	0x8f, 0x57, 0x37, 0xf9, 0x39, 0x34, 0x2a, 0x1b, 0xe3, 0x3a, 0xfb, 0x53, 0xdb, 0x38, 0xe2, 0x1d,
	0xb8, 0xcf, 0xe2, 0x75, 0x2f, 0x3c, 0x84, 0x45, 0xb9, 0x61, 0xa6, 0x4d, 0xfc, 0xb7, 0x46, 0xd2,
	0xc0, 0x86, 0x11, 0xd2, 0xb7, 0x09, 0x29, 0x2e, 0x35, 0x82, 0x83, 0x97, 0xc7, 0x09, 0x99, 0x00,
	0x7b, 0x8b, 0xe2, 0x79, 0x0e, 0x2b, 0xb5, 0x9e, 0xd5, 0x57, 0x35, 0x3d, 0xa8, 0x0d, 0xd2, 0x12,
	0x27, 0x66, 0x5b, 0x62, 0xf9, 0x80, 0x92, 0x54, 0x0f, 0x28, 0xc6, 0x17, 0x40, 0xe4, 0xa1, 0x05,
	0x2f, 0x7e, 0x1e, 0xd6, 0x3c, 0x8f, 0x0b, 0x1b, 0x46, 0x33, 0xe4, 0xbc, 0xb9, 0x3d, 0xce, 0xef,
	0x52, 0xd0, 0x98, 0xab, 0x67, 0x11, 0xb5, 0x86, 0xeb, 0xc5, 0xef, 0x71, 0x8f, 0x50, 0xf6, 0x03,
	0x2d, 0xb0, 0x1f, 0x44, 0xdd, 0xda, 0x7d, 0x04, 0x69, 0x31, 0x70, 0x1c, 0xcb, 0xe4, 0xc1, 0x1a,
	0x7f, 0xaa, 0x79, 0xd6, 0xc9, 0x73, 0x06, 0x23, 0x2f, 0x51, 0xae, 0x41, 0x96, 0xfd, 0x77, 0xfa,
	0x56, 0xd3, 0x93, 0x9c, 0x51, 0x05, 0xeb, 0xe1, 0x7b, 0x20, 0x59, 0x13, 0x7f, 0x33, 0x97, 0x8f,
	0x9d, 0x97, 0x19, 0xf9, 0x62, 0x6b, 0x62, 0xc5, 0x6a, 0x8b, 0x29, 0xba, 0xfd, 0x65, 0x8f, 0x0e,
	0x1a, 0x38, 0xc8, 0x3c, 0xc7, 0x85, 0x35, 0x87, 0x6c, 0x24, 0xbf, 0x19, 0x31, 0xa6, 0xa4, 0x66,
	0xe6, 0x2d, 0x18, 0x2d, 0x20, 0x8f, 0x07, 0x56, 0xff, 0xe5, 0xee, 0xa0, 0x7d, 0x46, 0x07, 0x3b,
	0x2f, 0xad, 0xde, 0x29, 0x75, 0x7c, 0x86, 0x68, 0x12, 0x43, 0x1e, 0xc2, 0xdc, 0xab, 0x76, 0xaf,
	0x25, 0x2c, 0xd1, 0x7b, 0x11, 0x87, 0xd5, 0x00, 0x1a, 0xf4, 0x46, 0xb0, 0x8f, 0x71, 0x07, 0x96,
	0x77, 0x3a, 0x43, 0xc7, 0xa5, 0x83, 0x29, 0x36, 0xfb, 0xef, 0x6b, 0x90, 0x63, 0xca, 0x7c, 0xe6,
	0xcb, 0x67, 0x05, 0x32, 0x26, 0xfd, 0x82, 0x3a, 0xee, 0x93, 0xa7, 0xc2, 0x43, 0xb8, 0x17, 0xf6,
	0x10, 0xe4, 0x1e, 0x1b, 0x1e, 0x38, 0x57, 0x65, 0xbf, 0x77, 0xe1, 0x11, 0xe4, 0x94, 0x26, 0x59,
	0x99, 0x93, 0xd3, 0x94, 0xf9, 0xfb, 0xb0, 0xa4, 0x8c, 0xe2, 0x10, 0x03, 0x16, 0xc5, 0xef, 0x1d,
	0xb4, 0xd0, 0x1c, 0x8d, 0x52, 0x47, 0x76, 0x03, 0xb3, 0x11, 0x77, 0x65, 0x37, 0x26, 0xcf, 0xc0,
	0x54, 0x3b, 0x19, 0xff, 0x54, 0x83, 0x35, 0x0c, 0x05, 0x4c, 0xd7, 0xde, 0x27, 0x90, 0xda, 0x97,
	0x6f, 0xe5, 0xbe, 0x1e, 0x1d, 0x53, 0x08, 0x21, 0x52, 0xaf, 0x12, 0xf7, 0x7f, 0xea, 0xab, 0xc4,
	0xff, 0xa1, 0xc1, 0xe5, 0xd0, 0x48, 0x62, 0xe5, 0x4f, 0x20, 0xeb, 0x05, 0xab, 0x1c, 0xb1, 0xa4,
	0xdf, 0x98, 0x4e, 0x26, 0xef, 0xbc, 0x51, 0xf3, 0x7a, 0x72, 0x52, 0x47, 0x98, 0x46, 0x02, 0x95,
	0x90, 0x04, 0xaa, 0x60, 0xc1, 0x92, 0xda, 0x25, 0x62, 0x1a, 0x9f, 0xc8, 0xd3, 0x58, 0xd8, 0xba,
	0x15, 0xf6, 0x58, 0x42, 0x74, 0xc8, 0x73, 0xfd, 0xcb, 0x39, 0xff, 0x1e, 0xfa, 0xd0, 0x6e, 0x85,
	0xfd, 0x0b, 0x1d, 0x92, 0xcd, 0xfe, 0x10, 0x91, 0x6b, 0x26, 0xfb, 0xc9, 0x8c, 0x51, 0x97, 0x76,
	0x1b, 0xae, 0xed, 0x5a, 0x1d, 0x71, 0x48, 0xcb, 0x74, 0x69, 0x17, 0xaf, 0x86, 0xd9, 0x59, 0x8c,
	0x35, 0xe2, 0xb9, 0x88, 0x9f, 0xd2, 0xd2, 0x5d, 0xda, 0xc5, 0x53, 0x91, 0x68, 0x7a, 0x31, 0xa0,
	0xd4, 0x3b, 0xa6, 0x75, 0x69, 0x77, 0x6f, 0x40, 0xf1, 0x76, 0xd0, 0x3a, 0x3b, 0x6d, 0x74, 0x6c,
	0x8b, 0x1f, 0x22, 0x92, 0x66, 0xda, 0x3a, 0x3b, 0xdd, 0xb7, 0x2d, 0x1e, 0x97, 0xe2, 0x3e, 0x6d,
	0x7a, 0x4c, 0xc0, 0x24, 0x10, 0xf9, 0xf8, 0x14, 0xe6, 0x5b, 0x6d, 0xe7, 0x95, 0x77, 0x07, 0x7d,
	0x67, 0xdc, 0x1d, 0x34, 0x9b, 0xed, 0xc6, 0x2e, 0x83, 0xe4, 0x8b, 0xc1, 0x7b, 0x91, 0x2d, 0x98,
	0xef, 0xdb, 0xb6, 0x1f, 0xf4, 0xbf, 0x36, 0xe9, 0x0a, 0xdb, 0xe4, 0xa0, 0xcc, 0xba, 0x75, 0x4f,
	0xbb, 0x6e, 0xa3, 0xdd, 0xf7, 0x1c, 0x54, 0x56, 0xac, 0xf6, 0x59, 0x43, 0xcb, 0x72, 0x2d, 0xd6,
	0xb0, 0xc8, 0x1b, 0x58, 0xb1, 0x8a, 0xe1, 0xb0, 0x97, 0xb6, 0xe3, 0xa2, 0xd1, 0xe3, 0x11, 0x10,
	0xbf, 0x4c, 0x0e, 0x60, 0x01, 0x6d, 0xa5, 0xb8, 0x7c, 0xd0, 0xc7, 0x98, 0x0d, 0x79, 0x1a, 0xec,
	0x8f, 0xac, 0x03, 0xd0, 0xf3, 0x2b, 0x0a, 0xdf, 0x03, 0x18, 0xcd, 0x32, 0x42, 0x7e, 0x3e, 0x56,
	0xe5, 0x67, 0x7d, 0xdc, 0x40, 0xde, 0x31, 0x4d, 0x12, 0x9e, 0xc2, 0xa7, 0xb0, 0x1c, 0x18, 0x7a,
	0x26, 0x3d, 0xfb, 0x35, 0x0d, 0x96, 0x04, 0x76, 0x61, 0x60, 0xa5, 0xe5, 0xd6, 0xe2, 0x2d, 0x37,
	0x97, 0xd7, 0x84, 0x2f, 0xaf, 0xd2, 0x4e, 0x93, 0x54, 0x76, 0x9a, 0x2b, 0x90, 0x11, 0x0d, 0xdc,
	0xaf, 0xca, 0x9a, 0x69, 0xde, 0xe2, 0x18, 0x1d, 0xb8, 0x51, 0x6b, 0xbd, 0xf2, 0x2e, 0x2c, 0x8e,
	0xed, 0x4e, 0xbb, 0x79, 0xae, 0x5a, 0xaa, 0x6f, 0xc3, 0x92, 0xda, 0x2c, 0xf6, 0xf8, 0xb0, 0x5f,
	0x17, 0x42, 0x64, 0x06, 0x7a, 0x1a, 0xef, 0xc0, 0xcd, 0xb1, 0xa3, 0x89, 0xdd, 0x3f, 0x8a, 0xa0,
	0x93, 0x7e, 0xeb, 0xff, 0x21, 0x41, 0xde, 0x68, 0x82, 0xa0, 0x5b, 0xf0, 0x4e, 0x08, 0xa4, 0xdc,
	0x63, 0x0e, 0xc2, 0x88, 0x26, 0xa3, 0x05, 0xc6, 0x24, 0x20, 0x61, 0x40, 0xbf, 0x05, 0x99, 0x3e,
	0x6b, 0x6a, 0x53, 0xcf, 0x7e, 0xc6, 0xa1, 0xd9, 0xef, 0x63, 0x7c, 0x14, 0x41, 0x6d, 0xb5, 0xc7,
	0xbc, 0x6e, 0xdf, 0xd1, 0x8f, 0xf0, 0x59, 0x8c, 0x5f, 0x84, 0xf5, 0xf1, 0xdd, 0x04, 0x69, 0x0f,
	0x21, 0xd5, 0x9f, 0x95, 0x99, 0xa2, 0x87, 0xf1, 0x61, 0xc4, 0x92, 0xed, 0xd2, 0x0e, 0x1d, 0x2d,
	0x59, 0x14, 0x55, 0x51, 0xac, 0xf7, 0x7a, 0x09, 0xd6, 0xef, 0x47, 0x20, 0xf6, 0xae, 0x2a, 0x77,
	0xad, 0x76, 0xe7, 0x9c, 0x21, 0x7e, 0x69, 0x0f, 0x07, 0x22, 0x79, 0x08, 0x7f, 0xb3, 0x23, 0x73,
	0xb7, 0xdd, 0x1b, 0xba, 0x5c, 0xeb, 0xe6, 0x4d, 0x51, 0x32, 0xfe, 0x86, 0x16, 0xc9, 0x3e, 0x8e,
	0xee, 0x19, 0xa5, 0xaf, 0x3a, 0xe7, 0xe4, 0x03, 0x48, 0xb6, 0xac, 0x73, 0xa1, 0x80, 0x37, 0xa3,
	0x78, 0x50, 0x6f, 0x77, 0x29, 0x03, 0x6e, 0x59, 0xe7, 0x26, 0x83, 0xf5, 0x49, 0x48, 0x44, 0x92,
	0x90, 0x54, 0x48, 0xf8, 0xa5, 0xc8, 0x95, 0x10, 0xb1, 0x31, 0xbb, 0xe7, 0xbe, 0xec, 0xa0, 0x15,
	0xf1, 0x48, 0x98, 0x9f, 0x7d, 0x84, 0x3f, 0x4e, 0xc0, 0x95, 0xb1, 0x43, 0xf0, 0x68, 0x82, 0x6b,
	0xb5, 0x7b, 0xc2, 0xe9, 0x11, 0x25, 0xf2, 0x18, 0xe6, 0x5b, 0x8c, 0x9f, 0xc2, 0x10, 0x6e, 0x4e,
	0x5f, 0x7c, 0x65, 0x19, 0x2a, 0x17, 0x4c, 0xde, 0x9f, 0x7c, 0x1b, 0x52, 0x5f, 0x22, 0x27, 0x85,
	0xef, 0xfd, 0x20, 0x3e, 0x26, 0xbe, 0x02, 0x95, 0x0b, 0xa6, 0xc0, 0x40, 0x0e, 0x20, 0xdd, 0xe5,
	0x3c, 0xc1, 0xed, 0x74, 0x61, 0xeb, 0x83, 0xf8, 0xc8, 0x04, 0x33, 0x2b, 0x17, 0x4c, 0x0f, 0xc7,
	0x76, 0x0e, 0x16, 0xfa, 0x74, 0xd0, 0xb6, 0x5b, 0xe8, 0x50, 0x1b, 0x36, 0xac, 0x84, 0x7a, 0x47,
	0x7a, 0xfc, 0x7b, 0x90, 0xf1, 0x6f, 0x7a, 0x39, 0x7b, 0x8a, 0xf1, 0xe9, 0x30, 0xfd, 0xbe, 0xc6,
	0x3f, 0x4f, 0x40, 0xa1, 0xd6, 0x7a, 0xb5, 0x33, 0xa0, 0x2d, 0xda, 0x73, 0xdb, 0x56, 0x47, 0x35,
	0xb3, 0xdf, 0x81, 0x25, 0xeb, 0x4b, 0x87, 0x9d, 0xa7, 0x44, 0xb3, 0x50, 0xc4, 0xbb, 0x51, 0x83,
	0x95, 0xbe, 0x74, 0x46, 0x78, 0x04, 0x86, 0xca, 0x05, 0x33, 0x67, 0xc9, 0xf5, 0xe4, 0x19, 0xe8,
	0xd6, 0xf7, 0x87, 0x03, 0x2a, 0x23, 0x9d, 0x30, 0x83, 0x12, 0x83, 0x8d, 0x42, 0xbb, 0x6c, 0xa9,
	0x2d, 0xe4, 0x7b, 0xb0, 0xc2, 0x63, 0x85, 0x32, 0x66, 0xbe, 0xe0, 0x5f, 0x8b, 0xc2, 0xfc, 0x18,
	0x81, 0xa3, 0x50, 0xeb, 0xa7, 0x81, 0xa6, 0xed, 0x15, 0x58, 0x1e, 0x21, 0xe5, 0x4b, 0xb5, 0x0d,
	0x57, 0x23, 0x19, 0x27, 0x4c, 0xd7, 0x2d, 0xc8, 0x49, 0x3d, 0x7c, 0x0f, 0x6e, 0x71, 0x54, 0x59,
	0x6d, 0x19, 0xbf, 0xa1, 0xc1, 0xe5, 0x31, 0x8c, 0x0b, 0xc4, 0x02, 0xb5, 0xc9, 0xb1, 0xc0, 0x44,
	0x30, 0x16, 0x58, 0x80, 0x8c, 0x1f, 0xe5, 0xe3, 0xdb, 0xae, 0x5f, 0x96, 0xa2, 0x77, 0x73, 0x4a,
	0xf4, 0xae, 0x81, 0x4a, 0x1a, 0xcd, 0x70, 0xf2, 0x0e, 0x2c, 0x5a, 0x4d, 0x8c, 0xd3, 0x36, 0x24,
	0x61, 0x5c, 0x10, 0x75, 0x78, 0x36, 0xe4, 0x61, 0x43, 0x04, 0x19, 0xd1, 0x04, 0xa2, 0xea, 0x09,
	0x3d, 0x37, 0x9e, 0xa2, 0xac, 0x8d, 0xe1, 0x3b, 0x9b, 0x51, 0x7f, 0x60, 0x7f, 0x4e, 0x9b, 0xee,
	0x88, 0x5d, 0x59, 0x51, 0xc3, 0xdd, 0x85, 0xcf, 0x1d, 0xbb, 0x27, 0xa1, 0x4e, 0xb3, 0x32, 0xc3,
	0xfb, 0x3b, 0x1a, 0xe4, 0xc3, 0x6c, 0x9c, 0x61, 0x21, 0x02, 0xcc, 0x4e, 0x04, 0x99, 0xfd, 0x55,
	0xb8, 0xd9, 0xc2, 0xc9, 0x86, 0xb8, 0x39, 0x0b, 0x55, 0x41, 0x9e, 0x27, 0x42, 0x3c, 0x37, 0x2c,
	0x94, 0xc2, 0x30, 0x4b, 0x67, 0x9c, 0xbc, 0xc4, 0xf8, 0x44, 0x80, 0xf1, 0xc6, 0x4d, 0xb8, 0xae,
	0x08, 0x7a, 0xc8, 0xcd, 0x78, 0x8c, 0x1b, 0x62, 0x24, 0x80, 0x20, 0xe3, 0x36, 0x2c, 0x29, 0x64,
	0x78, 0x77, 0xf6, 0x39, 0x99, 0x0e, 0x27, 0xa4, 0x52, 0x01, 0x2f, 0x22, 0x96, 0x4a, 0xfd, 0x38,
	0x01, 0xd7, 0xa2, 0x91, 0x08, 0x5a, 0xcc, 0x31, 0x26, 0xed, 0xfd, 0x18, 0x26, 0x8d, 0xa3, 0x08,
	0xdb, 0xb4, 0xcf, 0xc6, 0xda, 0xb4, 0xaf, 0xc5, 0xb2, 0x69, 0x3e, 0xde, 0x90, 0x51, 0xfb, 0xf9,
	0xf1, 0x46, 0xed, 0x5e, 0x3c, 0xa3, 0xe6, 0xe3, 0x8e, 0x65, 0xd5, 0x4a, 0x81, 0xed, 0x40, 0xf5,
	0x98, 0x62, 0xad, 0xc0, 0xf5, 0xc0, 0x2a, 0x06, 0xdc, 0xa7, 0x9d, 0xc0, 0xfa, 0x3c, 0xb5, 0x3a,
	0x6d, 0xd9, 0x91, 0x8e, 0x35, 0x46, 0x50, 0x26, 0x47, 0x48, 0xc4, 0x28, 0xff, 0x59, 0x83, 0x4b,
	0xb5, 0xd6, 0x2b, 0x1e, 0x3b, 0x3b, 0x60, 0xea, 0xe2, 0xe1, 0x9f, 0x18, 0xba, 0x53, 0xc3, 0xdc,
	0x89, 0x60, 0x98, 0xfb, 0x60, 0x14, 0x09, 0x4e, 0x8e, 0x09, 0x88, 0x44, 0x0e, 0xfa, 0x33, 0x08,
	0x07, 0xe7, 0x61, 0x2d, 0x38, 0x94, 0x98, 0xfa, 0x7f, 0xe5, 0x9b, 0x0a, 0x6f, 0x3a, 0xe9, 0x75,
	0xdf, 0xd6, 0xe4, 0x8f, 0x82, 0x93, 0xff, 0x68, 0xfc, 0xe4, 0xd5, 0x61, 0x7f, 0x06, 0xd3, 0x2f,
	0xa0, 0xc5, 0x0f, 0x0c, 0x26, 0x18, 0xf0, 0xaf, 0x35, 0x89, 0x37, 0xfc, 0xde, 0x3c, 0xd6, 0xfc,
	0x0f, 0x47, 0x13, 0xe4, 0xe1, 0xae, 0x0f, 0xc7, 0x4f, 0x50, 0x41, 0xfb, 0x33, 0x98, 0xdf, 0x43,
	0x69, 0x0d, 0xbd, 0xb1, 0x84, 0x01, 0x0b, 0xdc, 0xb5, 0x68, 0xa1, 0xbb, 0x96, 0x8f, 0xa4, 0xe9,
	0xef, 0xd2, 0xb8, 0xd3, 0x37, 0xae, 0x48, 0x43, 0x7a, 0xdd, 0x04, 0x47, 0x7f, 0x41, 0xc2, 0xa8,
	0x3a, 0x88, 0x51, 0xbe, 0xe9, 0xac, 0x97, 0x33, 0xc6, 0xc7, 0xd2, 0xc8, 0x01, 0x37, 0x6a, 0x22,
	0xc5, 0xe7, 0x92, 0x8e, 0xef, 0x74, 0xec, 0xde, 0x44, 0xaa, 0xae, 0x42, 0x96, 0x27, 0xee, 0x4b,
	0x57, 0xb8, 0xbc, 0xa2, 0xda, 0x9a, 0xfd, 0xd6, 0x50, 0xe6, 0xb1, 0x18, 0x3a, 0x0e, 0xc5, 0xea,
	0xd2, 0xc8, 0xa6, 0x75, 0x86, 0xa5, 0x51, 0xcc, 0xa9, 0xcc, 0xbb, 0xc0, 0x7e, 0x39, 0x11, 0xe5,
	0x13, 0x49, 0x81, 0x82, 0x5b, 0xe4, 0xac, 0x97, 0x4a, 0xc6, 0x3f, 0xd2, 0xe0, 0xa2, 0x8f, 0x4d,
	0xba, 0xe0, 0x9b, 0xa8, 0x6e, 0x5f, 0xfd, 0x6a, 0x68, 0x4b, 0xac, 0xd6, 0xdc, 0xc4, 0x6e, 0x22,
	0x0d, 0x58, 0x2c, 0xd8, 0x1a, 0xac, 0xaa, 0x14, 0x0a, 0xfe, 0x9d, 0xa0, 0xd3, 0xcb, 0xeb, 0x83,
	0x9e, 0xcd, 0x57, 0xbf, 0xa0, 0x34, 0x1e, 0xe1, 0x3e, 0x1a, 0x42, 0x2b, 0x18, 0x7c, 0x1d, 0xc0,
	0xe7, 0x8b, 0xe7, 0x0b, 0x65, 0x3d, 0xc6, 0x38, 0xc6, 0x9f, 0x6b, 0xe8, 0x51, 0x09, 0x62, 0x45,
	0xbc, 0x59, 0xd5, 0xbb, 0x89, 0x9c, 0xad, 0xf9, 0xcf, 0x7e, 0xb8, 0x1d, 0x7b, 0x34, 0xde, 0x8e,
	0x45, 0x62, 0x7f, 0xdb, 0x2f, 0x81, 0xb6, 0x31, 0xc4, 0x11, 0x3d, 0xe0, 0xc8, 0xa8, 0x8d, 0xb2,
	0x5a, 0xbd, 0x19, 0x81, 0x9f, 0x09, 0xde, 0x32, 0x1a, 0x11, 0x38, 0x4c, 0x8a, 0x59, 0x1b, 0xb1,
	0x78, 0x12, 0x18, 0x20, 0x11, 0x1a, 0xc0, 0xc0, 0x28, 0xc8, 0x98, 0x01, 0x84, 0xb0, 0xfc, 0x85,
	0x86, 0x61, 0x37, 0x15, 0x28, 0x24, 0x35, 0x13, 0xe9, 0x78, 0x1a, 0x58, 0x9b, 0x6f, 0x4d, 0x5f,
	0x9b, 0xe0, 0x00, 0x6f, 0x7b, 0x79, 0xea, 0x18, 0x26, 0x1c, 0x3b, 0xa6, 0x58, 0xa1, 0x0d, 0xb8,
	0x28, 0x66, 0x25, 0xf1, 0xd1, 0x13, 0xde, 0x95, 0x33, 0xa5, 0x37, 0x13, 0xe2, 0x6b, 0xdc, 0x93,
	0xe4, 0x61, 0xe4, 0xd0, 0x99, 0xe1, 0x33, 0xee, 0x24, 0x86, 0x5a, 0xc5, 0x60, 0x9f, 0x40, 0xba,
	0xc9, 0xdb, 0x84, 0xe2, 0xdd, 0x1c, 0x17, 0x05, 0xf7, 0x2e, 0x02, 0x3d, 0x78, 0xe3, 0xeb, 0x68,
	0xd8, 0x44, 0x75, 0xc0, 0x22, 0x4a, 0xb1, 0x68, 0x4d, 0x8e, 0x45, 0x1b, 0x07, 0x68, 0x05, 0x82,
	0x9d, 0x04, 0x31, 0x0f, 0x60, 0x8e, 0x81, 0x09, 0x4a, 0xae, 0x4d, 0x0a, 0xfc, 0x9b, 0x08, 0x69,
	0xfc, 0x84, 0x07, 0xf5, 0x04, 0x3e, 0xcc, 0x38, 0x0a, 0x49, 0xc9, 0x27, 0x00, 0x5e, 0xe6, 0xe1,
	0xc0, 0x15, 0xb8, 0xa7, 0x66, 0x79, 0xd5, 0x18, 0x30, 0xf9, 0x08, 0x32, 0xd8, 0x95, 0x8a, 0xfb,
	0xd3, 0xc9, 0x1d, 0xd3, 0x0c, 0xb6, 0xdc, 0x53, 0x73, 0xbf, 0x92, 0x33, 0xe5, 0x7e, 0x19, 0x26,
	0x2a, 0xc7, 0x98, 0xf9, 0xf8, 0x02, 0x92, 0xc2, 0xa4, 0x2a, 0x67, 0x4a, 0xea, 0x95, 0x80, 0x32,
	0x1c, 0x59, 0x04, 0xb0, 0x69, 0xa7, 0x43, 0xad, 0xc1, 0x88, 0x3f, 0x23, 0x6a, 0xb5, 0xd9, 0x32,
	0xd5, 0xae, 0x40, 0x86, 0x27, 0xde, 0x09, 0x45, 0x4f, 0x9a, 0x69, 0x2c, 0x57, 0x5b, 0xc6, 0x0d,
	0x7e, 0xfa, 0x08, 0x0f, 0xea, 0x5f, 0xf3, 0x07, 0xdb, 0xd5, 0x6d, 0xfa, 0x67, 0x43, 0x95, 0x38,
	0xce, 0x44, 0x8c, 0x2a, 0xc8, 0x2a, 0x23, 0x59, 0x4a, 0xa6, 0x9a, 0x22, 0xd8, 0xb7, 0x61, 0xc9,
	0x1e, 0x35, 0x8e, 0xe4, 0x3b, 0x27, 0xd5, 0x56, 0x5b, 0x46, 0x1f, 0xc7, 0x89, 0x42, 0x23, 0xd6,
	0xf0, 0x08, 0x88, 0x8c, 0x47, 0xba, 0xf9, 0x89, 0xba, 0x88, 0x0a, 0x64, 0xce, 0x99, 0x2b, 0x52,
	0x5f, 0x7e, 0x2b, 0x64, 0x3c, 0xc4, 0x45, 0x96, 0x00, 0xe3, 0x6f, 0x63, 0x86, 0x1d, 0x9c, 0x74,
	0x60, 0xcf, 0x78, 0xeb, 0xc4, 0xee, 0x06, 0x89, 0x55, 0xd7, 0x3e, 0x26, 0x93, 0x6f, 0x04, 0xc9,
	0x0e, 0xac, 0xe5, 0x5f, 0x0b, 0x8e, 0xa2, 0x5e, 0x24, 0xc5, 0x1b, 0x85, 0xac, 0x41, 0x8a, 0x67,
	0x19, 0xa2, 0x2c, 0x65, 0x4c, 0x51, 0x0a, 0x8f, 0x1e, 0xb8, 0x38, 0xfa, 0x52, 0x68, 0x9d, 0x3d,
	0x6c, 0x6d, 0x5b, 0xcd, 0x57, 0xc3, 0xfe, 0x0c, 0x7e, 0xc5, 0x1d, 0x25, 0x5e, 0x80, 0x49, 0x92,
	0x7c, 0x33, 0x91, 0xa2, 0x3b, 0x27, 0x43, 0xfe, 0x6e, 0xfd, 0xc5, 0xb0, 0xd3, 0x11, 0x79, 0x3b,
	0xf8, 0xdb, 0xd7, 0xbc, 0xd0, 0xc0, 0x82, 0xb0, 0x3f, 0xd5, 0x82, 0x00, 0xe1, 0xed, 0xfd, 0x39,
	0xd6, 0x4b, 0xa4, 0xf1, 0x8a, 0x6a, 0x8b, 0xed, 0x4e, 0x03, 0x0e, 0xde, 0x10, 0xf4, 0x4b, 0x11,
	0xb3, 0x15, 0xd1, 0xc4, 0xb7, 0x38, 0x8c, 0x55, 0x46, 0x4c, 0x25, 0x19, 0x39, 0x95, 0x71, 0x89,
	0x32, 0xc6, 0x13, 0xa1, 0xb3, 0x61, 0x72, 0x85, 0x78, 0x16, 0x61, 0x25, 0x40, 0x92, 0x4f, 0xf7,
	0xb2, 0x42, 0x10, 0x9e, 0x64, 0x02, 0xab, 0x12, 0x3a, 0x1c, 0x8c, 0x9f, 0x7a, 0xec, 0x55, 0x59,
	0x85, 0x79, 0x7c, 0x8d, 0x23, 0x96, 0x85, 0x17, 0xc2, 0xeb, 0x12, 0x10, 0xd7, 0x2e, 0x8f, 0xee,
	0x05, 0xdb, 0x4b, 0x1d, 0x3f, 0x70, 0x6b, 0x40, 0xce, 0x19, 0x34, 0x43, 0x93, 0x5c, 0x70, 0x06,
	0xcd, 0xa7, 0xb3, 0x8a, 0x8e, 0xb8, 0x80, 0x8b, 0x1e, 0x4e, 0x50, 0xf4, 0x07, 0x5a, 0x90, 0xa4,
	0xd0, 0xe6, 0x1a, 0x87, 0xa4, 0xeb, 0x00, 0xc2, 0x67, 0x90, 0xc2, 0x9e, 0xa2, 0x26, 0x9a, 0xe2,
	0x68, 0x09, 0xd1, 0x21, 0x69, 0x75, 0x3a, 0xe2, 0x11, 0x0d, 0xfb, 0x69, 0xfc, 0x65, 0x02, 0x88,
	0x4a, 0x20, 0x26, 0x8d, 0x05, 0x33, 0x39, 0x42, 0x44, 0x26, 0xc2, 0x44, 0xbe, 0x07, 0xcb, 0x12,
	0x0c, 0xca, 0x34, 0xa7, 0x22, 0xe7, 0x43, 0xa1, 0x3c, 0x2b, 0x29, 0xe3, 0x73, 0xb3, 0xa4, 0x8c,
	0x1f, 0x48, 0xdf, 0x44, 0x98, 0xc7, 0x8d, 0x3b, 0xf2, 0x46, 0x2b, 0x30, 0x99, 0x8d, 0x03, 0xd1,
	0x47, 0xa4, 0x45, 0x79, 0x28, 0x48, 0xc9, 0xcf, 0x17, 0xe0, 0x4f, 0x4c, 0xdf, 0x9f, 0x82, 0x8c,
	0x9b, 0x5e, 0xfe, 0xc2, 0x86, 0x77, 0x2c, 0x3c, 0x82, 0x9c, 0x82, 0x7d, 0x26, 0x67, 0xf6, 0x97,
	0x82, 0xf2, 0x13, 0x76, 0x54, 0x3e, 0x85, 0x34, 0x57, 0x1e, 0xcf, 0x53, 0xb9, 0x15, 0x63, 0xc2,
	0xa6, 0xd7, 0xc7, 0xf8, 0x9f, 0x09, 0x3c, 0x4a, 0x86, 0xe6, 0x30, 0x59, 0x4b, 0x3f, 0x85, 0x94,
	0xdd, 0xc7, 0xa4, 0x39, 0x9e, 0xf1, 0x76, 0x7b, 0xca, 0x98, 0x47, 0x7d, 0xce, 0x13, 0xde, 0x49,
	0x62, 0x6b, 0xf2, 0x2b, 0xb2, 0x75, 0xf4, 0x46, 0xa2, 0x65, 0x8b, 0x8f, 0x80, 0x78, 0x6f, 0x24,
	0x76, 0xed, 0x1e, 0x73, 0xb9, 0x01, 0x5d, 0xd1, 0x06, 0xbe, 0xdf, 0x8a, 0xf1, 0xea, 0x00, 0xa1,
	0x59, 0x99, 0x94, 0xf8, 0xc3, 0x3e, 0xa6, 0xa7, 0xad, 0x46, 0xcc, 0xe7, 0x5f, 0x39, 0xbf, 0x07,
	0xa2, 0x90, 0xcc, 0x6c, 0x5a, 0x31, 0xb3, 0xcf, 0x82, 0x96, 0x51, 0xa4, 0x9b, 0xcc, 0xa0, 0xe8,
	0xab, 0x30, 0xcf, 0x8e, 0xe5, 0x1d, 0xb1, 0x53, 0xf2, 0x82, 0xf1, 0x9f, 0x42, 0xfb, 0x8d, 0x87,
	0x59, 0x88, 0xc9, 0x33, 0xc8, 0x70, 0xce, 0xf9, 0x79, 0x11, 0x8f, 0x62, 0x31, 0x7d, 0x94, 0x5c,
	0x26, 0x7a, 0x0b, 0x15, 0xf1, 0x90, 0x15, 0x9e, 0x43, 0x4e, 0x69, 0x8a, 0x90, 0xef, 0x47, 0x6a,
	0x0e, 0xd0, 0xed, 0x78, 0x03, 0x4b, 0x6a, 0xd0, 0x0a, 0xed, 0xb6, 0x96, 0x6b, 0x75, 0xec, 0xd3,
	0xb7, 0xba, 0xa3, 0x18, 0x8f, 0x82, 0x7b, 0xa0, 0x3f, 0x8a, 0xe0, 0x61, 0x01, 0x32, 0x4d, 0xbb,
	0xe7, 0xd2, 0x9e, 0xeb, 0x9d, 0x14, 0xfd, 0xb2, 0xf1, 0x63, 0x4d, 0x1c, 0xba, 0xfc, 0xde, 0x95,
	0x36, 0x9b, 0xe2, 0x79, 0xd5, 0xa5, 0xdd, 0x58, 0x0b, 0xab, 0x18, 0xbd, 0xc4, 0x2c, 0x46, 0xef,
	0xa7, 0x57, 0x27, 0x63, 0x3b, 0xc8, 0x61, 0x41, 0xfd, 0x0c, 0x92, 0x69, 0xf4, 0x82, 0xfc, 0xf3,
	0x71, 0x08, 0xfe, 0x1d, 0xc0, 0xe2, 0x4b, 0x5e, 0xd5, 0xe8, 0xb4, 0x1d, 0xef, 0x51, 0x4b, 0x71,
	0x0a, 0xb5, 0x12, 0x1f, 0xcd, 0x05, 0xd1, 0x7f, 0xbf, 0xed, 0xb8, 0x6c, 0xe7, 0x5c, 0x0f, 0x4f,
	0x8c, 0xf2, 0x04, 0xdb, 0x59, 0x54, 0xea, 0x29, 0x2c, 0x0f, 0x38, 0xb8, 0xff, 0xf2, 0x90, 0x9b,
	0xb5, 0xfb, 0x53, 0x48, 0x33, 0xbd, 0x5e, 0xfc, 0x29, 0xe2, 0xd2, 0x40, 0x29, 0x8b, 0xb4, 0xa6,
	0x71, 0xf4, 0x89, 0xfd, 0xff, 0xdf, 0x6b, 0x22, 0xb4, 0x30, 0x82, 0x12, 0xe9, 0x0c, 0xb8, 0xcd,
	0xbe, 0x4d, 0x77, 0x44, 0xc9, 0xb3, 0x48, 0x7e, 0xf5, 0x3c, 0x0b, 0x72, 0x13, 0x16, 0xba, 0xd6,
	0x2f, 0x37, 0xbc, 0x7d, 0x87, 0x5b, 0x5f, 0xe8, 0x5a, 0xbf, 0xbc, 0x2d, 0x76, 0x95, 0xf3, 0xd0,
	0xca, 0xb0, 0xae, 0xaa, 0x73, 0x7e, 0x02, 0x7a, 0x93, 0x01, 0xf0, 0x47, 0xd9, 0xfc, 0xf9, 0xa4,
	0x36, 0xfe, 0x9a, 0x71, 0x0c, 0x83, 0xcc, 0x25, 0x44, 0x82, 0x55, 0xac, 0x6c, 0x7c, 0x23, 0xc4,
	0x74, 0x79, 0x68, 0x21, 0x89, 0x11, 0xaf, 0xa2, 0x8c, 0x8f, 0x23, 0x69, 0x0e, 0x25, 0x59, 0x85,
	0xfa, 0xdd, 0x8a, 0x1c, 0x30, 0xe0, 0x77, 0xde, 0x86, 0x5b, 0x11, 0x40, 0xa1, 0x40, 0xd2, 0x6f,
	0x24, 0xe0, 0xdd, 0xc9, 0x70, 0x62, 0x02, 0x8e, 0xca, 0x3c, 0x49, 0x9d, 0xaa, 0x71, 0x98, 0x17,
	0x42, 0xb8, 0xb1, 0xe3, 0x73, 0x91, 0xe9, 0x16, 0x37, 0xf2, 0x12, 0x6b, 0x59, 0x65, 0xa1, 0x07,
	0x17, 0x23, 0xc0, 0x22, 0x0c, 0x7e, 0x49, 0x35, 0xf8, 0x33, 0xad, 0xa7, 0x64, 0xf6, 0xff, 0x49,
	0x02, 0x16, 0x11, 0xec, 0xa0, 0x7d, 0xca, 0x88, 0x35, 0x1a, 0x90, 0x3b, 0xea, 0x33, 0xba, 0xdb,
	0x76, 0x0f, 0x5f, 0x1d, 0x2e, 0xc3, 0x42, 0xb5, 0x77, 0x66, 0x75, 0xda, 0x2d, 0x56, 0xd4, 0x2f,
	0x10, 0x02, 0x4b, 0x02, 0x58, 0xc4, 0x1f, 0x74, 0x8d, 0xac, 0x40, 0x4e, 0xd4, 0x71, 0x8d, 0xd1,
	0x13, 0x64, 0x0d, 0x88, 0x52, 0x85, 0x19, 0xd5, 0x7a, 0xd2, 0x38, 0xc4, 0xa7, 0xa5, 0xa7, 0x94,
	0xe8, 0xb0, 0x28, 0x10, 0x63, 0x59, 0xbf, 0x40, 0x00, 0x52, 0x9c, 0x5a, 0x5d, 0x23, 0x0b, 0x90,
	0x16, 0xe7, 0x23, 0x3d, 0xc1, 0x40, 0xc5, 0xcd, 0x1d, 0x9e, 0x4d, 0xf5, 0x24, 0xc9, 0xc0, 0x1c,
	0x73, 0x42, 0xf4, 0x39, 0xe3, 0x39, 0xa4, 0x84, 0x3b, 0xb5, 0x02, 0xb9, 0x11, 0x42, 0x77, 0xe8,
	0x70, 0x8c, 0xdf, 0x19, 0xd2, 0x21, 0x6d, 0xe9, 0x1a, 0x9f, 0x48, 0x9b, 0x29, 0x6a, 0xfb, 0xfb,
	0xb4, 0xa5, 0x27, 0xc8, 0x12, 0x40, 0xb5, 0xe7, 0x3d, 0x13, 0xd5, 0x93, 0x0c, 0x78, 0xcf, 0x6a,
	0x77, 0x68, 0x4b, 0x9f, 0x23, 0x8b, 0x90, 0xd9, 0x11, 0xfe, 0x86, 0x3e, 0x6f, 0xfc, 0x63, 0x0d,
	0xf2, 0x32, 0x97, 0x30, 0xaa, 0xe6, 0x09, 0x6c, 0x15, 0xb2, 0xb6, 0xc7, 0x31, 0x11, 0xe2, 0x09,
	0xaf, 0x86, 0xdc, 0x7b, 0x43, 0x61, 0xb0, 0x39, 0xea, 0x3d, 0xed, 0x84, 0x71, 0x15, 0xb2, 0xae,
	0x35, 0x38, 0xa5, 0xee, 0x28, 0x37, 0x36, 0xc3, 0x2b, 0xaa, 0x2d, 0xe3, 0x8f, 0x34, 0xb8, 0x22,
	0x8f, 0xb2, 0x63, 0xf5, 0x9a, 0xb4, 0xf3, 0xff, 0x19, 0x91, 0xff, 0x31, 0x09, 0xba, 0x3c, 0x0a,
	0xda, 0x5f, 0x15, 0xa1, 0x16, 0x44, 0xf8, 0x1e, 0x2c, 0xa3, 0x03, 0x16, 0x3a, 0xf7, 0xe4, 0xb0,
	0xda, 0x37, 0xd1, 0x45, 0x58, 0x51, 0xe0, 0xa4, 0xb3, 0xcf, 0xb2, 0x04, 0x89, 0xa7, 0x9f, 0xbb,
	0xa0, 0x0f, 0x68, 0xd7, 0x76, 0xe5, 0x93, 0x36, 0x3f, 0xad, 0x2f, 0xf1, 0x7a, 0x1f, 0xeb, 0x6d,
	0xe0, 0x2a, 0x3a, 0x72, 0x7e, 0xf8, 0x13, 0x97, 0x9c, 0x54, 0x5b, 0x6d, 0x91, 0x0a, 0xe4, 0xbc,
	0xc7, 0x92, 0x0e, 0x93, 0x66, 0x71, 0x98, 0xb9, 0x35, 0x99, 0xc7, 0x28, 0xf8, 0xe6, 0xa2, 0xe8,
	0xc9, 0xd5, 0xe2, 0xe7, 0x02, 0xe9, 0xf2, 0xef, 0x4e, 0x45, 0x21, 0x27, 0x53, 0x3f, 0x82, 0x05,
	0xfc, 0xac, 0xc1, 0x10, 0x15, 0x05, 0xdf, 0xdd, 0x4e, 0xf6, 0x71, 0x80, 0x81, 0x73, 0xb5, 0x22,
	0x9f, 0xc2, 0x22, 0xff, 0x26, 0xc2, 0x10, 0x13, 0x99, 0x62, 0x7c, 0x16, 0x01, 0x07, 0xab, 0x71,
	0x70, 0xe3, 0x00, 0x56, 0x83, 0x6b, 0xcb, 0x2c, 0x18, 0xf9, 0x08, 0xe6, 0x24, 0xe3, 0xf9, 0xce,
	0xc4, 0xf9, 0xa0, 0x7d, 0x42, 0x70, 0xe3, 0xdf, 0x68, 0x50, 0x08, 0x28, 0x9d, 0xec, 0x6d, 0x57,
	0x61, 0x4e, 0xec, 0x67, 0xd1, 0xa9, 0x05, 0xe3, 0xbb, 0x6e, 0x8c, 0x3e, 0x0e, 0x80, 0x28, 0x0a,
	0xbf, 0x08, 0xd9, 0x49, 0xef, 0xe4, 0xa7, 0xfa, 0xd6, 0x51, 0xb3, 0x96, 0x8c, 0x6c, 0xf1, 0x7f,
	0x27, 0x7c, 0x1b, 0xb5, 0x0c, 0x0b, 0xb5, 0x7a, 0xa9, 0x7e, 0x52, 0x6b, 0x1c, 0x1e, 0x1d, 0x96,
	0xf5, 0x0b, 0x52, 0x45, 0xf5, 0xb0, 0x5a, 0xd7, 0x35, 0x92, 0x83, 0xac, 0xa8, 0x38, 0x7a, 0xa2,
	0x27, 0x98, 0xb5, 0xf5, 0x8a, 0x7b, 0x7b, 0xfb, 0xd5, 0xc3, 0xb2, 0x9e, 0x64, 0xe6, 0x50, 0xd4,
	0x95, 0x4d, 0xf3, 0xc8, 0xd4, 0xe7, 0x48, 0x1e, 0x56, 0x7d, 0xb4, 0xf5, 0x46, 0xf5, 0xb0, 0xf1,
	0x9d, 0x93, 0x23, 0xf3, 0xe4, 0x40, 0x9f, 0x27, 0x97, 0xe1, 0xa2, 0x68, 0xd9, 0x2d, 0xef, 0x1c,
	0x1d, 0x1c, 0x54, 0x6b, 0xb5, 0xea, 0xd1, 0xa1, 0x9e, 0x62, 0xf6, 0x59, 0x34, 0x1c, 0x94, 0xaa,
	0x87, 0xf5, 0xf2, 0x61, 0xe9, 0x70, 0xa7, 0xac, 0xa7, 0xa5, 0x0e, 0xb5, 0xfa, 0x91, 0x59, 0x7a,
	0x5c, 0x6e, 0xec, 0x1e, 0x3d, 0x3b, 0xd4, 0x33, 0xe4, 0x2a, 0x5c, 0x0e, 0x36, 0x94, 0x1f, 0x9b,
	0xa5, 0xdd, 0xf2, 0xae, 0x9e, 0x95, 0x7a, 0x1d, 0x96, 0xcb, 0xbb, 0xb5, 0x86, 0x59, 0xde, 0x3e,
	0x3a, 0xaa, 0xeb, 0x40, 0xae, 0x41, 0x3e, 0xd0, 0xcb, 0x2c, 0x6f, 0x97, 0xf6, 0x71, 0xb0, 0x05,
	0xb2, 0x0e, 0xd7, 0x82, 0x38, 0xcd, 0xea, 0x53, 0x06, 0x73, 0xbc, 0x5f, 0xda, 0x29, 0xeb, 0x8b,
	0xe4, 0x16, 0xdc, 0x8c, 0x9a, 0x59, 0xe3, 0xf0, 0xc8, 0xeb, 0xa2, 0xe7, 0x98, 0x25, 0xf7, 0xe7,
	0xf2, 0x99, 0xbe, 0x54, 0xfc, 0x91, 0x06, 0xc0, 0x9f, 0x82, 0xe1, 0x16, 0xb6, 0x0a, 0x3a, 0xa2,
	0x35, 0x1b, 0xf5, 0xef, 0x1e, 0x97, 0x3d, 0xce, 0x07, 0x6a, 0xf7, 0xaa, 0xfb, 0x65, 0x5d, 0x23,
	0x97, 0x60, 0x45, 0xae, 0xdd, 0xde, 0x3f, 0xda, 0x79, 0xc2, 0x77, 0x33, 0xb9, 0xfa, 0x68, 0xfb,
	0xdb, 0xe5, 0x9d, 0xba, 0x9e, 0x24, 0x57, 0xe0, 0x92, 0x5c, 0xbf, 0xb3, 0x7f, 0x52, 0xab, 0x97,
	0xcd, 0xf2, 0xae, 0x3e, 0x17, 0xc4, 0xf4, 0xd8, 0x2c, 0x1d, 0x57, 0xf4, 0xf9, 0xe2, 0xef, 0x69,
	0x90, 0xe2, 0x5f, 0x08, 0x61, 0xeb, 0xb8, 0x57, 0x53, 0x68, 0x5a, 0x81, 0x9c, 0x57, 0xb3, 0x5d,
	0x37, 0xf7, 0x6a, 0xba, 0x26, 0x03, 0x95, 0x3f, 0xab, 0x7f, 0xc8, 0x77, 0x43, 0xaf, 0x66, 0xef,
	0xa4, 0xc6, 0x04, 0x62, 0x19, 0x16, 0x7c, 0x44, 0x7b, 0x35, 0x7d, 0x4e, 0xae, 0x78, 0xba, 0x57,
	0xd3, 0xe7, 0xe5, 0x8a, 0xcf, 0xf6, 0x6a, 0x7a, 0x4a, 0xae, 0xf8, 0xde, 0x5e, 0x4d, 0x4f, 0x17,
	0xff, 0x44, 0x83, 0x4b, 0x91, 0x6f, 0xe8, 0xc8, 0x3b, 0x70, 0x1d, 0x89, 0x6f, 0x88, 0xe9, 0xec,
	0x54, 0x4a, 0x87, 0x8f, 0xcb, 0x0a, 0xdd, 0xb7, 0xe1, 0x9d, 0xb1, 0x20, 0x07, 0x47, 0xbb, 0xd5,
	0xbd, 0x6a, 0x79, 0x57, 0xd7, 0x88, 0x01, 0x37, 0xc6, 0x82, 0x95, 0x76, 0x99, 0x24, 0x25, 0xc8,
	0xbb, 0xb0, 0x3e, 0x16, 0x66, 0xb7, 0xbc, 0x5f, 0xae, 0x97, 0x77, 0xf5, 0x64, 0xd1, 0x85, 0x45,
	0xf9, 0x23, 0x0a, 0x28, 0xcd, 0xe5, 0xa7, 0x65, 0xb3, 0x5a, 0xff, 0xae, 0x42, 0x18, 0x93, 0x4b,
	0xa5, 0xbe, 0xb4, 0x5f, 0x32, 0x0f, 0x74, 0x8d, 0x2d, 0x9c, 0xda, 0xf0, 0xac, 0x64, 0x1e, 0x56,
	0x0f, 0x1f, 0xeb, 0x09, 0x54, 0xa6, 0x00, 0xae, 0x7a, 0x75, 0xef, 0xbb, 0x7a, 0xb2, 0xf8, 0x43,
	0x0d, 0x16, 0xe5, 0xcb, 0x1a, 0x36, 0xac, 0x59, 0xae, 0x1d, 0x9d, 0x98, 0x3b, 0x2a, 0x3f, 0xf2,
	0xb0, 0xaa, 0xd6, 0x3f, 0x3d, 0xda, 0x3f, 0x39, 0x60, 0xf2, 0x15, 0xd1, 0x63, 0xb7, 0xac, 0x27,
	0x18, 0x3d, 0x6a, 0xbd, 0x10, 0x25, 0x3d, 0xc9, 0xe6, 0xa0, 0x36, 0x21, 0x67, 0xf4, 0xb9, 0xe2,
	0xaf, 0x6b, 0xb0, 0x8c, 0x97, 0x3f, 0xfc, 0xfd, 0x31, 0x52, 0x54, 0x80, 0xb5, 0xd2, 0x7e, 0xd9,
	0xac, 0x37, 0x4a, 0x3b, 0xf5, 0xea, 0xd1, 0xa1, 0x42, 0xd5, 0x35, 0xc8, 0x87, 0xdb, 0x38, 0x4f,
	0x75, 0x2d, 0xba, 0x75, 0xc7, 0x2c, 0x97, 0xea, 0x8c, 0xbe, 0xc8, 0xd6, 0x93, 0xe3, 0x5d, 0xd6,
	0x9a, 0x2c, 0x7e, 0xee, 0x3d, 0x35, 0x96, 0x5e, 0x82, 0xb3, 0x2e, 0x7c, 0xda, 0x5e, 0x9f, 0xe3,
	0x92, 0x59, 0x3a, 0xf0, 0x88, 0xb9, 0x0a, 0x97, 0xa3, 0x5a, 0x8f, 0xf6, 0xf6, 0x74, 0x8d, 0xcd,
	0x22, 0xb2, 0xf1, 0x50, 0x4f, 0x14, 0xb7, 0x20, 0x2d, 0x3e, 0x3a, 0xc7, 0xbc, 0x40, 0x81, 0x2d,
	0x0d, 0xc9, 0xfd, 0xa3, 0x67, 0xba, 0xc6, 0x9c, 0xb8, 0x83, 0xf2, 0x6e, 0xf5, 0xe4, 0x40, 0x4f,
	0xb0, 0xe6, 0x4a, 0xf5, 0x71, 0x45, 0x4f, 0x16, 0x7f, 0x05, 0xb2, 0xfe, 0x37, 0xe7, 0x18, 0xab,
	0xab, 0x47, 0x8d, 0x63, 0xf3, 0x88, 0xa9, 0x7c, 0xa3, 0x56, 0xfe, 0xce, 0x49, 0xf9, 0xb0, 0x5e,
	0x2d, 0xed, 0xeb, 0x17, 0x98, 0xce, 0x4a, 0x4d, 0x66, 0xe9, 0x70, 0xf7, 0xe8, 0x80, 0xbb, 0xb7,
	0x52, 0xf5, 0xee, 0x36, 0x17, 0x12, 0xa5, 0xaa, 0x61, 0x96, 0x0f, 0x8e, 0x18, 0x2f, 0x98, 0xc5,
	0x96, 0x5a, 0x76, 0x0e, 0x6a, 0xfa, 0x5c, 0xf1, 0x47, 0x09, 0x58, 0x90, 0xde, 0x8b, 0xb3, 0x71,
	0xc4, 0xfc, 0x98, 0xdd, 0x92, 0xc5, 0x46, 0xa9, 0x3e, 0x2e, 0x1f, 0xee, 0x32, 0x99, 0x94, 0x19,
	0xc2, 0x5b, 0x4a, 0x4f, 0x4b, 0xd5, 0xfd, 0xd2, 0xf6, 0xbe, 0x10, 0x1d, 0xb5, 0xad, 0x5e, 0x2f,
	0xed, 0x54, 0x98, 0x9a, 0x84, 0x9a, 0x76, 0xcb, 0xa2, 0x69, 0x4e, 0xe2, 0xff, 0xa8, 0xa9, 0xbe,
	0x53, 0x61, 0xc3, 0xcd, 0x33, 0x29, 0x55, 0x1a, 0xf9, 0x3e, 0x93, 0x0a, 0x11, 0xe8, 0x29, 0x64,
	0x9a, 0xdc, 0x80, 0x82, 0xd2, 0x52, 0x37, 0xbf, 0x2b, 0x46, 0x63, 0x18, 0x33, 0xa1, 0x9e, 0x66,
	0x99, 0x99, 0xef, 0xb2, 0x9e, 0x2d, 0xfe, 0xb6, 0xe6, 0x79, 0xf7, 0x35, 0xef, 0x63, 0x17, 0xf2,
	0xe0, 0xa3, 0xad, 0xf2, 0x3a, 0x5c, 0x09, 0xd6, 0xd7, 0x1b, 0xc7, 0x66, 0xb9, 0x56, 0x3e, 0x64,
	0x1b, 0xe7, 0x2a, 0xe8, 0x6a, 0xf3, 0xc9, 0x31, 0x37, 0xdc, 0x6a, 0x2d, 0xee, 0x66, 0xc9, 0x00,
	0x43, 0x71, 0x7b, 0x14, 0x9b, 0xd9, 0x5c, 0xf1, 0x17, 0x20, 0xa7, 0x7c, 0x6e, 0x97, 0x6f, 0x7d,
	0x7c, 0x7f, 0xe2, 0xc2, 0xd5, 0x38, 0x28, 0x3d, 0x3e, 0x2c, 0xd7, 0xab, 0x3b, 0xfa, 0x05, 0xbe,
	0x91, 0x2a, 0x8d, 0xb5, 0x1a, 0x33, 0x76, 0xb8, 0x25, 0x2a, 0xf5, 0x87, 0x4f, 0x0f, 0xca, 0x7a,
	0xa2, 0x78, 0x17, 0x72, 0xe2, 0xe4, 0x74, 0x68, 0xbb, 0xed, 0x17, 0xe7, 0x0c, 0x52, 0x68, 0xbb,
	0x30, 0x35, 0x9c, 0xc8, 0x0b, 0x45, 0x0a, 0x0b, 0xd2, 0x77, 0x98, 0xd8, 0x6a, 0xf2, 0xb5, 0xf5,
	0x56, 0xe5, 0xb3, 0x7a, 0xd9, 0x3c, 0x44, 0xc1, 0x0d, 0x36, 0xb1, 0x1d, 0x1d, 0x9b, 0x34, 0xb6,
	0xc7, 0x46, 0x36, 0x35, 0x6a, 0xcf, 0xaa, 0xf5, 0x9d, 0x8a, 0x9e, 0x28, 0xd6, 0x61, 0xc9, 0xf7,
	0xf6, 0xf7, 0x3a, 0xd6, 0xa9, 0xc3, 0x78, 0x79, 0x74, 0xdc, 0xd8, 0xdb, 0x2f, 0x3d, 0xae, 0x35,
	0x4e, 0x0e, 0x9f, 0x1c, 0x22, 0x39, 0x4c, 0x0d, 0xfc, 0x5a, 0x5c, 0x13, 0x34, 0xa3, 0x7e, 0x15,
	0x5f, 0xee, 0xc6, 0xde, 0x91, 0xb9, 0xc3, 0xa6, 0xf9, 0x13, 0x0d, 0x96, 0xd4, 0x97, 0x46, 0x68,
	0x59, 0x95, 0x9a, 0xda, 0xb0, 0xd7, 0xb2, 0xce, 0xb9, 0xe4, 0xab, 0x2d, 0x07, 0x36, 0xb6, 0x70,
	0x43, 0xad, 0xb4, 0xd4, 0x87, 0xd4, 0x61, 0x4d, 0x09, 0x5c, 0x16, 0xa5, 0xe9, 0x19, 0x6d, 0xf5,
	0x78, 0x23, 0x2e, 0x70, 0xa0, 0xdf, 0xcb, 0xe1, 0x00, 0xdb, 0xe6, 0xc2, 0xa3, 0xed, 0x0d, 0xda,
	0xac, 0x65, 0x3e, 0xdc, 0xab, 0x66, 0xb9, 0xc3, 0x01, 0x6b, 0x4b, 0x15, 0xff, 0x7a, 0x30, 0x8c,
	0xcf, 0x43, 0xee, 0xe4, 0x66, 0x30, 0xe2, 0xcc, 0xeb, 0x4f, 0x7a, 0xaf, 0x7a, 0xf6, 0x97, 0x3d,
	0xfd, 0x02, 0x7a, 0x39, 0x11, 0x00, 0xde, 0x6f, 0x5d, 0x63, 0x5b, 0x6c, 0x64, 0x34, 0x9f, 0x9f,
	0x80, 0x8f, 0xfa, 0x7a, 0xa2, 0xf8, 0x67, 0x09, 0x91, 0xa7, 0x12, 0x11, 0x63, 0x44, 0x2f, 0x69,
	0x4c, 0xdb, 0x88, 0x8c, 0xf7, 0x30, 0x6d, 0x27, 0x12, 0xe8, 0xd0, 0x76, 0xf1, 0x4c, 0x8b, 0x07,
	0xe5, 0xf5, 0xe8, 0x38, 0x37, 0x83, 0xc3, 0x33, 0x77, 0x62, 0xd2, 0x70, 0xa5, 0xe7, 0x36, 0xa2,
	0x49, 0xb2, 0xcd, 0x7e, 0x1c, 0xd0, 0xb1, 0x35, 0x74, 0xf0, 0x98, 0x3d, 0x01, 0x51, 0xcd, 0xb5,
	0xfb, 0x7d, 0xda, 0xd2, 0xe7, 0x27, 0x21, 0xe2, 0x0f, 0xd5, 0xf5, 0xd4, 0x24, 0x18, 0x71, 0xa6,
	0x4f, 0x17, 0x7f, 0x1c, 0x71, 0x61, 0x2c, 0x07, 0x13, 0xc9, 0x9d, 0x60, 0x04, 0x49, 0x6d, 0x1f,
	0x71, 0xf2, 0x76, 0x30, 0x1e, 0xa5, 0x02, 0xe2, 0xf4, 0x74, 0x2d, 0xcc, 0xf0, 0x40, 0x30, 0x93,
	0x3a, 0x3c, 0x54, 0xf2, 0x6e, 0x30, 0x2c, 0xa6, 0xc2, 0x31, 0x4e, 0xe8, 0xc9, 0xad, 0xff, 0x30,
	0x0f, 0xe4, 0xa8, 0x4f, 0x7b, 0x81, 0xf7, 0xb6, 0xaf, 0x21, 0xeb, 0x87, 0x9a, 0xc8, 0x98, 0x30,
	0x50, 0x64, 0x4a, 0x55, 0xe1, 0x5e, 0x3c, 0x60, 0x11, 0x5e, 0xbb, 0xf8, 0xb7, 0xfe, 0xe2, 0xbf,
	0xff, 0x6e, 0x22, 0x47, 0x16, 0x36, 0xcf, 0x3e, 0xd8, 0x14, 0xa7, 0x73, 0xf2, 0xab, 0x90, 0x16,
	0x19, 0x21, 0xe4, 0xfd, 0x09, 0xd8, 0xd4, 0xe4, 0x93, 0x42, 0x31, 0x0e, 0xa8, 0x18, 0xf6, 0x3a,
	0x0e, 0x7b, 0x99, 0x5c, 0x92, 0x86, 0xdd, 0x7c, 0x2d, 0xae, 0x7e, 0xde, 0x90, 0xdf, 0xd7, 0x60,
	0x49, 0x4d, 0x2f, 0x22, 0x0f, 0x26, 0x60, 0x8f, 0xcc, 0xac, 0x2a, 0x7c, 0x30, 0x43, 0x0f, 0x41,
	0xd6, 0x7b, 0x48, 0xd6, 0xba, 0x71, 0x55, 0x26, 0x0b, 0xb3, 0x73, 0x36, 0xa9, 0x07, 0xfc, 0x50,
	0x2b, 0x92, 0xdf, 0xd4, 0x00, 0x46, 0x59, 0x43, 0xe4, 0xde, 0xb4, 0x91, 0xe4, 0x8c, 0xa6, 0xc2,
	0xfd, 0x98, 0xd0, 0x82, 0x26, 0x03, 0x69, 0xba, 0x66, 0x5c, 0x0e, 0xd3, 0x84, 0x1f, 0xde, 0x62,
	0xf4, 0xfc, 0x8e, 0x06, 0x0b, 0x52, 0xbe, 0x10, 0x99, 0x3a, 0x84, 0x12, 0x9c, 0x2d, 0x6c, 0xc4,
	0x05, 0x17, 0x24, 0xbd, 0x8b, 0x24, 0xdd, 0x28, 0x5e, 0x0b, 0x93, 0xf4, 0xda, 0xcb, 0x6d, 0x7a,
	0xb3, 0xf5, 0xaf, 0x72, 0xb0, 0x22, 0x49, 0xb6, 0xf8, 0xbe, 0xe5, 0x00, 0x52, 0x3c, 0xa4, 0x4c,
	0xee, 0x8c, 0x4f, 0x79, 0x54, 0xe2, 0xdd, 0x85, 0xbb, 0xd3, 0x01, 0x05, 0x61, 0x97, 0x90, 0xb0,
	0x65, 0x03, 0x18, 0x61, 0x3c, 0x06, 0xc4, 0xd8, 0x33, 0x84, 0x79, 0x4c, 0xce, 0x26, 0xef, 0x4d,
	0xc0, 0x24, 0x25, 0x8e, 0x17, 0xee, 0x4c, 0x85, 0x13, 0x03, 0x5e, 0xc5, 0x01, 0x2f, 0x19, 0xfa,
	0x68, 0xc0, 0xcd, 0x26, 0x83, 0x60, 0xc3, 0xbe, 0x86, 0x94, 0x58, 0x8f, 0x09, 0xf8, 0xd4, 0x95,
	0xb8, 0x3b, 0x1d, 0x50, 0x8c, 0x7c, 0x03, 0x47, 0xce, 0x17, 0xd7, 0xa4, 0x91, 0x5f, 0xfb, 0x61,
	0xaf, 0x37, 0xe4, 0x57, 0x46, 0x3a, 0x3c, 0x01, 0x69, 0x40, 0x85, 0xdf, 0x8f, 0x01, 0xa9, 0x8e,
	0x4f, 0xc6, 0x8d, 0xdf, 0x85, 0x64, 0x8d, 0xba, 0xe4, 0xdd, 0x09, 0x79, 0xad, 0x7e, 0x82, 0x78,
	0xe1, 0xf6, 0x14, 0x28, 0x31, 0xe6, 0x15, 0x1c, 0xf3, 0xa2, 0xb1, 0x24, 0x8d, 0xe9, 0x50, 0x97,
	0xf1, 0xfa, 0xd7, 0x34, 0xd9, 0x60, 0x16, 0xc7, 0xe3, 0x0b, 0x99, 0x89, 0xaf, 0xc5, 0x82, 0x15,
	0x14, 0xdc, 0x44, 0x0a, 0xae, 0x18, 0xab, 0x12, 0x05, 0x8a, 0x65, 0xf8, 0x5d, 0x6d, 0xf4, 0x69,
	0x10, 0x21, 0xe7, 0x9b, 0x33, 0xa6, 0x5d, 0x17, 0x1e, 0xc4, 0xef, 0xa0, 0x2e, 0x86, 0x71, 0x51,
	0x66, 0x8c, 0x00, 0x65, 0x54, 0xfd, 0x81, 0x06, 0xcb, 0x81, 0x64, 0x66, 0x12, 0x63, 0x14, 0x35,
	0xf3, 0x2a, 0xda, 0xa0, 0x4e, 0xce, 0x94, 0x56, 0x0c, 0x6a, 0x80, 0xb0, 0x4d, 0x91, 0xfd, 0xc4,
	0x08, 0xfc, 0x63, 0x8d, 0x7f, 0x45, 0x4a, 0xc9, 0x39, 0x26, 0x5b, 0xb3, 0x27, 0x45, 0x17, 0xbe,
	0x3e, 0x53, 0x1f, 0x41, 0xe6, 0x5d, 0x24, 0xd3, 0x30, 0xae, 0x47, 0x91, 0xa9, 0xac, 0xef, 0x39,
	0xa4, 0xb8, 0xef, 0x3e, 0x49, 0xa7, 0x95, 0x57, 0x41, 0x93, 0x74, 0x5a, 0x7d, 0xd2, 0x63, 0x5c,
	0x43, 0x32, 0xd6, 0x8c, 0x15, 0x89, 0x0c, 0xfe, 0xc9, 0x36, 0x31, 0x34, 0x7f, 0x8f, 0x33, 0xd9,
	0x9c, 0xc4, 0x1c, 0x3a, 0xf0, 0xb4, 0x27, 0x6a, 0xe8, 0x16, 0xf5, 0x86, 0x1e, 0xc2, 0x3c, 0x3e,
	0x2e, 0x9b, 0x64, 0x40, 0xe5, 0x87, 0x6e, 0x93, 0x0c, 0xa8, 0xfa, 0x4a, 0x2d, 0xca, 0x80, 0xe2,
	0x33, 0x2e, 0x36, 0xec, 0x1b, 0x48, 0x8b, 0x47, 0x5d, 0x93, 0x6c, 0x98, 0xfa, 0xc8, 0x6c, 0x92,
	0x0d, 0x0b, 0xbe, 0x10, 0x13, 0x5e, 0x88, 0x41, 0xa4, 0xc1, 0x87, 0x3d, 0x6f, 0xf8, 0xad, 0x9f,
	0xcc, 0xc1, 0x9a, 0xb4, 0x81, 0x49, 0xc9, 0x94, 0x6c, 0xc3, 0xf5, 0xcd, 0x6b, 0xe4, 0x66, 0x3b,
	0x36, 0x47, 0x37, 0x7a, 0xb3, 0x1d, 0x9f, 0x8b, 0xeb, 0xc9, 0x26, 0x59, 0x67, 0x44, 0x4a, 0xc9,
	0x9f, 0x9b, 0xaf, 0xd5, 0xfc, 0xd0, 0x37, 0xe4, 0x6f, 0x6a, 0xfe, 0xde, 0x7a, 0x6f, 0xca, 0x20,
	0xaa, 0xc1, 0xb9, 0x1f, 0x13, 0x5a, 0x50, 0x54, 0x40, 0x8a, 0x56, 0x8d, 0xe5, 0x00, 0x45, 0x6c,
	0xc9, 0x7e, 0x5b, 0xf3, 0x37, 0xbd, 0x69, 0x34, 0xa8, 0x3b, 0xdf, 0xfd, 0x98, 0xd0, 0x2a, 0x57,
	0x8a, 0xd3, 0xb9, 0xf2, 0xb7, 0x35, 0x48, 0x89, 0x9b, 0x90, 0x69, 0x14, 0x29, 0x19, 0xb8, 0x53,
	0x29, 0x0a, 0x64, 0xd4, 0xbe, 0x83, 0x14, 0x5d, 0x35, 0xd6, 0x82, 0x14, 0xf1, 0x4b, 0x1b, 0x26,
	0x50, 0xff, 0x65, 0x5e, 0x11, 0xa8, 0xd1, 0xbb, 0x55, 0x87, 0xfc, 0xaa, 0xbf, 0x74, 0xd1, 0xce,
	0x7e, 0xf4, 0x87, 0x19, 0xc6, 0x38, 0xfb, 0x63, 0x3e, 0x46, 0xa0, 0x2e, 0xdc, 0x28, 0xc3, 0xc1,
	0x09, 0x6f, 0xa0, 0x1b, 0x93, 0xf1, 0x86, 0xac, 0xee, 0x66, 0x6c, 0x78, 0x41, 0xca, 0x65, 0x24,
	0x65, 0x85, 0x04, 0x49, 0x61, 0x02, 0xe4, 0x6b, 0xd6, 0x94, 0xd9, 0x05, 0x14, 0xeb, 0x7e, 0x4c,
	0x68, 0x41, 0xc1, 0x1d, 0xa4, 0xe0, 0x1d, 0x72, 0x33, 0x40, 0xc1, 0xe6, 0x6b, 0xe5, 0xdd, 0xf1,
	0x1b, 0xf2, 0xc3, 0x91, 0x48, 0x4f, 0x59, 0x1b, 0x55, 0xa2, 0xef, 0xc5, 0x03, 0x56, 0xc9, 0x29,
	0x4e, 0x25, 0xe7, 0x1f, 0x68, 0x90, 0xf1, 0xde, 0x39, 0x93, 0x29, 0x73, 0x0e, 0x3c, 0xaa, 0x2e,
	0x6c, 0xc4, 0x05, 0x17, 0x44, 0x3d, 0x40, 0xa2, 0x8a, 0xe4, 0x6e, 0x90, 0xa8, 0x33, 0x01, 0x19,
	0xa4, 0x6e, 0xeb, 0x7f, 0xcd, 0xc3, 0x15, 0x49, 0xc4, 0x03, 0x9f, 0x30, 0xf9, 0xc1, 0xc8, 0x42,
	0xc5, 0xf8, 0x8c, 0x4b, 0x0c, 0xaf, 0x68, 0xe2, 0xd7, 0x9a, 0x14, 0xf3, 0xee, 0xa5, 0xe0, 0xf0,
	0xcf, 0x02, 0x31, 0x89, 0xff, 0xc1, 0xc8, 0x30, 0xc4, 0x20, 0x46, 0xb5, 0x0d, 0x0f, 0xe2, 0x77,
	0x50, 0x89, 0x29, 0x8c, 0x21, 0xe6, 0xef, 0x28, 0xea, 0xb7, 0x35, 0x1d, 0x7d, 0x3c, 0xc7, 0x67,
	0xca, 0x47, 0x9f, 0x3c, 0x8b, 0x40, 0x22, 0xa8, 0x22, 0x7f, 0x57, 0xd2, 0xc4, 0x58, 0x9f, 0xca,
	0x51, 0xb4, 0xf1, 0x83, 0x19, 0x7a, 0xa8, 0x16, 0x94, 0x5c, 0x09, 0x13, 0xb3, 0xf9, 0xba, 0x67,
	0x75, 0xe9, 0x1b, 0xf2, 0x5b, 0x23, 0x5d, 0x8c, 0xb1, 0x66, 0xaa, 0x3e, 0x3e, 0x88, 0xdf, 0x41,
	0x25, 0xa8, 0x38, 0x9e, 0xa0, 0xad, 0x3f, 0x5a, 0x52, 0x4d, 0xfa, 0x28, 0xda, 0x33, 0x75, 0x3b,
	0x1e, 0xf7, 0xf8, 0xa2, 0x70, 0x3f, 0x26, 0x74, 0xa4, 0x55, 0x1f, 0xe5, 0x2f, 0x30, 0xb1, 0xfa,
	0xa1, 0xe6, 0x27, 0xdc, 0x90, 0xe9, 0x39, 0x79, 0x8a, 0xb7, 0xbf, 0x11, 0x17, 0x3c, 0x3a, 0x4e,
	0xe1, 0x93, 0x21, 0xbb, 0xf9, 0x3f, 0x98, 0xe2, 0x1d, 0x8c, 0x7b, 0xf9, 0x30, 0x95, 0x25, 0x81,
	0x85, 0xbb, 0x85, 0xb4, 0x5c, 0x2f, 0x5e, 0x0d, 0xd2, 0xf2, 0xda, 0x4f, 0xf8, 0x78, 0x43, 0xfe,
	0x9e, 0x06, 0x59, 0xff, 0x55, 0x41, 0xb4, 0x38, 0x4d, 0x78, 0xee, 0x50, 0x78, 0x10, 0xbf, 0x83,
	0x1a, 0x36, 0x31, 0xae, 0x04, 0xa9, 0x6a, 0x21, 0xa8, 0xd5, 0xe9, 0x30, 0x1e, 0xfd, 0xba, 0x62,
	0x09, 0xa6, 0x91, 0x15, 0x32, 0x03, 0x0f, 0xe2, 0x77, 0x88, 0xdc, 0x8a, 0x47, 0x64, 0x91, 0xdf,
	0xd3, 0xfc, 0x04, 0x87, 0x7b, 0x31, 0x53, 0x9e, 0xe3, 0xad, 0x96, 0x9a, 0xb8, 0x61, 0x6c, 0x20,
	0x01, 0x77, 0xc9, 0x7b, 0x41, 0xbe, 0xf0, 0xec, 0x97, 0xcd, 0xd7, 0x4a, 0x1e, 0xe7, 0x1b, 0x46,
	0x57, 0x5a, 0x64, 0x18, 0x4f, 0x15, 0x6a, 0x35, 0xdf, 0x79, 0xaa, 0x50, 0x07, 0x12, 0x97, 0x8d,
	0xaf, 0x21, 0x69, 0xb7, 0xc9, 0xad, 0x20, 0x69, 0x4d, 0x0e, 0xa8, 0x08, 0xd4, 0x8f, 0x34, 0x48,
	0x8b, 0x9c, 0xdb, 0xa9, 0x74, 0xa9, 0x59, 0xc2, 0x53, 0xe9, 0x0a, 0x24, 0x04, 0x1b, 0x9b, 0x48,
	0xd7, 0xfb, 0xe4, 0x4e, 0x90, 0x2e, 0x91, 0xe6, 0x1b, 0xe2, 0xd9, 0x3f, 0xd4, 0x60, 0x41, 0x4a,
	0xa2, 0x25, 0x1f, 0xc4, 0x58, 0x22, 0x35, 0x21, 0xb8, 0xb0, 0x35, 0x4b, 0x97, 0xe8, 0x80, 0xaa,
	0xba, 0xb4, 0xb4, 0x89, 0xc0, 0x4c, 0xe8, 0x7f, 0xc4, 0xc8, 0x1b, 0xa5, 0x9b, 0x4e, 0x27, 0x2f,
	0x94, 0x15, 0x3b, 0x9d, 0xbc, 0x70, 0x36, 0xab, 0x67, 0x27, 0x8c, 0x7c, 0x88, 0x3c, 0x61, 0xec,
	0x19, 0x6d, 0xbf, 0xef, 0xd1, 0x26, 0x2c, 0x57, 0x2c, 0xda, 0x54, 0xf3, 0xb5, 0x35, 0x4b, 0x97,
	0x48, 0x87, 0x30, 0x82, 0xb6, 0xcd, 0xd7, 0xc3, 0x21, 0x5b, 0xda, 0x3f, 0xd4, 0xc4, 0x37, 0x27,
	0x47, 0x56, 0xe3, 0xc3, 0x19, 0x53, 0x59, 0x39, 0x95, 0x1f, 0x7d, 0xa5, 0x04, 0x58, 0x63, 0x1d,
	0x09, 0x2d, 0x90, 0xb1, 0x4c, 0xdc, 0xbe, 0x06, 0x17, 0x9b, 0x76, 0x37, 0x88, 0xfd, 0x58, 0xfb,
	0x5e, 0xd2, 0xea, 0xb7, 0x9f, 0xa7, 0x30, 0x03, 0xed, 0xeb, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff,
	0x57, 0xea, 0x3f, 0xe7, 0x69, 0x77, 0x00, 0x00,
}
