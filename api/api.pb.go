// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_STATUS_NONE                     Status = 0
	Status_STATUS_INIT                     Status = 1
	Status_STATUS_OK                       Status = 2
	Status_STATUS_OFFLINE                  Status = 3
	Status_STATUS_ERROR                    Status = 4
	Status_STATUS_NOT_IN_QUORUM            Status = 5
	Status_STATUS_DECOMMISSION             Status = 6
	Status_STATUS_MAINTENANCE              Status = 7
	Status_STATUS_STORAGE_DOWN             Status = 8
	Status_STATUS_STORAGE_DEGRADED         Status = 9
	Status_STATUS_NEEDS_REBOOT             Status = 10
	Status_STATUS_STORAGE_REBALANCE        Status = 11
	Status_STATUS_STORAGE_DRIVE_REPLACE    Status = 12
	Status_STATUS_NOT_IN_QUORUM_NO_STORAGE Status = 13
	// Add statuses before MAX and update the number for MAX
	Status_STATUS_MAX Status = 14
)

var Status_name = map[int32]string{
	0:  "STATUS_NONE",
	1:  "STATUS_INIT",
	2:  "STATUS_OK",
	3:  "STATUS_OFFLINE",
	4:  "STATUS_ERROR",
	5:  "STATUS_NOT_IN_QUORUM",
	6:  "STATUS_DECOMMISSION",
	7:  "STATUS_MAINTENANCE",
	8:  "STATUS_STORAGE_DOWN",
	9:  "STATUS_STORAGE_DEGRADED",
	10: "STATUS_NEEDS_REBOOT",
	11: "STATUS_STORAGE_REBALANCE",
	12: "STATUS_STORAGE_DRIVE_REPLACE",
	13: "STATUS_NOT_IN_QUORUM_NO_STORAGE",
	14: "STATUS_MAX",
}
var Status_value = map[string]int32{
	"STATUS_NONE":                     0,
	"STATUS_INIT":                     1,
	"STATUS_OK":                       2,
	"STATUS_OFFLINE":                  3,
	"STATUS_ERROR":                    4,
	"STATUS_NOT_IN_QUORUM":            5,
	"STATUS_DECOMMISSION":             6,
	"STATUS_MAINTENANCE":              7,
	"STATUS_STORAGE_DOWN":             8,
	"STATUS_STORAGE_DEGRADED":         9,
	"STATUS_NEEDS_REBOOT":             10,
	"STATUS_STORAGE_REBALANCE":        11,
	"STATUS_STORAGE_DRIVE_REPLACE":    12,
	"STATUS_NOT_IN_QUORUM_NO_STORAGE": 13,
	"STATUS_MAX":                      14,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{0}
}

type DriverType int32

const (
	DriverType_DRIVER_TYPE_NONE      DriverType = 0
	DriverType_DRIVER_TYPE_FILE      DriverType = 1
	DriverType_DRIVER_TYPE_BLOCK     DriverType = 2
	DriverType_DRIVER_TYPE_OBJECT    DriverType = 3
	DriverType_DRIVER_TYPE_CLUSTERED DriverType = 4
	DriverType_DRIVER_TYPE_GRAPH     DriverType = 5
)

var DriverType_name = map[int32]string{
	0: "DRIVER_TYPE_NONE",
	1: "DRIVER_TYPE_FILE",
	2: "DRIVER_TYPE_BLOCK",
	3: "DRIVER_TYPE_OBJECT",
	4: "DRIVER_TYPE_CLUSTERED",
	5: "DRIVER_TYPE_GRAPH",
}
var DriverType_value = map[string]int32{
	"DRIVER_TYPE_NONE":      0,
	"DRIVER_TYPE_FILE":      1,
	"DRIVER_TYPE_BLOCK":     2,
	"DRIVER_TYPE_OBJECT":    3,
	"DRIVER_TYPE_CLUSTERED": 4,
	"DRIVER_TYPE_GRAPH":     5,
}

func (x DriverType) String() string {
	return proto.EnumName(DriverType_name, int32(x))
}
func (DriverType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{1}
}

type FSType int32

const (
	FSType_FS_TYPE_NONE  FSType = 0
	FSType_FS_TYPE_BTRFS FSType = 1
	FSType_FS_TYPE_EXT4  FSType = 2
	FSType_FS_TYPE_FUSE  FSType = 3
	FSType_FS_TYPE_NFS   FSType = 4
	FSType_FS_TYPE_VFS   FSType = 5
	FSType_FS_TYPE_XFS   FSType = 6
	FSType_FS_TYPE_ZFS   FSType = 7
)

var FSType_name = map[int32]string{
	0: "FS_TYPE_NONE",
	1: "FS_TYPE_BTRFS",
	2: "FS_TYPE_EXT4",
	3: "FS_TYPE_FUSE",
	4: "FS_TYPE_NFS",
	5: "FS_TYPE_VFS",
	6: "FS_TYPE_XFS",
	7: "FS_TYPE_ZFS",
}
var FSType_value = map[string]int32{
	"FS_TYPE_NONE":  0,
	"FS_TYPE_BTRFS": 1,
	"FS_TYPE_EXT4":  2,
	"FS_TYPE_FUSE":  3,
	"FS_TYPE_NFS":   4,
	"FS_TYPE_VFS":   5,
	"FS_TYPE_XFS":   6,
	"FS_TYPE_ZFS":   7,
}

func (x FSType) String() string {
	return proto.EnumName(FSType_name, int32(x))
}
func (FSType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{2}
}

type GraphDriverChangeType int32

const (
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE     GraphDriverChangeType = 0
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_MODIFIED GraphDriverChangeType = 1
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_ADDED    GraphDriverChangeType = 2
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_DELETED  GraphDriverChangeType = 3
)

var GraphDriverChangeType_name = map[int32]string{
	0: "GRAPH_DRIVER_CHANGE_TYPE_NONE",
	1: "GRAPH_DRIVER_CHANGE_TYPE_MODIFIED",
	2: "GRAPH_DRIVER_CHANGE_TYPE_ADDED",
	3: "GRAPH_DRIVER_CHANGE_TYPE_DELETED",
}
var GraphDriverChangeType_value = map[string]int32{
	"GRAPH_DRIVER_CHANGE_TYPE_NONE":     0,
	"GRAPH_DRIVER_CHANGE_TYPE_MODIFIED": 1,
	"GRAPH_DRIVER_CHANGE_TYPE_ADDED":    2,
	"GRAPH_DRIVER_CHANGE_TYPE_DELETED":  3,
}

func (x GraphDriverChangeType) String() string {
	return proto.EnumName(GraphDriverChangeType_name, int32(x))
}
func (GraphDriverChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{3}
}

type SeverityType int32

const (
	SeverityType_SEVERITY_TYPE_NONE    SeverityType = 0
	SeverityType_SEVERITY_TYPE_ALARM   SeverityType = 1
	SeverityType_SEVERITY_TYPE_WARNING SeverityType = 2
	SeverityType_SEVERITY_TYPE_NOTIFY  SeverityType = 3
)

var SeverityType_name = map[int32]string{
	0: "SEVERITY_TYPE_NONE",
	1: "SEVERITY_TYPE_ALARM",
	2: "SEVERITY_TYPE_WARNING",
	3: "SEVERITY_TYPE_NOTIFY",
}
var SeverityType_value = map[string]int32{
	"SEVERITY_TYPE_NONE":    0,
	"SEVERITY_TYPE_ALARM":   1,
	"SEVERITY_TYPE_WARNING": 2,
	"SEVERITY_TYPE_NOTIFY":  3,
}

func (x SeverityType) String() string {
	return proto.EnumName(SeverityType_name, int32(x))
}
func (SeverityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{4}
}

type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_NONE    ResourceType = 0
	ResourceType_RESOURCE_TYPE_VOLUME  ResourceType = 1
	ResourceType_RESOURCE_TYPE_NODE    ResourceType = 2
	ResourceType_RESOURCE_TYPE_CLUSTER ResourceType = 3
	ResourceType_RESOURCE_TYPE_DRIVE   ResourceType = 4
)

var ResourceType_name = map[int32]string{
	0: "RESOURCE_TYPE_NONE",
	1: "RESOURCE_TYPE_VOLUME",
	2: "RESOURCE_TYPE_NODE",
	3: "RESOURCE_TYPE_CLUSTER",
	4: "RESOURCE_TYPE_DRIVE",
}
var ResourceType_value = map[string]int32{
	"RESOURCE_TYPE_NONE":    0,
	"RESOURCE_TYPE_VOLUME":  1,
	"RESOURCE_TYPE_NODE":    2,
	"RESOURCE_TYPE_CLUSTER": 3,
	"RESOURCE_TYPE_DRIVE":   4,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{5}
}

type AlertActionType int32

const (
	AlertActionType_ALERT_ACTION_TYPE_NONE   AlertActionType = 0
	AlertActionType_ALERT_ACTION_TYPE_DELETE AlertActionType = 1
	AlertActionType_ALERT_ACTION_TYPE_CREATE AlertActionType = 2
	AlertActionType_ALERT_ACTION_TYPE_UPDATE AlertActionType = 3
)

var AlertActionType_name = map[int32]string{
	0: "ALERT_ACTION_TYPE_NONE",
	1: "ALERT_ACTION_TYPE_DELETE",
	2: "ALERT_ACTION_TYPE_CREATE",
	3: "ALERT_ACTION_TYPE_UPDATE",
}
var AlertActionType_value = map[string]int32{
	"ALERT_ACTION_TYPE_NONE":   0,
	"ALERT_ACTION_TYPE_DELETE": 1,
	"ALERT_ACTION_TYPE_CREATE": 2,
	"ALERT_ACTION_TYPE_UPDATE": 3,
}

func (x AlertActionType) String() string {
	return proto.EnumName(AlertActionType_name, int32(x))
}
func (AlertActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{6}
}

type VolumeActionParam int32

const (
	VolumeActionParam_VOLUME_ACTION_PARAM_NONE VolumeActionParam = 0
	// Maps to the boolean value false
	VolumeActionParam_VOLUME_ACTION_PARAM_OFF VolumeActionParam = 1
	// Maps to the boolean value true.
	VolumeActionParam_VOLUME_ACTION_PARAM_ON VolumeActionParam = 2
)

var VolumeActionParam_name = map[int32]string{
	0: "VOLUME_ACTION_PARAM_NONE",
	1: "VOLUME_ACTION_PARAM_OFF",
	2: "VOLUME_ACTION_PARAM_ON",
}
var VolumeActionParam_value = map[string]int32{
	"VOLUME_ACTION_PARAM_NONE": 0,
	"VOLUME_ACTION_PARAM_OFF":  1,
	"VOLUME_ACTION_PARAM_ON":   2,
}

func (x VolumeActionParam) String() string {
	return proto.EnumName(VolumeActionParam_name, int32(x))
}
func (VolumeActionParam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{7}
}

type CosType int32

const (
	CosType_NONE   CosType = 0
	CosType_LOW    CosType = 1
	CosType_MEDIUM CosType = 2
	CosType_HIGH   CosType = 3
)

var CosType_name = map[int32]string{
	0: "NONE",
	1: "LOW",
	2: "MEDIUM",
	3: "HIGH",
}
var CosType_value = map[string]int32{
	"NONE":   0,
	"LOW":    1,
	"MEDIUM": 2,
	"HIGH":   3,
}

func (x CosType) String() string {
	return proto.EnumName(CosType_name, int32(x))
}
func (CosType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{8}
}

type IoProfile int32

const (
	IoProfile_IO_PROFILE_SEQUENTIAL IoProfile = 0
	IoProfile_IO_PROFILE_RANDOM     IoProfile = 1
	IoProfile_IO_PROFILE_DB         IoProfile = 2
	IoProfile_IO_PROFILE_DB_REMOTE  IoProfile = 3
	IoProfile_IO_PROFILE_CMS        IoProfile = 4
)

var IoProfile_name = map[int32]string{
	0: "IO_PROFILE_SEQUENTIAL",
	1: "IO_PROFILE_RANDOM",
	2: "IO_PROFILE_DB",
	3: "IO_PROFILE_DB_REMOTE",
	4: "IO_PROFILE_CMS",
}
var IoProfile_value = map[string]int32{
	"IO_PROFILE_SEQUENTIAL": 0,
	"IO_PROFILE_RANDOM":     1,
	"IO_PROFILE_DB":         2,
	"IO_PROFILE_DB_REMOTE":  3,
	"IO_PROFILE_CMS":        4,
}

func (x IoProfile) String() string {
	return proto.EnumName(IoProfile_name, int32(x))
}
func (IoProfile) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{9}
}

// VolumeState represents the state of a volume.
type VolumeState int32

const (
	VolumeState_VOLUME_STATE_NONE VolumeState = 0
	// Volume is transitioning to new state
	VolumeState_VOLUME_STATE_PENDING VolumeState = 1
	// Volume is ready to be assigned to a container
	VolumeState_VOLUME_STATE_AVAILABLE VolumeState = 2
	// Volume is attached to container
	VolumeState_VOLUME_STATE_ATTACHED VolumeState = 3
	// Volume is detached but associated with a container
	VolumeState_VOLUME_STATE_DETACHED VolumeState = 4
	// Volume detach is in progress
	VolumeState_VOLUME_STATE_DETATCHING VolumeState = 5
	// Volume is in error state
	VolumeState_VOLUME_STATE_ERROR VolumeState = 6
	// Volume is deleted, it will remain in this state
	// while resources are asynchronously reclaimed
	VolumeState_VOLUME_STATE_DELETED VolumeState = 7
	// Volume is trying to be detached
	VolumeState_VOLUME_STATE_TRY_DETACHING VolumeState = 8
	// Volume is undergoing restore
	VolumeState_VOLUME_STATE_RESTORE VolumeState = 9
)

var VolumeState_name = map[int32]string{
	0: "VOLUME_STATE_NONE",
	1: "VOLUME_STATE_PENDING",
	2: "VOLUME_STATE_AVAILABLE",
	3: "VOLUME_STATE_ATTACHED",
	4: "VOLUME_STATE_DETACHED",
	5: "VOLUME_STATE_DETATCHING",
	6: "VOLUME_STATE_ERROR",
	7: "VOLUME_STATE_DELETED",
	8: "VOLUME_STATE_TRY_DETACHING",
	9: "VOLUME_STATE_RESTORE",
}
var VolumeState_value = map[string]int32{
	"VOLUME_STATE_NONE":          0,
	"VOLUME_STATE_PENDING":       1,
	"VOLUME_STATE_AVAILABLE":     2,
	"VOLUME_STATE_ATTACHED":      3,
	"VOLUME_STATE_DETACHED":      4,
	"VOLUME_STATE_DETATCHING":    5,
	"VOLUME_STATE_ERROR":         6,
	"VOLUME_STATE_DELETED":       7,
	"VOLUME_STATE_TRY_DETACHING": 8,
	"VOLUME_STATE_RESTORE":       9,
}

func (x VolumeState) String() string {
	return proto.EnumName(VolumeState_name, int32(x))
}
func (VolumeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{10}
}

// VolumeStatus represents a health status for a volume.
type VolumeStatus int32

const (
	VolumeStatus_VOLUME_STATUS_NONE VolumeStatus = 0
	// Volume is not present
	VolumeStatus_VOLUME_STATUS_NOT_PRESENT VolumeStatus = 1
	// Volume is healthy
	VolumeStatus_VOLUME_STATUS_UP VolumeStatus = 2
	// Volume is in fail mode
	VolumeStatus_VOLUME_STATUS_DOWN VolumeStatus = 3
	// Volume is up but with degraded performance
	// In a RAID group, this may indicate a problem with one or more drives
	VolumeStatus_VOLUME_STATUS_DEGRADED VolumeStatus = 4
)

var VolumeStatus_name = map[int32]string{
	0: "VOLUME_STATUS_NONE",
	1: "VOLUME_STATUS_NOT_PRESENT",
	2: "VOLUME_STATUS_UP",
	3: "VOLUME_STATUS_DOWN",
	4: "VOLUME_STATUS_DEGRADED",
}
var VolumeStatus_value = map[string]int32{
	"VOLUME_STATUS_NONE":        0,
	"VOLUME_STATUS_NOT_PRESENT": 1,
	"VOLUME_STATUS_UP":          2,
	"VOLUME_STATUS_DOWN":        3,
	"VOLUME_STATUS_DEGRADED":    4,
}

func (x VolumeStatus) String() string {
	return proto.EnumName(VolumeStatus_name, int32(x))
}
func (VolumeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{11}
}

type StorageMedium int32

const (
	// Magnetic spinning disk.
	StorageMedium_STORAGE_MEDIUM_MAGNETIC StorageMedium = 0
	// SSD disk
	StorageMedium_STORAGE_MEDIUM_SSD StorageMedium = 1
	// NVME disk
	StorageMedium_STORAGE_MEDIUM_NVME StorageMedium = 2
)

var StorageMedium_name = map[int32]string{
	0: "STORAGE_MEDIUM_MAGNETIC",
	1: "STORAGE_MEDIUM_SSD",
	2: "STORAGE_MEDIUM_NVME",
}
var StorageMedium_value = map[string]int32{
	"STORAGE_MEDIUM_MAGNETIC": 0,
	"STORAGE_MEDIUM_SSD":      1,
	"STORAGE_MEDIUM_NVME":     2,
}

func (x StorageMedium) String() string {
	return proto.EnumName(StorageMedium_name, int32(x))
}
func (StorageMedium) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{12}
}

type ClusterNotify int32

const (
	// Node is down
	ClusterNotify_CLUSTER_NOTIFY_DOWN ClusterNotify = 0
)

var ClusterNotify_name = map[int32]string{
	0: "CLUSTER_NOTIFY_DOWN",
}
var ClusterNotify_value = map[string]int32{
	"CLUSTER_NOTIFY_DOWN": 0,
}

func (x ClusterNotify) String() string {
	return proto.EnumName(ClusterNotify_name, int32(x))
}
func (ClusterNotify) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{13}
}

type AttachState int32

const (
	// Attached and available externally
	AttachState_ATTACH_STATE_EXTERNAL AttachState = 0
	// Attached but only available internally
	AttachState_ATTACH_STATE_INTERNAL AttachState = 1
	// Switching from External to Internal
	AttachState_ATTACH_STATE_INTERNAL_SWITCH AttachState = 2
)

var AttachState_name = map[int32]string{
	0: "ATTACH_STATE_EXTERNAL",
	1: "ATTACH_STATE_INTERNAL",
	2: "ATTACH_STATE_INTERNAL_SWITCH",
}
var AttachState_value = map[string]int32{
	"ATTACH_STATE_EXTERNAL":        0,
	"ATTACH_STATE_INTERNAL":        1,
	"ATTACH_STATE_INTERNAL_SWITCH": 2,
}

func (x AttachState) String() string {
	return proto.EnumName(AttachState_name, int32(x))
}
func (AttachState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{14}
}

type OperationFlags int32

const (
	OperationFlags_OP_FLAGS_UNKNOWN OperationFlags = 0
	OperationFlags_OP_FLAGS_NONE    OperationFlags = 1
	// Perform a force_detach during detach operation
	OperationFlags_OP_FLAGS_DETACH_FORCE OperationFlags = 2
)

var OperationFlags_name = map[int32]string{
	0: "OP_FLAGS_UNKNOWN",
	1: "OP_FLAGS_NONE",
	2: "OP_FLAGS_DETACH_FORCE",
}
var OperationFlags_value = map[string]int32{
	"OP_FLAGS_UNKNOWN":      0,
	"OP_FLAGS_NONE":         1,
	"OP_FLAGS_DETACH_FORCE": 2,
}

func (x OperationFlags) String() string {
	return proto.EnumName(OperationFlags_name, int32(x))
}
func (OperationFlags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{15}
}

type SdkCloudBackupOpType int32

const (
	SdkCloudBackupOpType_SdkCloudBackupOpTypeUnknown   SdkCloudBackupOpType = 0
	SdkCloudBackupOpType_SdkCloudBackupOpTypeBackupOp  SdkCloudBackupOpType = 1
	SdkCloudBackupOpType_SdkCloudBackupOpTypeRestoreOp SdkCloudBackupOpType = 2
)

var SdkCloudBackupOpType_name = map[int32]string{
	0: "SdkCloudBackupOpTypeUnknown",
	1: "SdkCloudBackupOpTypeBackupOp",
	2: "SdkCloudBackupOpTypeRestoreOp",
}
var SdkCloudBackupOpType_value = map[string]int32{
	"SdkCloudBackupOpTypeUnknown":   0,
	"SdkCloudBackupOpTypeBackupOp":  1,
	"SdkCloudBackupOpTypeRestoreOp": 2,
}

func (x SdkCloudBackupOpType) String() string {
	return proto.EnumName(SdkCloudBackupOpType_name, int32(x))
}
func (SdkCloudBackupOpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{16}
}

type SdkCloudBackupStatusType int32

const (
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown    SdkCloudBackupStatusType = 0
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeNotStarted SdkCloudBackupStatusType = 1
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeDone       SdkCloudBackupStatusType = 2
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeAborted    SdkCloudBackupStatusType = 3
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypePaused     SdkCloudBackupStatusType = 4
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeStopped    SdkCloudBackupStatusType = 5
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeActive     SdkCloudBackupStatusType = 6
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeFailed     SdkCloudBackupStatusType = 7
)

var SdkCloudBackupStatusType_name = map[int32]string{
	0: "SdkCloudBackupStatusTypeUnknown",
	1: "SdkCloudBackupStatusTypeNotStarted",
	2: "SdkCloudBackupStatusTypeDone",
	3: "SdkCloudBackupStatusTypeAborted",
	4: "SdkCloudBackupStatusTypePaused",
	5: "SdkCloudBackupStatusTypeStopped",
	6: "SdkCloudBackupStatusTypeActive",
	7: "SdkCloudBackupStatusTypeFailed",
}
var SdkCloudBackupStatusType_value = map[string]int32{
	"SdkCloudBackupStatusTypeUnknown":    0,
	"SdkCloudBackupStatusTypeNotStarted": 1,
	"SdkCloudBackupStatusTypeDone":       2,
	"SdkCloudBackupStatusTypeAborted":    3,
	"SdkCloudBackupStatusTypePaused":     4,
	"SdkCloudBackupStatusTypeStopped":    5,
	"SdkCloudBackupStatusTypeActive":     6,
	"SdkCloudBackupStatusTypeFailed":     7,
}

func (x SdkCloudBackupStatusType) String() string {
	return proto.EnumName(SdkCloudBackupStatusType_name, int32(x))
}
func (SdkCloudBackupStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{17}
}

type SdkCloudBackupRequestedState int32

const (
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateUnknown SdkCloudBackupRequestedState = 0
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStatePause   SdkCloudBackupRequestedState = 1
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateResume  SdkCloudBackupRequestedState = 2
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateStop    SdkCloudBackupRequestedState = 3
)

var SdkCloudBackupRequestedState_name = map[int32]string{
	0: "SdkCloudBackupRequestedStateUnknown",
	1: "SdkCloudBackupRequestedStatePause",
	2: "SdkCloudBackupRequestedStateResume",
	3: "SdkCloudBackupRequestedStateStop",
}
var SdkCloudBackupRequestedState_value = map[string]int32{
	"SdkCloudBackupRequestedStateUnknown": 0,
	"SdkCloudBackupRequestedStatePause":   1,
	"SdkCloudBackupRequestedStateResume":  2,
	"SdkCloudBackupRequestedStateStop":    3,
}

func (x SdkCloudBackupRequestedState) String() string {
	return proto.EnumName(SdkCloudBackupRequestedState_name, int32(x))
}
func (SdkCloudBackupRequestedState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{18}
}

// StorageResource groups properties of a storage device.
// swagger:model
type StorageResource struct {
	// Id is the LUN identifier.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Path device path for this storage resource.
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	// Storage medium.
	Medium StorageMedium `protobuf:"varint,3,opt,name=medium,enum=openstorage.api.StorageMedium" json:"medium,omitempty"`
	// True if this device is online.
	Online bool `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
	// IOPS
	Iops uint64 `protobuf:"varint,5,opt,name=iops" json:"iops,omitempty"`
	// SeqWrite
	SeqWrite float64 `protobuf:"fixed64,6,opt,name=seq_write,json=seqWrite" json:"seq_write,omitempty"`
	// SeqRead
	SeqRead float64 `protobuf:"fixed64,7,opt,name=seq_read,json=seqRead" json:"seq_read,omitempty"`
	// RandRW
	RandRW float64 `protobuf:"fixed64,8,opt,name=randRW" json:"randRW,omitempty"`
	// Total size in bytes.
	Size uint64 `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	// Physical Bytes used.
	Used uint64 `protobuf:"varint,10,opt,name=used" json:"used,omitempty"`
	// True if this device is rotational.
	RotationSpeed string `protobuf:"bytes,11,opt,name=rotation_speed,json=rotationSpeed" json:"rotation_speed,omitempty"`
	// Timestamp of last time this device was scanned.
	LastScan *timestamp.Timestamp `protobuf:"bytes,12,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// True if dedicated for metadata.
	Metadata             bool     `protobuf:"varint,13,opt,name=metadata" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageResource) Reset()         { *m = StorageResource{} }
func (m *StorageResource) String() string { return proto.CompactTextString(m) }
func (*StorageResource) ProtoMessage()    {}
func (*StorageResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{0}
}
func (m *StorageResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageResource.Unmarshal(m, b)
}
func (m *StorageResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageResource.Marshal(b, m, deterministic)
}
func (dst *StorageResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageResource.Merge(dst, src)
}
func (m *StorageResource) XXX_Size() int {
	return xxx_messageInfo_StorageResource.Size(m)
}
func (m *StorageResource) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageResource.DiscardUnknown(m)
}

var xxx_messageInfo_StorageResource proto.InternalMessageInfo

func (m *StorageResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageResource) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StorageResource) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StorageResource) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *StorageResource) GetIops() uint64 {
	if m != nil {
		return m.Iops
	}
	return 0
}

func (m *StorageResource) GetSeqWrite() float64 {
	if m != nil {
		return m.SeqWrite
	}
	return 0
}

func (m *StorageResource) GetSeqRead() float64 {
	if m != nil {
		return m.SeqRead
	}
	return 0
}

func (m *StorageResource) GetRandRW() float64 {
	if m != nil {
		return m.RandRW
	}
	return 0
}

func (m *StorageResource) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *StorageResource) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StorageResource) GetRotationSpeed() string {
	if m != nil {
		return m.RotationSpeed
	}
	return ""
}

func (m *StorageResource) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *StorageResource) GetMetadata() bool {
	if m != nil {
		return m.Metadata
	}
	return false
}

// StoragePool groups different storage devices based on their CosType
type StoragePool struct {
	// ID pool ID
	ID int32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	// Cos reflects the capabilities of this drive pool
	Cos CosType `protobuf:"varint,2,opt,name=Cos,enum=openstorage.api.CosType" json:"Cos,omitempty"`
	// Medium underlying storage type
	Medium StorageMedium `protobuf:"varint,3,opt,name=Medium,enum=openstorage.api.StorageMedium" json:"Medium,omitempty"`
	// RaidLevel storage raid level
	RaidLevel string `protobuf:"bytes,4,opt,name=RaidLevel" json:"RaidLevel,omitempty"`
	// TotalSize of the pool
	TotalSize uint64 `protobuf:"varint,7,opt,name=TotalSize" json:"TotalSize,omitempty"`
	// Used size of the pool
	Used uint64 `protobuf:"varint,8,opt,name=Used" json:"Used,omitempty"`
	// Labels is a list of user defined name-value pairs
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StoragePool) Reset()         { *m = StoragePool{} }
func (m *StoragePool) String() string { return proto.CompactTextString(m) }
func (*StoragePool) ProtoMessage()    {}
func (*StoragePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{1}
}
func (m *StoragePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoragePool.Unmarshal(m, b)
}
func (m *StoragePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoragePool.Marshal(b, m, deterministic)
}
func (dst *StoragePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoragePool.Merge(dst, src)
}
func (m *StoragePool) XXX_Size() int {
	return xxx_messageInfo_StoragePool.Size(m)
}
func (m *StoragePool) XXX_DiscardUnknown() {
	xxx_messageInfo_StoragePool.DiscardUnknown(m)
}

var xxx_messageInfo_StoragePool proto.InternalMessageInfo

func (m *StoragePool) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *StoragePool) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *StoragePool) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StoragePool) GetRaidLevel() string {
	if m != nil {
		return m.RaidLevel
	}
	return ""
}

func (m *StoragePool) GetTotalSize() uint64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *StoragePool) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StoragePool) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// VolumeLocator is a structure that is attached to a volume
// and is used to carry opaque metadata.
// swagger:model
type VolumeLocator struct {
	// User friendly identifier
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A set of name-value pairs that acts as search filters
	VolumeLabels         map[string]string `protobuf:"bytes,2,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeLocator) Reset()         { *m = VolumeLocator{} }
func (m *VolumeLocator) String() string { return proto.CompactTextString(m) }
func (*VolumeLocator) ProtoMessage()    {}
func (*VolumeLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{2}
}
func (m *VolumeLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeLocator.Unmarshal(m, b)
}
func (m *VolumeLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeLocator.Marshal(b, m, deterministic)
}
func (dst *VolumeLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeLocator.Merge(dst, src)
}
func (m *VolumeLocator) XXX_Size() int {
	return xxx_messageInfo_VolumeLocator.Size(m)
}
func (m *VolumeLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeLocator.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeLocator proto.InternalMessageInfo

func (m *VolumeLocator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeLocator) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

// Source is a structure that can be given to a volume
// to seed the volume with data.
// swagger:model
type Source struct {
	// A volume id, if specified will create a clone of the parent.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Seed will seed the volume from the specified URI
	// Any additional config for the source comes from the labels in the spec
	Seed                 string   `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{3}
}
func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (dst *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(dst, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Source) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

// Group represents VolumeGroup / namespace
// All volumes in the same group share this object.
// swagger:model
type Group struct {
	// Id common identifier across volumes that have the same group.
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{4}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// VolumeSpec has the properties needed to create a volume.
// swagger:model
type VolumeSpec struct {
	// Ephemeral storage
	Ephemeral bool `protobuf:"varint,1,opt,name=ephemeral" json:"ephemeral,omitempty"`
	// Size specifies the thin provisioned volume size.
	Size uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	// Format specifies the filesystem for this volume.
	Format FSType `protobuf:"varint,3,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// BlockSize for the filesystem.
	BlockSize int64 `protobuf:"varint,4,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	// HaLevel specifies the number of copies of data.
	HaLevel int64 `protobuf:"varint,5,opt,name=ha_level,json=haLevel" json:"ha_level,omitempty"`
	// Cos specifies the relative class of service.
	Cos CosType `protobuf:"varint,6,opt,name=cos,enum=openstorage.api.CosType" json:"cos,omitempty"`
	// IoProfile provides a hint about application using this volume.
	IoProfile IoProfile `protobuf:"varint,7,opt,name=io_profile,json=ioProfile,enum=openstorage.api.IoProfile" json:"io_profile,omitempty"`
	// Dedupe specifies if the volume data is to be de-duplicated.
	Dedupe bool `protobuf:"varint,8,opt,name=dedupe" json:"dedupe,omitempty"`
	// SnapshotInterval in minutes, set to 0 to disable snapshots
	SnapshotInterval uint32 `protobuf:"varint,9,opt,name=snapshot_interval,json=snapshotInterval" json:"snapshot_interval,omitempty"`
	// VolumeLabels configuration labels
	VolumeLabels map[string]string `protobuf:"bytes,10,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Shared is true if this volume can be remotely accessed.
	Shared bool `protobuf:"varint,11,opt,name=shared" json:"shared,omitempty"`
	// ReplicaSet is the desired set of nodes for the volume data.
	ReplicaSet *ReplicaSet `protobuf:"bytes,12,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
	// Aggregatiokn level Specifies the number of parts the volume can be aggregated from.
	AggregationLevel uint32 `protobuf:"varint,13,opt,name=aggregation_level,json=aggregationLevel" json:"aggregation_level,omitempty"`
	// Encrypted is true if this volume will be cryptographically secured.
	Encrypted bool `protobuf:"varint,14,opt,name=encrypted" json:"encrypted,omitempty"`
	// Passphrase for an encrypted volume
	Passphrase string `protobuf:"bytes,15,opt,name=passphrase" json:"passphrase,omitempty"`
	// SnapshotSchedule a well known string that specifies when snapshots should be taken.
	SnapshotSchedule string `protobuf:"bytes,16,opt,name=snapshot_schedule,json=snapshotSchedule" json:"snapshot_schedule,omitempty"`
	// Scale allows autocreation of volumes.
	Scale uint32 `protobuf:"varint,17,opt,name=scale" json:"scale,omitempty"`
	// Sticky volumes cannot be deleted until the flag is removed.
	Sticky bool `protobuf:"varint,18,opt,name=sticky" json:"sticky,omitempty"`
	// Group identifies a consistency group
	Group *Group `protobuf:"bytes,21,opt,name=group" json:"group,omitempty"`
	// GroupEnforced is true if consistency group creation is enforced.
	GroupEnforced bool `protobuf:"varint,22,opt,name=group_enforced,json=groupEnforced" json:"group_enforced,omitempty"`
	// Compressed is true if this volume is to be compressed.
	Compressed bool `protobuf:"varint,23,opt,name=compressed" json:"compressed,omitempty"`
	// Cascaded is true if this volume can be populated on any node from an external source.
	Cascaded bool `protobuf:"varint,24,opt,name=cascaded" json:"cascaded,omitempty"`
	// Journal is true if data for the volume goes into the journal.
	Journal bool `protobuf:"varint,25,opt,name=journal" json:"journal,omitempty"`
	// Sharedv4 is true if this volume can be accessed via sharedv4.
	Sharedv4             bool     `protobuf:"varint,26,opt,name=sharedv4" json:"sharedv4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSpec) Reset()         { *m = VolumeSpec{} }
func (m *VolumeSpec) String() string { return proto.CompactTextString(m) }
func (*VolumeSpec) ProtoMessage()    {}
func (*VolumeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{5}
}
func (m *VolumeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpec.Unmarshal(m, b)
}
func (m *VolumeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpec.Marshal(b, m, deterministic)
}
func (dst *VolumeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpec.Merge(dst, src)
}
func (m *VolumeSpec) XXX_Size() int {
	return xxx_messageInfo_VolumeSpec.Size(m)
}
func (m *VolumeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpec proto.InternalMessageInfo

func (m *VolumeSpec) GetEphemeral() bool {
	if m != nil {
		return m.Ephemeral
	}
	return false
}

func (m *VolumeSpec) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VolumeSpec) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *VolumeSpec) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *VolumeSpec) GetHaLevel() int64 {
	if m != nil {
		return m.HaLevel
	}
	return 0
}

func (m *VolumeSpec) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *VolumeSpec) GetIoProfile() IoProfile {
	if m != nil {
		return m.IoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *VolumeSpec) GetDedupe() bool {
	if m != nil {
		return m.Dedupe
	}
	return false
}

func (m *VolumeSpec) GetSnapshotInterval() uint32 {
	if m != nil {
		return m.SnapshotInterval
	}
	return 0
}

func (m *VolumeSpec) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

func (m *VolumeSpec) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

func (m *VolumeSpec) GetReplicaSet() *ReplicaSet {
	if m != nil {
		return m.ReplicaSet
	}
	return nil
}

func (m *VolumeSpec) GetAggregationLevel() uint32 {
	if m != nil {
		return m.AggregationLevel
	}
	return 0
}

func (m *VolumeSpec) GetEncrypted() bool {
	if m != nil {
		return m.Encrypted
	}
	return false
}

func (m *VolumeSpec) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *VolumeSpec) GetSnapshotSchedule() string {
	if m != nil {
		return m.SnapshotSchedule
	}
	return ""
}

func (m *VolumeSpec) GetScale() uint32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *VolumeSpec) GetSticky() bool {
	if m != nil {
		return m.Sticky
	}
	return false
}

func (m *VolumeSpec) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *VolumeSpec) GetGroupEnforced() bool {
	if m != nil {
		return m.GroupEnforced
	}
	return false
}

func (m *VolumeSpec) GetCompressed() bool {
	if m != nil {
		return m.Compressed
	}
	return false
}

func (m *VolumeSpec) GetCascaded() bool {
	if m != nil {
		return m.Cascaded
	}
	return false
}

func (m *VolumeSpec) GetJournal() bool {
	if m != nil {
		return m.Journal
	}
	return false
}

func (m *VolumeSpec) GetSharedv4() bool {
	if m != nil {
		return m.Sharedv4
	}
	return false
}

// ReplicaSet set of machine IDs (nodes) to which part of this volume is erasure
// coded - for clustered storage arrays
// swagger:model
type ReplicaSet struct {
	Nodes                []string `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaSet) Reset()         { *m = ReplicaSet{} }
func (m *ReplicaSet) String() string { return proto.CompactTextString(m) }
func (*ReplicaSet) ProtoMessage()    {}
func (*ReplicaSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{6}
}
func (m *ReplicaSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSet.Unmarshal(m, b)
}
func (m *ReplicaSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSet.Marshal(b, m, deterministic)
}
func (dst *ReplicaSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSet.Merge(dst, src)
}
func (m *ReplicaSet) XXX_Size() int {
	return xxx_messageInfo_ReplicaSet.Size(m)
}
func (m *ReplicaSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSet.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSet proto.InternalMessageInfo

func (m *ReplicaSet) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// RuntimeStateMap is a list of name value mapping of driver specific runtime
// information.
// swagger:model
type RuntimeStateMap struct {
	RuntimeState         map[string]string `protobuf:"bytes,1,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RuntimeStateMap) Reset()         { *m = RuntimeStateMap{} }
func (m *RuntimeStateMap) String() string { return proto.CompactTextString(m) }
func (*RuntimeStateMap) ProtoMessage()    {}
func (*RuntimeStateMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{7}
}
func (m *RuntimeStateMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeStateMap.Unmarshal(m, b)
}
func (m *RuntimeStateMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeStateMap.Marshal(b, m, deterministic)
}
func (dst *RuntimeStateMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeStateMap.Merge(dst, src)
}
func (m *RuntimeStateMap) XXX_Size() int {
	return xxx_messageInfo_RuntimeStateMap.Size(m)
}
func (m *RuntimeStateMap) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeStateMap.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeStateMap proto.InternalMessageInfo

func (m *RuntimeStateMap) GetRuntimeState() map[string]string {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

// Volume represents an abstract storage volume.
// Volume represents an abstract storage volume.
// swagger:model
type Volume struct {
	// Self referential volume ID.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Source specified seed data for the volume.
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// Group volumes in the same group have the same group id.
	Group *Group `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	// Readonly is true if this volume is to be mounted with readonly access.
	Readonly bool `protobuf:"varint,4,opt,name=readonly" json:"readonly,omitempty"`
	// User specified locator
	Locator *VolumeLocator `protobuf:"bytes,5,opt,name=locator" json:"locator,omitempty"`
	// Volume creation time
	Ctime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=ctime" json:"ctime,omitempty"`
	// User specified VolumeSpec
	Spec *VolumeSpec `protobuf:"bytes,7,opt,name=spec" json:"spec,omitempty"`
	// Usage is bytes consumed by vtheis volume.
	Usage uint64 `protobuf:"varint,8,opt,name=usage" json:"usage,omitempty"`
	// LastScan is the time when an integrity check was run.
	LastScan *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// Format specifies the filesytem for this volume.
	Format FSType `protobuf:"varint,10,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// Status is the availability status of this volume.
	Status VolumeStatus `protobuf:"varint,11,opt,name=status,enum=openstorage.api.VolumeStatus" json:"status,omitempty"`
	// State is the current runtime state of this volume.
	State VolumeState `protobuf:"varint,12,opt,name=state,enum=openstorage.api.VolumeState" json:"state,omitempty"`
	// AttachedOn is the node instance identifier for clustered systems.
	AttachedOn string `protobuf:"bytes,13,opt,name=attached_on,json=attachedOn" json:"attached_on,omitempty"`
	// AttachedState shows whether the device is attached for internal or external use.
	AttachedState AttachState `protobuf:"varint,14,opt,name=attached_state,json=attachedState,enum=openstorage.api.AttachState" json:"attached_state,omitempty"`
	// DevicePath is the device exported by block device implementations.
	DevicePath string `protobuf:"bytes,15,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	// SecureDevicePath is the device path for an encrypted volume.
	SecureDevicePath string `protobuf:"bytes,16,opt,name=secure_device_path,json=secureDevicePath" json:"secure_device_path,omitempty"`
	// AttachPath is the mounted path in the host namespace.
	AttachPath []string `protobuf:"bytes,17,rep,name=attach_path,json=attachPath" json:"attach_path,omitempty"`
	// AttachInfo is a list of name value mappings that provides attach information.
	AttachInfo map[string]string `protobuf:"bytes,18,rep,name=attach_info,json=attachInfo" json:"attach_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ReplicatSets storage for this volumefor clustered storage arrays.
	ReplicaSets []*ReplicaSet `protobuf:"bytes,19,rep,name=replica_sets,json=replicaSets" json:"replica_sets,omitempty"`
	// RuntimeState is a lst of name value mapping of driver specific runtime
	// information.
	RuntimeState []*RuntimeStateMap `protobuf:"bytes,20,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty"`
	// Error is the Last recorded error.
	Error string `protobuf:"bytes,21,opt,name=error" json:"error,omitempty"`
	// VolumeConsumers are entities that consume this volume
	VolumeConsumers      []*VolumeConsumer `protobuf:"bytes,22,rep,name=volume_consumers,json=volumeConsumers" json:"volume_consumers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{8}
}
func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (dst *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(dst, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Volume) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Volume) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Volume) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *Volume) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *Volume) GetCtime() *timestamp.Timestamp {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Volume) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Volume) GetUsage() uint64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *Volume) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *Volume) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *Volume) GetStatus() VolumeStatus {
	if m != nil {
		return m.Status
	}
	return VolumeStatus_VOLUME_STATUS_NONE
}

func (m *Volume) GetState() VolumeState {
	if m != nil {
		return m.State
	}
	return VolumeState_VOLUME_STATE_NONE
}

func (m *Volume) GetAttachedOn() string {
	if m != nil {
		return m.AttachedOn
	}
	return ""
}

func (m *Volume) GetAttachedState() AttachState {
	if m != nil {
		return m.AttachedState
	}
	return AttachState_ATTACH_STATE_EXTERNAL
}

func (m *Volume) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

func (m *Volume) GetSecureDevicePath() string {
	if m != nil {
		return m.SecureDevicePath
	}
	return ""
}

func (m *Volume) GetAttachPath() []string {
	if m != nil {
		return m.AttachPath
	}
	return nil
}

func (m *Volume) GetAttachInfo() map[string]string {
	if m != nil {
		return m.AttachInfo
	}
	return nil
}

func (m *Volume) GetReplicaSets() []*ReplicaSet {
	if m != nil {
		return m.ReplicaSets
	}
	return nil
}

func (m *Volume) GetRuntimeState() []*RuntimeStateMap {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

func (m *Volume) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Volume) GetVolumeConsumers() []*VolumeConsumer {
	if m != nil {
		return m.VolumeConsumers
	}
	return nil
}

// Stats is a structure that represents last collected stats for a volume
// swagger:model
type Stats struct {
	// Reads completed successfully
	Reads uint64 `protobuf:"varint,1,opt,name=reads" json:"reads,omitempty"`
	// Time spent in reads in ms
	ReadMs    uint64 `protobuf:"varint,2,opt,name=read_ms,json=readMs" json:"read_ms,omitempty"`
	ReadBytes uint64 `protobuf:"varint,3,opt,name=read_bytes,json=readBytes" json:"read_bytes,omitempty"`
	// Writes completed successfully
	Writes uint64 `protobuf:"varint,4,opt,name=writes" json:"writes,omitempty"`
	// Time spent in writes in ms
	WriteMs    uint64 `protobuf:"varint,5,opt,name=write_ms,json=writeMs" json:"write_ms,omitempty"`
	WriteBytes uint64 `protobuf:"varint,6,opt,name=write_bytes,json=writeBytes" json:"write_bytes,omitempty"`
	// IOs curently in progress
	IoProgress uint64 `protobuf:"varint,7,opt,name=io_progress,json=ioProgress" json:"io_progress,omitempty"`
	// Time spent doing IOs ms
	IoMs uint64 `protobuf:"varint,8,opt,name=io_ms,json=ioMs" json:"io_ms,omitempty"`
	// BytesUsed
	BytesUsed uint64 `protobuf:"varint,9,opt,name=bytes_used,json=bytesUsed" json:"bytes_used,omitempty"`
	// Interval in ms during which stats were collected
	IntervalMs           uint64   `protobuf:"varint,10,opt,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{9}
}
func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (dst *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(dst, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetReads() uint64 {
	if m != nil {
		return m.Reads
	}
	return 0
}

func (m *Stats) GetReadMs() uint64 {
	if m != nil {
		return m.ReadMs
	}
	return 0
}

func (m *Stats) GetReadBytes() uint64 {
	if m != nil {
		return m.ReadBytes
	}
	return 0
}

func (m *Stats) GetWrites() uint64 {
	if m != nil {
		return m.Writes
	}
	return 0
}

func (m *Stats) GetWriteMs() uint64 {
	if m != nil {
		return m.WriteMs
	}
	return 0
}

func (m *Stats) GetWriteBytes() uint64 {
	if m != nil {
		return m.WriteBytes
	}
	return 0
}

func (m *Stats) GetIoProgress() uint64 {
	if m != nil {
		return m.IoProgress
	}
	return 0
}

func (m *Stats) GetIoMs() uint64 {
	if m != nil {
		return m.IoMs
	}
	return 0
}

func (m *Stats) GetBytesUsed() uint64 {
	if m != nil {
		return m.BytesUsed
	}
	return 0
}

func (m *Stats) GetIntervalMs() uint64 {
	if m != nil {
		return m.IntervalMs
	}
	return 0
}

// Alert is a structure that represents an alert object
// swagger:model
type Alert struct {
	// Id for Alert
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Severity of the Alert
	Severity SeverityType `protobuf:"varint,2,opt,name=severity,enum=openstorage.api.SeverityType" json:"severity,omitempty"`
	// AlertType user defined alert type
	AlertType int64 `protobuf:"varint,3,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	// Message describing the Alert
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	// Timestamp when Alert occured
	Timestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// ResourceId where Alert occured
	ResourceId string `protobuf:"bytes,6,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	// Resource where Alert occured
	Resource ResourceType `protobuf:"varint,7,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Cleared Flag
	Cleared bool `protobuf:"varint,8,opt,name=cleared" json:"cleared,omitempty"`
	// TTL in seconds for this Alert
	Ttl uint64 `protobuf:"varint,9,opt,name=ttl" json:"ttl,omitempty"`
	// UniqueTag helps identify a unique alert for a given resouce
	UniqueTag            string   `protobuf:"bytes,10,opt,name=unique_tag,json=uniqueTag" json:"unique_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{10}
}
func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (dst *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(dst, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Alert) GetSeverity() SeverityType {
	if m != nil {
		return m.Severity
	}
	return SeverityType_SEVERITY_TYPE_NONE
}

func (m *Alert) GetAlertType() int64 {
	if m != nil {
		return m.AlertType
	}
	return 0
}

func (m *Alert) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Alert) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Alert) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Alert) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *Alert) GetCleared() bool {
	if m != nil {
		return m.Cleared
	}
	return false
}

func (m *Alert) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Alert) GetUniqueTag() string {
	if m != nil {
		return m.UniqueTag
	}
	return ""
}

// Alerts is an array of Alert objects
// swagger:model
type Alerts struct {
	Alert                []*Alert `protobuf:"bytes,1,rep,name=alert" json:"alert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alerts) Reset()         { *m = Alerts{} }
func (m *Alerts) String() string { return proto.CompactTextString(m) }
func (*Alerts) ProtoMessage()    {}
func (*Alerts) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{11}
}
func (m *Alerts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alerts.Unmarshal(m, b)
}
func (m *Alerts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alerts.Marshal(b, m, deterministic)
}
func (dst *Alerts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alerts.Merge(dst, src)
}
func (m *Alerts) XXX_Size() int {
	return xxx_messageInfo_Alerts.Size(m)
}
func (m *Alerts) XXX_DiscardUnknown() {
	xxx_messageInfo_Alerts.DiscardUnknown(m)
}

var xxx_messageInfo_Alerts proto.InternalMessageInfo

func (m *Alerts) GetAlert() []*Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

// ObjectstoreInfo is a structure that has current objectstore info
// swagger:model
type ObjectstoreInfo struct {
	// UUID of objectstore
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// VolumeID of volume used by object store
	VolumeId string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Enable/Disable created objectstore
	Enabled bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// Status of objectstore running/failed
	Status string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	// Action being taken on this objectstore
	Action int64 `protobuf:"varint,5,opt,name=action" json:"action,omitempty"`
	// AccessKey for login into objectstore
	AccessKey string `protobuf:"bytes,6,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// SecretKey for login into objectstore
	SecretKey string `protobuf:"bytes,7,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// Endpoints for accessing objectstore
	Endpoints []string `protobuf:"bytes,8,rep,name=endpoints" json:"endpoints,omitempty"`
	// CurrentEndpoint on which objectstore server is accessible
	CurrentEndPoint string `protobuf:"bytes,9,opt,name=current_endPoint,json=currentEndPoint" json:"current_endPoint,omitempty"`
	// AccessPort is objectstore server port
	AccessPort int64 `protobuf:"varint,10,opt,name=access_port,json=accessPort" json:"access_port,omitempty"`
	// Region for this objectstore
	Region               string   `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectstoreInfo) Reset()         { *m = ObjectstoreInfo{} }
func (m *ObjectstoreInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectstoreInfo) ProtoMessage()    {}
func (*ObjectstoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{12}
}
func (m *ObjectstoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectstoreInfo.Unmarshal(m, b)
}
func (m *ObjectstoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectstoreInfo.Marshal(b, m, deterministic)
}
func (dst *ObjectstoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectstoreInfo.Merge(dst, src)
}
func (m *ObjectstoreInfo) XXX_Size() int {
	return xxx_messageInfo_ObjectstoreInfo.Size(m)
}
func (m *ObjectstoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectstoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectstoreInfo proto.InternalMessageInfo

func (m *ObjectstoreInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ObjectstoreInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *ObjectstoreInfo) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ObjectstoreInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ObjectstoreInfo) GetAction() int64 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ObjectstoreInfo) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *ObjectstoreInfo) GetCurrentEndPoint() string {
	if m != nil {
		return m.CurrentEndPoint
	}
	return ""
}

func (m *ObjectstoreInfo) GetAccessPort() int64 {
	if m != nil {
		return m.AccessPort
	}
	return 0
}

func (m *ObjectstoreInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

// VolumeCreateRequest is a structure that has the locator, source and spec
// to create a volume
// swagger:model
type VolumeCreateRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// Source to create volume
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// The storage spec for the volume
	Spec                 *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeCreateRequest) Reset()         { *m = VolumeCreateRequest{} }
func (m *VolumeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateRequest) ProtoMessage()    {}
func (*VolumeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{13}
}
func (m *VolumeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateRequest.Unmarshal(m, b)
}
func (m *VolumeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateRequest.Merge(dst, src)
}
func (m *VolumeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateRequest.Size(m)
}
func (m *VolumeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateRequest proto.InternalMessageInfo

func (m *VolumeCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeCreateRequest) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *VolumeCreateRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// VolumeResponse is a structure that wraps an error.
// swagger:response volumeResponse
type VolumeResponse struct {
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeResponse) Reset()         { *m = VolumeResponse{} }
func (m *VolumeResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeResponse) ProtoMessage()    {}
func (*VolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{14}
}
func (m *VolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeResponse.Unmarshal(m, b)
}
func (m *VolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeResponse.Merge(dst, src)
}
func (m *VolumeResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeResponse.Size(m)
}
func (m *VolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeResponse proto.InternalMessageInfo

func (m *VolumeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// VolumeCreateResponse
// swagger:response volumeCreateResponse
type VolumeCreateResponse struct {
	// ID of the newly created volume
	//
	// in: body
	// Required: true
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Volume Response
	//
	// in: body
	// Required: true
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeCreateResponse) Reset()         { *m = VolumeCreateResponse{} }
func (m *VolumeCreateResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateResponse) ProtoMessage()    {}
func (*VolumeCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{15}
}
func (m *VolumeCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateResponse.Unmarshal(m, b)
}
func (m *VolumeCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateResponse.Merge(dst, src)
}
func (m *VolumeCreateResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateResponse.Size(m)
}
func (m *VolumeCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateResponse proto.InternalMessageInfo

func (m *VolumeCreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VolumeCreateResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// VolumeStateAction specifies desired actions.
// swagger:model
type VolumeStateAction struct {
	// Attach or Detach volume
	Attach VolumeActionParam `protobuf:"varint,1,opt,name=attach,enum=openstorage.api.VolumeActionParam" json:"attach,omitempty"`
	// Mount or unmount volume
	Mount VolumeActionParam `protobuf:"varint,2,opt,name=mount,enum=openstorage.api.VolumeActionParam" json:"mount,omitempty"`
	// MountPath Path where the device is mounted
	MountPath string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// DevicePath Path returned in attach
	DevicePath           string   `protobuf:"bytes,4,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeStateAction) Reset()         { *m = VolumeStateAction{} }
func (m *VolumeStateAction) String() string { return proto.CompactTextString(m) }
func (*VolumeStateAction) ProtoMessage()    {}
func (*VolumeStateAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{16}
}
func (m *VolumeStateAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeStateAction.Unmarshal(m, b)
}
func (m *VolumeStateAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeStateAction.Marshal(b, m, deterministic)
}
func (dst *VolumeStateAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeStateAction.Merge(dst, src)
}
func (m *VolumeStateAction) XXX_Size() int {
	return xxx_messageInfo_VolumeStateAction.Size(m)
}
func (m *VolumeStateAction) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeStateAction.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeStateAction proto.InternalMessageInfo

func (m *VolumeStateAction) GetAttach() VolumeActionParam {
	if m != nil {
		return m.Attach
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMount() VolumeActionParam {
	if m != nil {
		return m.Mount
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeStateAction) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

// VolumeSet specifies a request to update a volume.
// swagger:model
type VolumeSetRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// The storage spec for the volume
	Spec *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// State modification on this volume.
	Action *VolumeStateAction `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// additional options
	// required for the Set operation.
	Options              map[string]string `protobuf:"bytes,4,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeSetRequest) Reset()         { *m = VolumeSetRequest{} }
func (m *VolumeSetRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSetRequest) ProtoMessage()    {}
func (*VolumeSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{17}
}
func (m *VolumeSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetRequest.Unmarshal(m, b)
}
func (m *VolumeSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetRequest.Merge(dst, src)
}
func (m *VolumeSetRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSetRequest.Size(m)
}
func (m *VolumeSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetRequest proto.InternalMessageInfo

func (m *VolumeSetRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeSetRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VolumeSetRequest) GetAction() *VolumeStateAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *VolumeSetRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

// VolumeSetResponse
// swagger:response volumeSetResponse
type VolumeSetResponse struct {
	// Volume
	//
	// in: body
	// Required: true
	Volume *Volume `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
	// VolumeResponse
	//
	// in: body
	// Required: true
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeSetResponse) Reset()         { *m = VolumeSetResponse{} }
func (m *VolumeSetResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSetResponse) ProtoMessage()    {}
func (*VolumeSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{18}
}
func (m *VolumeSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetResponse.Unmarshal(m, b)
}
func (m *VolumeSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetResponse.Merge(dst, src)
}
func (m *VolumeSetResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSetResponse.Size(m)
}
func (m *VolumeSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetResponse proto.InternalMessageInfo

func (m *VolumeSetResponse) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *VolumeSetResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// SnapCreateRequest specifies a request to create a snapshot of given volume.
// swagger:parameters snapVolume
type SnapCreateRequest struct {
	// volume id
	Id                   string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Locator              *VolumeLocator `protobuf:"bytes,2,opt,name=locator" json:"locator,omitempty"`
	Readonly             bool           `protobuf:"varint,3,opt,name=readonly" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SnapCreateRequest) Reset()         { *m = SnapCreateRequest{} }
func (m *SnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SnapCreateRequest) ProtoMessage()    {}
func (*SnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{19}
}
func (m *SnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateRequest.Unmarshal(m, b)
}
func (m *SnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateRequest.Merge(dst, src)
}
func (m *SnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SnapCreateRequest.Size(m)
}
func (m *SnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateRequest proto.InternalMessageInfo

func (m *SnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SnapCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *SnapCreateRequest) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

// SnapCreateRequest specifies a response that get's returned when creating a snapshot.
// swagger:response snapCreateResponse
type SnapCreateResponse struct {
	// VolumeCreateResponse
	//
	// in: body
	// Required: true
	VolumeCreateResponse *VolumeCreateResponse `protobuf:"bytes,1,opt,name=volume_create_response,json=volumeCreateResponse" json:"volume_create_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SnapCreateResponse) Reset()         { *m = SnapCreateResponse{} }
func (m *SnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SnapCreateResponse) ProtoMessage()    {}
func (*SnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{20}
}
func (m *SnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateResponse.Unmarshal(m, b)
}
func (m *SnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateResponse.Merge(dst, src)
}
func (m *SnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SnapCreateResponse.Size(m)
}
func (m *SnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateResponse proto.InternalMessageInfo

func (m *SnapCreateResponse) GetVolumeCreateResponse() *VolumeCreateResponse {
	if m != nil {
		return m.VolumeCreateResponse
	}
	return nil
}

// VolumeInfo
// swagger:model
type VolumeInfo struct {
	VolumeId             string      `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	Path                 string      `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Storage              *VolumeSpec `protobuf:"bytes,3,opt,name=storage" json:"storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeInfo) Reset()         { *m = VolumeInfo{} }
func (m *VolumeInfo) String() string { return proto.CompactTextString(m) }
func (*VolumeInfo) ProtoMessage()    {}
func (*VolumeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{21}
}
func (m *VolumeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInfo.Unmarshal(m, b)
}
func (m *VolumeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInfo.Marshal(b, m, deterministic)
}
func (dst *VolumeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInfo.Merge(dst, src)
}
func (m *VolumeInfo) XXX_Size() int {
	return xxx_messageInfo_VolumeInfo.Size(m)
}
func (m *VolumeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInfo proto.InternalMessageInfo

func (m *VolumeInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VolumeInfo) GetStorage() *VolumeSpec {
	if m != nil {
		return m.Storage
	}
	return nil
}

// VolumeConsumer identifies a consumer for a Volume. An example of a VolumeConsumer
// would be a Pod in Kubernetes who has mounted the PersistentVolumeClaim for the
// Volume
// swagger: model
type VolumeConsumer struct {
	// Name is the name of the volume consumer
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Namespace is the namespace of the volume consumer
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// Type is the type of the consumer. E.g a Kubernetes pod
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// NodeID is the identifier of the node on which the consumer is running. This
	// identifier would be from the perspective of the container runtime or
	// orchestrator under which the volume consumer resides. For example, NodeID
	//  can be name of a minion in Kubernetes.
	NodeId string `protobuf:"bytes,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// OwnerName is the name of the entity who owns this volume consumer
	OwnerName string `protobuf:"bytes,5,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	// OwnerType is the type of the entity who owns this volume consumer. The type would
	// be from the perspective of the container runtime or the orchestrator under which
	// the volume consumer resides. For e.g OwnerType can be a Deployment in Kubernetes.
	OwnerType            string   `protobuf:"bytes,6,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeConsumer) Reset()         { *m = VolumeConsumer{} }
func (m *VolumeConsumer) String() string { return proto.CompactTextString(m) }
func (*VolumeConsumer) ProtoMessage()    {}
func (*VolumeConsumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{22}
}
func (m *VolumeConsumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeConsumer.Unmarshal(m, b)
}
func (m *VolumeConsumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeConsumer.Marshal(b, m, deterministic)
}
func (dst *VolumeConsumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeConsumer.Merge(dst, src)
}
func (m *VolumeConsumer) XXX_Size() int {
	return xxx_messageInfo_VolumeConsumer.Size(m)
}
func (m *VolumeConsumer) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeConsumer.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeConsumer proto.InternalMessageInfo

func (m *VolumeConsumer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeConsumer) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VolumeConsumer) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *VolumeConsumer) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerType() string {
	if m != nil {
		return m.OwnerType
	}
	return ""
}

// GraphDriverChanges represent a list of changes between the filesystem layers
// specified by the ID and Parent.  // Parent may be an empty string, in which
// case there is no parent.
// Where the Path is the filesystem path within the layered filesystem
// swagger:model
type GraphDriverChanges struct {
	Path                 string                `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Kind                 GraphDriverChangeType `protobuf:"varint,2,opt,name=kind,enum=openstorage.api.GraphDriverChangeType" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GraphDriverChanges) Reset()         { *m = GraphDriverChanges{} }
func (m *GraphDriverChanges) String() string { return proto.CompactTextString(m) }
func (*GraphDriverChanges) ProtoMessage()    {}
func (*GraphDriverChanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{23}
}
func (m *GraphDriverChanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDriverChanges.Unmarshal(m, b)
}
func (m *GraphDriverChanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDriverChanges.Marshal(b, m, deterministic)
}
func (dst *GraphDriverChanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDriverChanges.Merge(dst, src)
}
func (m *GraphDriverChanges) XXX_Size() int {
	return xxx_messageInfo_GraphDriverChanges.Size(m)
}
func (m *GraphDriverChanges) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDriverChanges.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDriverChanges proto.InternalMessageInfo

func (m *GraphDriverChanges) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GraphDriverChanges) GetKind() GraphDriverChangeType {
	if m != nil {
		return m.Kind
	}
	return GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE
}

// ClusterResponse specifies a response that gets returned when requesting the cluster
// swagger:response clusterResponse
type ClusterResponse struct {
	// Error code
	//
	// in: body
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterResponse) Reset()         { *m = ClusterResponse{} }
func (m *ClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterResponse) ProtoMessage()    {}
func (*ClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{24}
}
func (m *ClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterResponse.Unmarshal(m, b)
}
func (m *ClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterResponse.Merge(dst, src)
}
func (m *ClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterResponse.Size(m)
}
func (m *ClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterResponse proto.InternalMessageInfo

func (m *ClusterResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Active Request
// swagger:model
type ActiveRequest struct {
	ReqestKV             map[int64]string `protobuf:"bytes,1,rep,name=ReqestKV" json:"ReqestKV,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequest) Reset()         { *m = ActiveRequest{} }
func (m *ActiveRequest) String() string { return proto.CompactTextString(m) }
func (*ActiveRequest) ProtoMessage()    {}
func (*ActiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{25}
}
func (m *ActiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequest.Unmarshal(m, b)
}
func (m *ActiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequest.Marshal(b, m, deterministic)
}
func (dst *ActiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequest.Merge(dst, src)
}
func (m *ActiveRequest) XXX_Size() int {
	return xxx_messageInfo_ActiveRequest.Size(m)
}
func (m *ActiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequest proto.InternalMessageInfo

func (m *ActiveRequest) GetReqestKV() map[int64]string {
	if m != nil {
		return m.ReqestKV
	}
	return nil
}

// Active Requests
// swagger:model
type ActiveRequests struct {
	RequestCount         int64            `protobuf:"varint,1,opt,name=RequestCount" json:"RequestCount,omitempty"`
	ActiveRequest        []*ActiveRequest `protobuf:"bytes,2,rep,name=ActiveRequest" json:"ActiveRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequests) Reset()         { *m = ActiveRequests{} }
func (m *ActiveRequests) String() string { return proto.CompactTextString(m) }
func (*ActiveRequests) ProtoMessage()    {}
func (*ActiveRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{26}
}
func (m *ActiveRequests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequests.Unmarshal(m, b)
}
func (m *ActiveRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequests.Marshal(b, m, deterministic)
}
func (dst *ActiveRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequests.Merge(dst, src)
}
func (m *ActiveRequests) XXX_Size() int {
	return xxx_messageInfo_ActiveRequests.Size(m)
}
func (m *ActiveRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequests.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequests proto.InternalMessageInfo

func (m *ActiveRequests) GetRequestCount() int64 {
	if m != nil {
		return m.RequestCount
	}
	return 0
}

func (m *ActiveRequests) GetActiveRequest() []*ActiveRequest {
	if m != nil {
		return m.ActiveRequest
	}
	return nil
}

// GroupSnapCreateRequest specifies a request to create a snapshot of given group.
// swagger:model
type GroupSnapCreateRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=Labels" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GroupSnapCreateRequest) Reset()         { *m = GroupSnapCreateRequest{} }
func (m *GroupSnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateRequest) ProtoMessage()    {}
func (*GroupSnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{27}
}
func (m *GroupSnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateRequest.Unmarshal(m, b)
}
func (m *GroupSnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateRequest.Merge(dst, src)
}
func (m *GroupSnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateRequest.Size(m)
}
func (m *GroupSnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateRequest proto.InternalMessageInfo

func (m *GroupSnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupSnapCreateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// GroupSnapCreateRequest specifies a response that get's returned when creating a group snapshot.
// swagger:response groupSnapCreateResponse
type GroupSnapCreateResponse struct {
	// Created snapshots
	//
	// in: body
	// Required: true
	Snapshots map[string]*SnapCreateResponse `protobuf:"bytes,1,rep,name=snapshots" json:"snapshots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupSnapCreateResponse) Reset()         { *m = GroupSnapCreateResponse{} }
func (m *GroupSnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateResponse) ProtoMessage()    {}
func (*GroupSnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{28}
}
func (m *GroupSnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateResponse.Unmarshal(m, b)
}
func (m *GroupSnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateResponse.Merge(dst, src)
}
func (m *GroupSnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateResponse.Size(m)
}
func (m *GroupSnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateResponse proto.InternalMessageInfo

func (m *GroupSnapCreateResponse) GetSnapshots() map[string]*SnapCreateResponse {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

func (m *GroupSnapCreateResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// StorageNode describes the state of the node
type StorageNode struct {
	// Id of the node
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Cpu usage of the node
	Cpu float64 `protobuf:"fixed64,2,opt,name=cpu" json:"cpu,omitempty"`
	// Total memory of the node
	MemTotal uint64 `protobuf:"varint,3,opt,name=mem_total,json=memTotal" json:"mem_total,omitempty"`
	// Used memory of the node
	MemUsed uint64 `protobuf:"varint,4,opt,name=mem_used,json=memUsed" json:"mem_used,omitempty"`
	// Free memory of the node
	MemFree uint64 `protobuf:"varint,5,opt,name=mem_free,json=memFree" json:"mem_free,omitempty"`
	// Average load (percentage)
	AvgLoad int64 `protobuf:"varint,6,opt,name=avg_load,json=avgLoad" json:"avg_load,omitempty"`
	// Node status
	Status Status `protobuf:"varint,7,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// List of disks on the node
	Disks map[string]*StorageResource `protobuf:"bytes,9,rep,name=disks" json:"disks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of storage pools this node supports
	Pools []*StoragePool `protobuf:"bytes,10,rep,name=pools" json:"pools,omitempty"`
	// Management IP
	MgmtIp string `protobuf:"bytes,11,opt,name=mgmt_ip,json=mgmtIp" json:"mgmt_ip,omitempty"`
	// Data IP
	DataIp string `protobuf:"bytes,12,opt,name=data_ip,json=dataIp" json:"data_ip,omitempty"`
	// Hostname of the node
	Hostname string `protobuf:"bytes,15,opt,name=hostname" json:"hostname,omitempty"`
	// User defined labels for the node
	NodeLabels           map[string]string `protobuf:"bytes,16,rep,name=node_labels,json=nodeLabels" json:"node_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StorageNode) Reset()         { *m = StorageNode{} }
func (m *StorageNode) String() string { return proto.CompactTextString(m) }
func (*StorageNode) ProtoMessage()    {}
func (*StorageNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{29}
}
func (m *StorageNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageNode.Unmarshal(m, b)
}
func (m *StorageNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageNode.Marshal(b, m, deterministic)
}
func (dst *StorageNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageNode.Merge(dst, src)
}
func (m *StorageNode) XXX_Size() int {
	return xxx_messageInfo_StorageNode.Size(m)
}
func (m *StorageNode) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageNode.DiscardUnknown(m)
}

var xxx_messageInfo_StorageNode proto.InternalMessageInfo

func (m *StorageNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageNode) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *StorageNode) GetMemTotal() uint64 {
	if m != nil {
		return m.MemTotal
	}
	return 0
}

func (m *StorageNode) GetMemUsed() uint64 {
	if m != nil {
		return m.MemUsed
	}
	return 0
}

func (m *StorageNode) GetMemFree() uint64 {
	if m != nil {
		return m.MemFree
	}
	return 0
}

func (m *StorageNode) GetAvgLoad() int64 {
	if m != nil {
		return m.AvgLoad
	}
	return 0
}

func (m *StorageNode) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageNode) GetDisks() map[string]*StorageResource {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *StorageNode) GetPools() []*StoragePool {
	if m != nil {
		return m.Pools
	}
	return nil
}

func (m *StorageNode) GetMgmtIp() string {
	if m != nil {
		return m.MgmtIp
	}
	return ""
}

func (m *StorageNode) GetDataIp() string {
	if m != nil {
		return m.DataIp
	}
	return ""
}

func (m *StorageNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *StorageNode) GetNodeLabels() map[string]string {
	if m != nil {
		return m.NodeLabels
	}
	return nil
}

// StorageCluster represents the state of the cluster
type StorageCluster struct {
	// Status of the cluster
	Status Status `protobuf:"varint,1,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// Id of the cluster
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// NodeId is the id of the node servicing these requests
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// Nodes are a list of all the nodes on the cluster
	NodeIds              []string `protobuf:"bytes,4,rep,name=node_ids,json=nodeIds" json:"node_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageCluster) Reset()         { *m = StorageCluster{} }
func (m *StorageCluster) String() string { return proto.CompactTextString(m) }
func (*StorageCluster) ProtoMessage()    {}
func (*StorageCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{30}
}
func (m *StorageCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageCluster.Unmarshal(m, b)
}
func (m *StorageCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageCluster.Marshal(b, m, deterministic)
}
func (dst *StorageCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageCluster.Merge(dst, src)
}
func (m *StorageCluster) XXX_Size() int {
	return xxx_messageInfo_StorageCluster.Size(m)
}
func (m *StorageCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageCluster.DiscardUnknown(m)
}

var xxx_messageInfo_StorageCluster proto.InternalMessageInfo

func (m *StorageCluster) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageCluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *StorageCluster) GetNodeIds() []string {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type SdkSchedulePolicyCreateRequest struct {
	// Schedule Policy
	SchedulePolicy       *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=SchedulePolicy" json:"SchedulePolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyCreateRequest) Reset()         { *m = SdkSchedulePolicyCreateRequest{} }
func (m *SdkSchedulePolicyCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyCreateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{31}
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyCreateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Size(m)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyCreateRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyCreateRequest) GetSchedulePolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.SchedulePolicy
	}
	return nil
}

type SdkSchedulePolicyCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyCreateResponse) Reset()         { *m = SdkSchedulePolicyCreateResponse{} }
func (m *SdkSchedulePolicyCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyCreateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{32}
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyCreateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Size(m)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyCreateResponse proto.InternalMessageInfo

type SdkSchedulePolicyUpdateRequest struct {
	// Schedule Policy
	SchedulePolicy       *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=SchedulePolicy" json:"SchedulePolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyUpdateRequest) Reset()         { *m = SdkSchedulePolicyUpdateRequest{} }
func (m *SdkSchedulePolicyUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyUpdateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{33}
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Size(m)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyUpdateRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyUpdateRequest) GetSchedulePolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.SchedulePolicy
	}
	return nil
}

type SdkSchedulePolicyUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyUpdateResponse) Reset()         { *m = SdkSchedulePolicyUpdateResponse{} }
func (m *SdkSchedulePolicyUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyUpdateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{34}
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Size(m)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyUpdateResponse proto.InternalMessageInfo

type SdkSchedulePolicyEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyEnumerateRequest) Reset()         { *m = SdkSchedulePolicyEnumerateRequest{} }
func (m *SdkSchedulePolicyEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyEnumerateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{35}
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Size(m)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyEnumerateRequest proto.InternalMessageInfo

type SdkSchedulePolicyEnumerateResponse struct {
	// List of Schedule Policy
	Policies             []*SdkSchedulePolicy `protobuf:"bytes,1,rep,name=policies" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SdkSchedulePolicyEnumerateResponse) Reset()         { *m = SdkSchedulePolicyEnumerateResponse{} }
func (m *SdkSchedulePolicyEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyEnumerateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{36}
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Size(m)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyEnumerateResponse proto.InternalMessageInfo

func (m *SdkSchedulePolicyEnumerateResponse) GetPolicies() []*SdkSchedulePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type SdkSchedulePolicyInspectRequest struct {
	// Name of the schedule Policy
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyInspectRequest) Reset()         { *m = SdkSchedulePolicyInspectRequest{} }
func (m *SdkSchedulePolicyInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInspectRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{37}
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInspectRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Size(m)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInspectRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyInspectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SdkSchedulePolicyInspectResponse struct {
	// List of Schedule Policy
	Policy               *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=policy" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyInspectResponse) Reset()         { *m = SdkSchedulePolicyInspectResponse{} }
func (m *SdkSchedulePolicyInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInspectResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{38}
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInspectResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Size(m)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInspectResponse proto.InternalMessageInfo

func (m *SdkSchedulePolicyInspectResponse) GetPolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type SdkSchedulePolicyDeleteRequest struct {
	// Name of the schedule policy
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyDeleteRequest) Reset()         { *m = SdkSchedulePolicyDeleteRequest{} }
func (m *SdkSchedulePolicyDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyDeleteRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{39}
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Size(m)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyDeleteRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SdkSchedulePolicyDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyDeleteResponse) Reset()         { *m = SdkSchedulePolicyDeleteResponse{} }
func (m *SdkSchedulePolicyDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyDeleteResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{40}
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Size(m)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyDeleteResponse proto.InternalMessageInfo

type SdkSchedulePolicy struct {
	// Name of the schedule policy
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Schedule string in yaml
	Schedule             string   `protobuf:"bytes,2,opt,name=schedule" json:"schedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicy) Reset()         { *m = SdkSchedulePolicy{} }
func (m *SdkSchedulePolicy) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicy) ProtoMessage()    {}
func (*SdkSchedulePolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{41}
}
func (m *SdkSchedulePolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicy.Unmarshal(m, b)
}
func (m *SdkSchedulePolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicy.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicy.Merge(dst, src)
}
func (m *SdkSchedulePolicy) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicy.Size(m)
}
func (m *SdkSchedulePolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicy proto.InternalMessageInfo

func (m *SdkSchedulePolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkSchedulePolicy) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

type SdkCredentialCreateAzureRequest struct {
	// Azure Credential
	Credential           *AzureCredential `protobuf:"bytes,1,opt,name=credential" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SdkCredentialCreateAzureRequest) Reset()         { *m = SdkCredentialCreateAzureRequest{} }
func (m *SdkCredentialCreateAzureRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateAzureRequest) ProtoMessage()    {}
func (*SdkCredentialCreateAzureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{42}
}
func (m *SdkCredentialCreateAzureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateAzureRequest.Unmarshal(m, b)
}
func (m *SdkCredentialCreateAzureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateAzureRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateAzureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateAzureRequest.Merge(dst, src)
}
func (m *SdkCredentialCreateAzureRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateAzureRequest.Size(m)
}
func (m *SdkCredentialCreateAzureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateAzureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateAzureRequest proto.InternalMessageInfo

func (m *SdkCredentialCreateAzureRequest) GetCredential() *AzureCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type SdkCredentialCreateAzureResponse struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialCreateAzureResponse) Reset()         { *m = SdkCredentialCreateAzureResponse{} }
func (m *SdkCredentialCreateAzureResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateAzureResponse) ProtoMessage()    {}
func (*SdkCredentialCreateAzureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{43}
}
func (m *SdkCredentialCreateAzureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateAzureResponse.Unmarshal(m, b)
}
func (m *SdkCredentialCreateAzureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateAzureResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateAzureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateAzureResponse.Merge(dst, src)
}
func (m *SdkCredentialCreateAzureResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateAzureResponse.Size(m)
}
func (m *SdkCredentialCreateAzureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateAzureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateAzureResponse proto.InternalMessageInfo

func (m *SdkCredentialCreateAzureResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialCreateGoogleRequest struct {
	// Google Credential
	Credential           *GoogleCredential `protobuf:"bytes,1,opt,name=credential" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkCredentialCreateGoogleRequest) Reset()         { *m = SdkCredentialCreateGoogleRequest{} }
func (m *SdkCredentialCreateGoogleRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateGoogleRequest) ProtoMessage()    {}
func (*SdkCredentialCreateGoogleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{44}
}
func (m *SdkCredentialCreateGoogleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateGoogleRequest.Unmarshal(m, b)
}
func (m *SdkCredentialCreateGoogleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateGoogleRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateGoogleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateGoogleRequest.Merge(dst, src)
}
func (m *SdkCredentialCreateGoogleRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateGoogleRequest.Size(m)
}
func (m *SdkCredentialCreateGoogleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateGoogleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateGoogleRequest proto.InternalMessageInfo

func (m *SdkCredentialCreateGoogleRequest) GetCredential() *GoogleCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type SdkCredentialCreateGoogleResponse struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialCreateGoogleResponse) Reset()         { *m = SdkCredentialCreateGoogleResponse{} }
func (m *SdkCredentialCreateGoogleResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateGoogleResponse) ProtoMessage()    {}
func (*SdkCredentialCreateGoogleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{45}
}
func (m *SdkCredentialCreateGoogleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateGoogleResponse.Unmarshal(m, b)
}
func (m *SdkCredentialCreateGoogleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateGoogleResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateGoogleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateGoogleResponse.Merge(dst, src)
}
func (m *SdkCredentialCreateGoogleResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateGoogleResponse.Size(m)
}
func (m *SdkCredentialCreateGoogleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateGoogleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateGoogleResponse proto.InternalMessageInfo

func (m *SdkCredentialCreateGoogleResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialCreateAWSRequest struct {
	// AWS S3 Credential
	Credential           *S3Credential `protobuf:"bytes,1,opt,name=credential" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SdkCredentialCreateAWSRequest) Reset()         { *m = SdkCredentialCreateAWSRequest{} }
func (m *SdkCredentialCreateAWSRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateAWSRequest) ProtoMessage()    {}
func (*SdkCredentialCreateAWSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{46}
}
func (m *SdkCredentialCreateAWSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateAWSRequest.Unmarshal(m, b)
}
func (m *SdkCredentialCreateAWSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateAWSRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateAWSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateAWSRequest.Merge(dst, src)
}
func (m *SdkCredentialCreateAWSRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateAWSRequest.Size(m)
}
func (m *SdkCredentialCreateAWSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateAWSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateAWSRequest proto.InternalMessageInfo

func (m *SdkCredentialCreateAWSRequest) GetCredential() *S3Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type SdkCredentialCreateAWSResponse struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialCreateAWSResponse) Reset()         { *m = SdkCredentialCreateAWSResponse{} }
func (m *SdkCredentialCreateAWSResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateAWSResponse) ProtoMessage()    {}
func (*SdkCredentialCreateAWSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{47}
}
func (m *SdkCredentialCreateAWSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateAWSResponse.Unmarshal(m, b)
}
func (m *SdkCredentialCreateAWSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateAWSResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateAWSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateAWSResponse.Merge(dst, src)
}
func (m *SdkCredentialCreateAWSResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateAWSResponse.Size(m)
}
func (m *SdkCredentialCreateAWSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateAWSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateAWSResponse proto.InternalMessageInfo

func (m *SdkCredentialCreateAWSResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type S3Credential struct {
	// Id of the credentials
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	// Access key
	AccessKey string `protobuf:"bytes,2,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// Secret key
	SecretKey string `protobuf:"bytes,3,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// Endpoint
	Endpoint string `protobuf:"bytes,4,opt,name=endpoint" json:"endpoint,omitempty"`
	// Region
	Region               string   `protobuf:"bytes,5,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S3Credential) Reset()         { *m = S3Credential{} }
func (m *S3Credential) String() string { return proto.CompactTextString(m) }
func (*S3Credential) ProtoMessage()    {}
func (*S3Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{48}
}
func (m *S3Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S3Credential.Unmarshal(m, b)
}
func (m *S3Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S3Credential.Marshal(b, m, deterministic)
}
func (dst *S3Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S3Credential.Merge(dst, src)
}
func (m *S3Credential) XXX_Size() int {
	return xxx_messageInfo_S3Credential.Size(m)
}
func (m *S3Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_S3Credential.DiscardUnknown(m)
}

var xxx_messageInfo_S3Credential proto.InternalMessageInfo

func (m *S3Credential) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *S3Credential) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *S3Credential) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *S3Credential) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *S3Credential) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type AzureCredential struct {
	// Cred Type
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	// Account name
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// Account key
	AccountKey           string   `protobuf:"bytes,3,opt,name=account_key,json=accountKey" json:"account_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AzureCredential) Reset()         { *m = AzureCredential{} }
func (m *AzureCredential) String() string { return proto.CompactTextString(m) }
func (*AzureCredential) ProtoMessage()    {}
func (*AzureCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{49}
}
func (m *AzureCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AzureCredential.Unmarshal(m, b)
}
func (m *AzureCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AzureCredential.Marshal(b, m, deterministic)
}
func (dst *AzureCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzureCredential.Merge(dst, src)
}
func (m *AzureCredential) XXX_Size() int {
	return xxx_messageInfo_AzureCredential.Size(m)
}
func (m *AzureCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_AzureCredential.DiscardUnknown(m)
}

var xxx_messageInfo_AzureCredential proto.InternalMessageInfo

func (m *AzureCredential) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *AzureCredential) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *AzureCredential) GetAccountKey() string {
	if m != nil {
		return m.AccountKey
	}
	return ""
}

type GoogleCredential struct {
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	// Project ID
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// JSON Key
	JsonKey              string   `protobuf:"bytes,3,opt,name=json_key,json=jsonKey" json:"json_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleCredential) Reset()         { *m = GoogleCredential{} }
func (m *GoogleCredential) String() string { return proto.CompactTextString(m) }
func (*GoogleCredential) ProtoMessage()    {}
func (*GoogleCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{50}
}
func (m *GoogleCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleCredential.Unmarshal(m, b)
}
func (m *GoogleCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleCredential.Marshal(b, m, deterministic)
}
func (dst *GoogleCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleCredential.Merge(dst, src)
}
func (m *GoogleCredential) XXX_Size() int {
	return xxx_messageInfo_GoogleCredential.Size(m)
}
func (m *GoogleCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleCredential.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleCredential proto.InternalMessageInfo

func (m *GoogleCredential) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *GoogleCredential) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GoogleCredential) GetJsonKey() string {
	if m != nil {
		return m.JsonKey
	}
	return ""
}

// should enumerate accept anything?
type SdkCredentialEnumerateAWSRequest struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialEnumerateAWSRequest) Reset()         { *m = SdkCredentialEnumerateAWSRequest{} }
func (m *SdkCredentialEnumerateAWSRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateAWSRequest) ProtoMessage()    {}
func (*SdkCredentialEnumerateAWSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{51}
}
func (m *SdkCredentialEnumerateAWSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateAWSRequest.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateAWSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateAWSRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateAWSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateAWSRequest.Merge(dst, src)
}
func (m *SdkCredentialEnumerateAWSRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateAWSRequest.Size(m)
}
func (m *SdkCredentialEnumerateAWSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateAWSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateAWSRequest proto.InternalMessageInfo

func (m *SdkCredentialEnumerateAWSRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialEnumerateAWSResponse struct {
	// Array of Credentials for AWS
	Credential           []*S3Credential `protobuf:"bytes,1,rep,name=credential" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SdkCredentialEnumerateAWSResponse) Reset()         { *m = SdkCredentialEnumerateAWSResponse{} }
func (m *SdkCredentialEnumerateAWSResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateAWSResponse) ProtoMessage()    {}
func (*SdkCredentialEnumerateAWSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{52}
}
func (m *SdkCredentialEnumerateAWSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateAWSResponse.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateAWSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateAWSResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateAWSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateAWSResponse.Merge(dst, src)
}
func (m *SdkCredentialEnumerateAWSResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateAWSResponse.Size(m)
}
func (m *SdkCredentialEnumerateAWSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateAWSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateAWSResponse proto.InternalMessageInfo

func (m *SdkCredentialEnumerateAWSResponse) GetCredential() []*S3Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type SdkCredentialEnumerateAzureRequest struct {
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialEnumerateAzureRequest) Reset()         { *m = SdkCredentialEnumerateAzureRequest{} }
func (m *SdkCredentialEnumerateAzureRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateAzureRequest) ProtoMessage()    {}
func (*SdkCredentialEnumerateAzureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{53}
}
func (m *SdkCredentialEnumerateAzureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateAzureRequest.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateAzureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateAzureRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateAzureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateAzureRequest.Merge(dst, src)
}
func (m *SdkCredentialEnumerateAzureRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateAzureRequest.Size(m)
}
func (m *SdkCredentialEnumerateAzureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateAzureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateAzureRequest proto.InternalMessageInfo

func (m *SdkCredentialEnumerateAzureRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialEnumerateAzureResponse struct {
	// List of Credentials for Azure
	Credential           []*AzureCredential `protobuf:"bytes,1,rep,name=credential" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkCredentialEnumerateAzureResponse) Reset()         { *m = SdkCredentialEnumerateAzureResponse{} }
func (m *SdkCredentialEnumerateAzureResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateAzureResponse) ProtoMessage()    {}
func (*SdkCredentialEnumerateAzureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{54}
}
func (m *SdkCredentialEnumerateAzureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateAzureResponse.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateAzureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateAzureResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateAzureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateAzureResponse.Merge(dst, src)
}
func (m *SdkCredentialEnumerateAzureResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateAzureResponse.Size(m)
}
func (m *SdkCredentialEnumerateAzureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateAzureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateAzureResponse proto.InternalMessageInfo

func (m *SdkCredentialEnumerateAzureResponse) GetCredential() []*AzureCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type SdkCredentialEnumerateGoogleRequest struct {
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialEnumerateGoogleRequest) Reset()         { *m = SdkCredentialEnumerateGoogleRequest{} }
func (m *SdkCredentialEnumerateGoogleRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateGoogleRequest) ProtoMessage()    {}
func (*SdkCredentialEnumerateGoogleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{55}
}
func (m *SdkCredentialEnumerateGoogleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateGoogleRequest.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateGoogleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateGoogleRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateGoogleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateGoogleRequest.Merge(dst, src)
}
func (m *SdkCredentialEnumerateGoogleRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateGoogleRequest.Size(m)
}
func (m *SdkCredentialEnumerateGoogleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateGoogleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateGoogleRequest proto.InternalMessageInfo

func (m *SdkCredentialEnumerateGoogleRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialEnumerateGoogleResponse struct {
	// List of Credentials for Google
	Credential           []*GoogleCredential `protobuf:"bytes,1,rep,name=credential" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SdkCredentialEnumerateGoogleResponse) Reset()         { *m = SdkCredentialEnumerateGoogleResponse{} }
func (m *SdkCredentialEnumerateGoogleResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateGoogleResponse) ProtoMessage()    {}
func (*SdkCredentialEnumerateGoogleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{56}
}
func (m *SdkCredentialEnumerateGoogleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateGoogleResponse.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateGoogleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateGoogleResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateGoogleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateGoogleResponse.Merge(dst, src)
}
func (m *SdkCredentialEnumerateGoogleResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateGoogleResponse.Size(m)
}
func (m *SdkCredentialEnumerateGoogleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateGoogleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateGoogleResponse proto.InternalMessageInfo

func (m *SdkCredentialEnumerateGoogleResponse) GetCredential() []*GoogleCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type SdkCredentialDeleteRequest struct {
	// ID for credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteRequest) Reset()         { *m = SdkCredentialDeleteRequest{} }
func (m *SdkCredentialDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteRequest) ProtoMessage()    {}
func (*SdkCredentialDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{57}
}
func (m *SdkCredentialDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteRequest.Merge(dst, src)
}
func (m *SdkCredentialDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Size(m)
}
func (m *SdkCredentialDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteRequest proto.InternalMessageInfo

func (m *SdkCredentialDeleteRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteResponse) Reset()         { *m = SdkCredentialDeleteResponse{} }
func (m *SdkCredentialDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteResponse) ProtoMessage()    {}
func (*SdkCredentialDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{58}
}
func (m *SdkCredentialDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteResponse.Merge(dst, src)
}
func (m *SdkCredentialDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Size(m)
}
func (m *SdkCredentialDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteResponse proto.InternalMessageInfo

type SdkCredentialValidateRequest struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialValidateRequest) Reset()         { *m = SdkCredentialValidateRequest{} }
func (m *SdkCredentialValidateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialValidateRequest) ProtoMessage()    {}
func (*SdkCredentialValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{59}
}
func (m *SdkCredentialValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialValidateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialValidateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialValidateRequest.Merge(dst, src)
}
func (m *SdkCredentialValidateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialValidateRequest.Size(m)
}
func (m *SdkCredentialValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialValidateRequest proto.InternalMessageInfo

func (m *SdkCredentialValidateRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

type SdkCredentialValidateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialValidateResponse) Reset()         { *m = SdkCredentialValidateResponse{} }
func (m *SdkCredentialValidateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialValidateResponse) ProtoMessage()    {}
func (*SdkCredentialValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{60}
}
func (m *SdkCredentialValidateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialValidateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialValidateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialValidateResponse.Merge(dst, src)
}
func (m *SdkCredentialValidateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialValidateResponse.Size(m)
}
func (m *SdkCredentialValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialValidateResponse proto.InternalMessageInfo

type SdkVolumeMountRequest struct {
	// Id of the volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Mount path for mounting the volume.
	MountPath string `protobuf:"bytes,2,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// Additional options
	Options              map[string]string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeMountRequest) Reset()         { *m = SdkVolumeMountRequest{} }
func (m *SdkVolumeMountRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeMountRequest) ProtoMessage()    {}
func (*SdkVolumeMountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{61}
}
func (m *SdkVolumeMountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeMountRequest.Unmarshal(m, b)
}
func (m *SdkVolumeMountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeMountRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeMountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeMountRequest.Merge(dst, src)
}
func (m *SdkVolumeMountRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeMountRequest.Size(m)
}
func (m *SdkVolumeMountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeMountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeMountRequest proto.InternalMessageInfo

func (m *SdkVolumeMountRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeMountRequest) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *SdkVolumeMountRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type SdkVolumeMountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeMountResponse) Reset()         { *m = SdkVolumeMountResponse{} }
func (m *SdkVolumeMountResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeMountResponse) ProtoMessage()    {}
func (*SdkVolumeMountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{62}
}
func (m *SdkVolumeMountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeMountResponse.Unmarshal(m, b)
}
func (m *SdkVolumeMountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeMountResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeMountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeMountResponse.Merge(dst, src)
}
func (m *SdkVolumeMountResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeMountResponse.Size(m)
}
func (m *SdkVolumeMountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeMountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeMountResponse proto.InternalMessageInfo

type SdkVolumeUnmountRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// MountPath for device
	MountPath string `protobuf:"bytes,2,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// Options to unmount device
	Options              map[string]string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeUnmountRequest) Reset()         { *m = SdkVolumeUnmountRequest{} }
func (m *SdkVolumeUnmountRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeUnmountRequest) ProtoMessage()    {}
func (*SdkVolumeUnmountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{63}
}
func (m *SdkVolumeUnmountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeUnmountRequest.Unmarshal(m, b)
}
func (m *SdkVolumeUnmountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeUnmountRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeUnmountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeUnmountRequest.Merge(dst, src)
}
func (m *SdkVolumeUnmountRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeUnmountRequest.Size(m)
}
func (m *SdkVolumeUnmountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeUnmountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeUnmountRequest proto.InternalMessageInfo

func (m *SdkVolumeUnmountRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeUnmountRequest) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *SdkVolumeUnmountRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type SdkVolumeUnmountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeUnmountResponse) Reset()         { *m = SdkVolumeUnmountResponse{} }
func (m *SdkVolumeUnmountResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeUnmountResponse) ProtoMessage()    {}
func (*SdkVolumeUnmountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{64}
}
func (m *SdkVolumeUnmountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeUnmountResponse.Unmarshal(m, b)
}
func (m *SdkVolumeUnmountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeUnmountResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeUnmountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeUnmountResponse.Merge(dst, src)
}
func (m *SdkVolumeUnmountResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeUnmountResponse.Size(m)
}
func (m *SdkVolumeUnmountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeUnmountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeUnmountResponse proto.InternalMessageInfo

type SdkVolumeAttachRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Options for attaching volume, right now only passphrase options is supported
	Options              map[string]string `protobuf:"bytes,2,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeAttachRequest) Reset()         { *m = SdkVolumeAttachRequest{} }
func (m *SdkVolumeAttachRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeAttachRequest) ProtoMessage()    {}
func (*SdkVolumeAttachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{65}
}
func (m *SdkVolumeAttachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeAttachRequest.Unmarshal(m, b)
}
func (m *SdkVolumeAttachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeAttachRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeAttachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeAttachRequest.Merge(dst, src)
}
func (m *SdkVolumeAttachRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeAttachRequest.Size(m)
}
func (m *SdkVolumeAttachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeAttachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeAttachRequest proto.InternalMessageInfo

func (m *SdkVolumeAttachRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeAttachRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type SdkVolumeAttachResponse struct {
	// Device path where device is exported
	DevicePath           string   `protobuf:"bytes,1,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeAttachResponse) Reset()         { *m = SdkVolumeAttachResponse{} }
func (m *SdkVolumeAttachResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeAttachResponse) ProtoMessage()    {}
func (*SdkVolumeAttachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{66}
}
func (m *SdkVolumeAttachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeAttachResponse.Unmarshal(m, b)
}
func (m *SdkVolumeAttachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeAttachResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeAttachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeAttachResponse.Merge(dst, src)
}
func (m *SdkVolumeAttachResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeAttachResponse.Size(m)
}
func (m *SdkVolumeAttachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeAttachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeAttachResponse proto.InternalMessageInfo

func (m *SdkVolumeAttachResponse) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

type SdkVolumeDetachRequest struct {
	// Id of the volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDetachRequest) Reset()         { *m = SdkVolumeDetachRequest{} }
func (m *SdkVolumeDetachRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDetachRequest) ProtoMessage()    {}
func (*SdkVolumeDetachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{67}
}
func (m *SdkVolumeDetachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDetachRequest.Unmarshal(m, b)
}
func (m *SdkVolumeDetachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDetachRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDetachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDetachRequest.Merge(dst, src)
}
func (m *SdkVolumeDetachRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDetachRequest.Size(m)
}
func (m *SdkVolumeDetachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDetachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDetachRequest proto.InternalMessageInfo

func (m *SdkVolumeDetachRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeDetachResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDetachResponse) Reset()         { *m = SdkVolumeDetachResponse{} }
func (m *SdkVolumeDetachResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDetachResponse) ProtoMessage()    {}
func (*SdkVolumeDetachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{68}
}
func (m *SdkVolumeDetachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDetachResponse.Unmarshal(m, b)
}
func (m *SdkVolumeDetachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDetachResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDetachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDetachResponse.Merge(dst, src)
}
func (m *SdkVolumeDetachResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDetachResponse.Size(m)
}
func (m *SdkVolumeDetachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDetachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDetachResponse proto.InternalMessageInfo

type SdkVolumeCreateRequest struct {
	// Unique name of the volume. This will be used for idempotency.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Volume specification
	Spec                 *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SdkVolumeCreateRequest) Reset()         { *m = SdkVolumeCreateRequest{} }
func (m *SdkVolumeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCreateRequest) ProtoMessage()    {}
func (*SdkVolumeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{69}
}
func (m *SdkVolumeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCreateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCreateRequest.Merge(dst, src)
}
func (m *SdkVolumeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCreateRequest.Size(m)
}
func (m *SdkVolumeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCreateRequest proto.InternalMessageInfo

func (m *SdkVolumeCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkVolumeCreateRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type SdkVolumeCreateResponse struct {
	// Id of new volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeCreateResponse) Reset()         { *m = SdkVolumeCreateResponse{} }
func (m *SdkVolumeCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCreateResponse) ProtoMessage()    {}
func (*SdkVolumeCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{70}
}
func (m *SdkVolumeCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCreateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCreateResponse.Merge(dst, src)
}
func (m *SdkVolumeCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCreateResponse.Size(m)
}
func (m *SdkVolumeCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCreateResponse proto.InternalMessageInfo

func (m *SdkVolumeCreateResponse) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeCloneRequest struct {
	// Unique name of the volume. This will be used for idempotency.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Parent volume id, if specified will create a new volume as a clone of the parent.
	ParentId string `protobuf:"bytes,2,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	// Volume specification
	Spec                 *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SdkVolumeCloneRequest) Reset()         { *m = SdkVolumeCloneRequest{} }
func (m *SdkVolumeCloneRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCloneRequest) ProtoMessage()    {}
func (*SdkVolumeCloneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{71}
}
func (m *SdkVolumeCloneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCloneRequest.Unmarshal(m, b)
}
func (m *SdkVolumeCloneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCloneRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCloneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCloneRequest.Merge(dst, src)
}
func (m *SdkVolumeCloneRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCloneRequest.Size(m)
}
func (m *SdkVolumeCloneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCloneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCloneRequest proto.InternalMessageInfo

func (m *SdkVolumeCloneRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkVolumeCloneRequest) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *SdkVolumeCloneRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type SdkVolumeCloneResponse struct {
	// Id of new volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeCloneResponse) Reset()         { *m = SdkVolumeCloneResponse{} }
func (m *SdkVolumeCloneResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeCloneResponse) ProtoMessage()    {}
func (*SdkVolumeCloneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{72}
}
func (m *SdkVolumeCloneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeCloneResponse.Unmarshal(m, b)
}
func (m *SdkVolumeCloneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeCloneResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeCloneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeCloneResponse.Merge(dst, src)
}
func (m *SdkVolumeCloneResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeCloneResponse.Size(m)
}
func (m *SdkVolumeCloneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeCloneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeCloneResponse proto.InternalMessageInfo

func (m *SdkVolumeCloneResponse) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeDeleteRequest struct {
	// Id of volume to delete
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDeleteRequest) Reset()         { *m = SdkVolumeDeleteRequest{} }
func (m *SdkVolumeDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDeleteRequest) ProtoMessage()    {}
func (*SdkVolumeDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{73}
}
func (m *SdkVolumeDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDeleteRequest.Unmarshal(m, b)
}
func (m *SdkVolumeDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDeleteRequest.Merge(dst, src)
}
func (m *SdkVolumeDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDeleteRequest.Size(m)
}
func (m *SdkVolumeDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDeleteRequest proto.InternalMessageInfo

func (m *SdkVolumeDeleteRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeDeleteResponse) Reset()         { *m = SdkVolumeDeleteResponse{} }
func (m *SdkVolumeDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeDeleteResponse) ProtoMessage()    {}
func (*SdkVolumeDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{74}
}
func (m *SdkVolumeDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeDeleteResponse.Unmarshal(m, b)
}
func (m *SdkVolumeDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeDeleteResponse.Merge(dst, src)
}
func (m *SdkVolumeDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeDeleteResponse.Size(m)
}
func (m *SdkVolumeDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeDeleteResponse proto.InternalMessageInfo

type SdkVolumeInspectRequest struct {
	// Id of volume to inspect
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeInspectRequest) Reset()         { *m = SdkVolumeInspectRequest{} }
func (m *SdkVolumeInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeInspectRequest) ProtoMessage()    {}
func (*SdkVolumeInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{75}
}
func (m *SdkVolumeInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeInspectRequest.Unmarshal(m, b)
}
func (m *SdkVolumeInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeInspectRequest.Merge(dst, src)
}
func (m *SdkVolumeInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeInspectRequest.Size(m)
}
func (m *SdkVolumeInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeInspectRequest proto.InternalMessageInfo

func (m *SdkVolumeInspectRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type SdkVolumeInspectResponse struct {
	// Information about the volume
	Volume               *Volume  `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeInspectResponse) Reset()         { *m = SdkVolumeInspectResponse{} }
func (m *SdkVolumeInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeInspectResponse) ProtoMessage()    {}
func (*SdkVolumeInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{76}
}
func (m *SdkVolumeInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeInspectResponse.Unmarshal(m, b)
}
func (m *SdkVolumeInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeInspectResponse.Merge(dst, src)
}
func (m *SdkVolumeInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeInspectResponse.Size(m)
}
func (m *SdkVolumeInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeInspectResponse proto.InternalMessageInfo

func (m *SdkVolumeInspectResponse) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

type SdkVolumeEnumerateRequest struct {
	// Volumes to match to this locator.
	// If not provided, all volumes will be returned.
	Locator              *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SdkVolumeEnumerateRequest) Reset()         { *m = SdkVolumeEnumerateRequest{} }
func (m *SdkVolumeEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeEnumerateRequest) ProtoMessage()    {}
func (*SdkVolumeEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{77}
}
func (m *SdkVolumeEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeEnumerateRequest.Merge(dst, src)
}
func (m *SdkVolumeEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeEnumerateRequest.Size(m)
}
func (m *SdkVolumeEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeEnumerateRequest proto.InternalMessageInfo

func (m *SdkVolumeEnumerateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

type SdkVolumeEnumerateResponse struct {
	// List of volumes matching label
	VolumeIds            []string `protobuf:"bytes,1,rep,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeEnumerateResponse) Reset()         { *m = SdkVolumeEnumerateResponse{} }
func (m *SdkVolumeEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeEnumerateResponse) ProtoMessage()    {}
func (*SdkVolumeEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{78}
}
func (m *SdkVolumeEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeEnumerateResponse.Merge(dst, src)
}
func (m *SdkVolumeEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeEnumerateResponse.Size(m)
}
func (m *SdkVolumeEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeEnumerateResponse proto.InternalMessageInfo

func (m *SdkVolumeEnumerateResponse) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

type SdkVolumeSnapshotCreateRequest struct {
	// Id of volume to take the snapshot from
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Labels to apply to snapshot
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeSnapshotCreateRequest) Reset()         { *m = SdkVolumeSnapshotCreateRequest{} }
func (m *SdkVolumeSnapshotCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotCreateRequest) ProtoMessage()    {}
func (*SdkVolumeSnapshotCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{79}
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Merge(dst, src)
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotCreateRequest.Size(m)
}
func (m *SdkVolumeSnapshotCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotCreateRequest proto.InternalMessageInfo

func (m *SdkVolumeSnapshotCreateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeSnapshotCreateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type SdkVolumeSnapshotCreateResponse struct {
	// Id of immutable snapshot
	SnapshotId           string   `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotCreateResponse) Reset()         { *m = SdkVolumeSnapshotCreateResponse{} }
func (m *SdkVolumeSnapshotCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotCreateResponse) ProtoMessage()    {}
func (*SdkVolumeSnapshotCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{80}
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Merge(dst, src)
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotCreateResponse.Size(m)
}
func (m *SdkVolumeSnapshotCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotCreateResponse proto.InternalMessageInfo

func (m *SdkVolumeSnapshotCreateResponse) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type SdkVolumeSnapshotRestoreRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Snapshot id to apply to `volume_id`
	SnapshotId           string   `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotRestoreRequest) Reset()         { *m = SdkVolumeSnapshotRestoreRequest{} }
func (m *SdkVolumeSnapshotRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotRestoreRequest) ProtoMessage()    {}
func (*SdkVolumeSnapshotRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{81}
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Merge(dst, src)
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.Size(m)
}
func (m *SdkVolumeSnapshotRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotRestoreRequest proto.InternalMessageInfo

func (m *SdkVolumeSnapshotRestoreRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeSnapshotRestoreRequest) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type SdkVolumeSnapshotRestoreResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotRestoreResponse) Reset()         { *m = SdkVolumeSnapshotRestoreResponse{} }
func (m *SdkVolumeSnapshotRestoreResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotRestoreResponse) ProtoMessage()    {}
func (*SdkVolumeSnapshotRestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{82}
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotRestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Merge(dst, src)
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.Size(m)
}
func (m *SdkVolumeSnapshotRestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotRestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotRestoreResponse proto.InternalMessageInfo

type SdkVolumeSnapshotEnumerateRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Labels from snapshot
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeSnapshotEnumerateRequest) Reset()         { *m = SdkVolumeSnapshotEnumerateRequest{} }
func (m *SdkVolumeSnapshotEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotEnumerateRequest) ProtoMessage()    {}
func (*SdkVolumeSnapshotEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{83}
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Merge(dst, src)
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.Size(m)
}
func (m *SdkVolumeSnapshotEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotEnumerateRequest proto.InternalMessageInfo

func (m *SdkVolumeSnapshotEnumerateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeSnapshotEnumerateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type SdkVolumeSnapshotEnumerateResponse struct {
	// List of immutable snapshots
	VolumeSnapshotIds    []string `protobuf:"bytes,1,rep,name=volume_snapshot_ids,json=volumeSnapshotIds" json:"volume_snapshot_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeSnapshotEnumerateResponse) Reset()         { *m = SdkVolumeSnapshotEnumerateResponse{} }
func (m *SdkVolumeSnapshotEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeSnapshotEnumerateResponse) ProtoMessage()    {}
func (*SdkVolumeSnapshotEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{84}
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeSnapshotEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Merge(dst, src)
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.Size(m)
}
func (m *SdkVolumeSnapshotEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeSnapshotEnumerateResponse proto.InternalMessageInfo

func (m *SdkVolumeSnapshotEnumerateResponse) GetVolumeSnapshotIds() []string {
	if m != nil {
		return m.VolumeSnapshotIds
	}
	return nil
}

type SdkClusterEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterEnumerateRequest) Reset()         { *m = SdkClusterEnumerateRequest{} }
func (m *SdkClusterEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterEnumerateRequest) ProtoMessage()    {}
func (*SdkClusterEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{85}
}
func (m *SdkClusterEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkClusterEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterEnumerateRequest.Merge(dst, src)
}
func (m *SdkClusterEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterEnumerateRequest.Size(m)
}
func (m *SdkClusterEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterEnumerateRequest proto.InternalMessageInfo

type SdkClusterEnumerateResponse struct {
	// Cluster information
	Cluster              *StorageCluster `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SdkClusterEnumerateResponse) Reset()         { *m = SdkClusterEnumerateResponse{} }
func (m *SdkClusterEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterEnumerateResponse) ProtoMessage()    {}
func (*SdkClusterEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{86}
}
func (m *SdkClusterEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkClusterEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterEnumerateResponse.Merge(dst, src)
}
func (m *SdkClusterEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterEnumerateResponse.Size(m)
}
func (m *SdkClusterEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterEnumerateResponse proto.InternalMessageInfo

func (m *SdkClusterEnumerateResponse) GetCluster() *StorageCluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type SdkClusterInspectRequest struct {
	// Id of node to inspect (required)
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterInspectRequest) Reset()         { *m = SdkClusterInspectRequest{} }
func (m *SdkClusterInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterInspectRequest) ProtoMessage()    {}
func (*SdkClusterInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{87}
}
func (m *SdkClusterInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterInspectRequest.Unmarshal(m, b)
}
func (m *SdkClusterInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterInspectRequest.Merge(dst, src)
}
func (m *SdkClusterInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterInspectRequest.Size(m)
}
func (m *SdkClusterInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterInspectRequest proto.InternalMessageInfo

func (m *SdkClusterInspectRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type SdkClusterInspectResponse struct {
	// Node information
	Node                 *StorageNode `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SdkClusterInspectResponse) Reset()         { *m = SdkClusterInspectResponse{} }
func (m *SdkClusterInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterInspectResponse) ProtoMessage()    {}
func (*SdkClusterInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{88}
}
func (m *SdkClusterInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterInspectResponse.Unmarshal(m, b)
}
func (m *SdkClusterInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterInspectResponse.Merge(dst, src)
}
func (m *SdkClusterInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterInspectResponse.Size(m)
}
func (m *SdkClusterInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterInspectResponse proto.InternalMessageInfo

func (m *SdkClusterInspectResponse) GetNode() *StorageNode {
	if m != nil {
		return m.Node
	}
	return nil
}

type SdkClusterAlertEnumerateRequest struct {
	// Start time of alerts (required)
	TimeStart *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time_start,json=timeStart" json:"time_start,omitempty"`
	// End time of alerts (required)
	TimeEnd *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time_end,json=timeEnd" json:"time_end,omitempty"`
	// Type of resource (required)
	Resource             ResourceType `protobuf:"varint,3,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SdkClusterAlertEnumerateRequest) Reset()         { *m = SdkClusterAlertEnumerateRequest{} }
func (m *SdkClusterAlertEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertEnumerateRequest) ProtoMessage()    {}
func (*SdkClusterAlertEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{89}
}
func (m *SdkClusterAlertEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkClusterAlertEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertEnumerateRequest.Merge(dst, src)
}
func (m *SdkClusterAlertEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertEnumerateRequest.Size(m)
}
func (m *SdkClusterAlertEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertEnumerateRequest proto.InternalMessageInfo

func (m *SdkClusterAlertEnumerateRequest) GetTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStart
	}
	return nil
}

func (m *SdkClusterAlertEnumerateRequest) GetTimeEnd() *timestamp.Timestamp {
	if m != nil {
		return m.TimeEnd
	}
	return nil
}

func (m *SdkClusterAlertEnumerateRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

type SdkClusterAlertEnumerateResponse struct {
	// Information on the alerts requested
	Alerts               []*Alert `protobuf:"bytes,1,rep,name=alerts" json:"alerts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertEnumerateResponse) Reset()         { *m = SdkClusterAlertEnumerateResponse{} }
func (m *SdkClusterAlertEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertEnumerateResponse) ProtoMessage()    {}
func (*SdkClusterAlertEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{90}
}
func (m *SdkClusterAlertEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkClusterAlertEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertEnumerateResponse.Merge(dst, src)
}
func (m *SdkClusterAlertEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertEnumerateResponse.Size(m)
}
func (m *SdkClusterAlertEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertEnumerateResponse proto.InternalMessageInfo

func (m *SdkClusterAlertEnumerateResponse) GetAlerts() []*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

type SdkClusterAlertClearRequest struct {
	// Type of resource (required)
	Resource ResourceType `protobuf:"varint,1,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Id of alert as returned by ClusterEnumerateAlertResponse (required)
	AlertId              int64    `protobuf:"varint,2,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertClearRequest) Reset()         { *m = SdkClusterAlertClearRequest{} }
func (m *SdkClusterAlertClearRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertClearRequest) ProtoMessage()    {}
func (*SdkClusterAlertClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{91}
}
func (m *SdkClusterAlertClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertClearRequest.Unmarshal(m, b)
}
func (m *SdkClusterAlertClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertClearRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertClearRequest.Merge(dst, src)
}
func (m *SdkClusterAlertClearRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertClearRequest.Size(m)
}
func (m *SdkClusterAlertClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertClearRequest proto.InternalMessageInfo

func (m *SdkClusterAlertClearRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *SdkClusterAlertClearRequest) GetAlertId() int64 {
	if m != nil {
		return m.AlertId
	}
	return 0
}

type SdkClusterAlertClearResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertClearResponse) Reset()         { *m = SdkClusterAlertClearResponse{} }
func (m *SdkClusterAlertClearResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertClearResponse) ProtoMessage()    {}
func (*SdkClusterAlertClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{92}
}
func (m *SdkClusterAlertClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertClearResponse.Unmarshal(m, b)
}
func (m *SdkClusterAlertClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertClearResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertClearResponse.Merge(dst, src)
}
func (m *SdkClusterAlertClearResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertClearResponse.Size(m)
}
func (m *SdkClusterAlertClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertClearResponse proto.InternalMessageInfo

type SdkClusterAlertDeleteRequest struct {
	// Type of resource (required)
	Resource ResourceType `protobuf:"varint,1,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Id of alert as returned by ClusterEnumerateAlertResponse (required)
	AlertId              int64    `protobuf:"varint,2,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertDeleteRequest) Reset()         { *m = SdkClusterAlertDeleteRequest{} }
func (m *SdkClusterAlertDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertDeleteRequest) ProtoMessage()    {}
func (*SdkClusterAlertDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{93}
}
func (m *SdkClusterAlertDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertDeleteRequest.Unmarshal(m, b)
}
func (m *SdkClusterAlertDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertDeleteRequest.Merge(dst, src)
}
func (m *SdkClusterAlertDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertDeleteRequest.Size(m)
}
func (m *SdkClusterAlertDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertDeleteRequest proto.InternalMessageInfo

func (m *SdkClusterAlertDeleteRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *SdkClusterAlertDeleteRequest) GetAlertId() int64 {
	if m != nil {
		return m.AlertId
	}
	return 0
}

type SdkClusterAlertDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkClusterAlertDeleteResponse) Reset()         { *m = SdkClusterAlertDeleteResponse{} }
func (m *SdkClusterAlertDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkClusterAlertDeleteResponse) ProtoMessage()    {}
func (*SdkClusterAlertDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{94}
}
func (m *SdkClusterAlertDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkClusterAlertDeleteResponse.Unmarshal(m, b)
}
func (m *SdkClusterAlertDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkClusterAlertDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkClusterAlertDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkClusterAlertDeleteResponse.Merge(dst, src)
}
func (m *SdkClusterAlertDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkClusterAlertDeleteResponse.Size(m)
}
func (m *SdkClusterAlertDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkClusterAlertDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkClusterAlertDeleteResponse proto.InternalMessageInfo

type SdkObjectstoreInspectRequest struct {
	// ObjecstoreID to query objestore status
	ObjectstoreId        string   `protobuf:"bytes,1,opt,name=objectstore_id,json=objectstoreId" json:"objectstore_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreInspectRequest) Reset()         { *m = SdkObjectstoreInspectRequest{} }
func (m *SdkObjectstoreInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreInspectRequest) ProtoMessage()    {}
func (*SdkObjectstoreInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{95}
}
func (m *SdkObjectstoreInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreInspectRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreInspectRequest.Merge(dst, src)
}
func (m *SdkObjectstoreInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreInspectRequest.Size(m)
}
func (m *SdkObjectstoreInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreInspectRequest proto.InternalMessageInfo

func (m *SdkObjectstoreInspectRequest) GetObjectstoreId() string {
	if m != nil {
		return m.ObjectstoreId
	}
	return ""
}

type SdkObjectstoreInspectResponse struct {
	// Objectstore status
	ObjectstoreStatus    *ObjectstoreInfo `protobuf:"bytes,1,opt,name=objectstore_status,json=objectstoreStatus" json:"objectstore_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SdkObjectstoreInspectResponse) Reset()         { *m = SdkObjectstoreInspectResponse{} }
func (m *SdkObjectstoreInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreInspectResponse) ProtoMessage()    {}
func (*SdkObjectstoreInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{96}
}
func (m *SdkObjectstoreInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreInspectResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreInspectResponse.Merge(dst, src)
}
func (m *SdkObjectstoreInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreInspectResponse.Size(m)
}
func (m *SdkObjectstoreInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreInspectResponse proto.InternalMessageInfo

func (m *SdkObjectstoreInspectResponse) GetObjectstoreStatus() *ObjectstoreInfo {
	if m != nil {
		return m.ObjectstoreStatus
	}
	return nil
}

type SdkObjectstoreCreateRequest struct {
	// Volume on which objectstore will be running
	VolumeName           string   `protobuf:"bytes,1,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreCreateRequest) Reset()         { *m = SdkObjectstoreCreateRequest{} }
func (m *SdkObjectstoreCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreCreateRequest) ProtoMessage()    {}
func (*SdkObjectstoreCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{97}
}
func (m *SdkObjectstoreCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreCreateRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreCreateRequest.Merge(dst, src)
}
func (m *SdkObjectstoreCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreCreateRequest.Size(m)
}
func (m *SdkObjectstoreCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreCreateRequest proto.InternalMessageInfo

func (m *SdkObjectstoreCreateRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

type SdkObjectstoreCreateResponse struct {
	// Created objecstore status
	ObjectstoreStatus    *ObjectstoreInfo `protobuf:"bytes,1,opt,name=objectstore_status,json=objectstoreStatus" json:"objectstore_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SdkObjectstoreCreateResponse) Reset()         { *m = SdkObjectstoreCreateResponse{} }
func (m *SdkObjectstoreCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreCreateResponse) ProtoMessage()    {}
func (*SdkObjectstoreCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{98}
}
func (m *SdkObjectstoreCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreCreateResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreCreateResponse.Merge(dst, src)
}
func (m *SdkObjectstoreCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreCreateResponse.Size(m)
}
func (m *SdkObjectstoreCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreCreateResponse proto.InternalMessageInfo

func (m *SdkObjectstoreCreateResponse) GetObjectstoreStatus() *ObjectstoreInfo {
	if m != nil {
		return m.ObjectstoreStatus
	}
	return nil
}

type SdkObjectstoreDeleteRequest struct {
	// Objectstore ID to delete
	ObjectstoreId        string   `protobuf:"bytes,1,opt,name=objectstore_id,json=objectstoreId" json:"objectstore_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreDeleteRequest) Reset()         { *m = SdkObjectstoreDeleteRequest{} }
func (m *SdkObjectstoreDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreDeleteRequest) ProtoMessage()    {}
func (*SdkObjectstoreDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{99}
}
func (m *SdkObjectstoreDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreDeleteRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreDeleteRequest.Merge(dst, src)
}
func (m *SdkObjectstoreDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreDeleteRequest.Size(m)
}
func (m *SdkObjectstoreDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreDeleteRequest proto.InternalMessageInfo

func (m *SdkObjectstoreDeleteRequest) GetObjectstoreId() string {
	if m != nil {
		return m.ObjectstoreId
	}
	return ""
}

type SdkObjectstoreDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreDeleteResponse) Reset()         { *m = SdkObjectstoreDeleteResponse{} }
func (m *SdkObjectstoreDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreDeleteResponse) ProtoMessage()    {}
func (*SdkObjectstoreDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{100}
}
func (m *SdkObjectstoreDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreDeleteResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreDeleteResponse.Merge(dst, src)
}
func (m *SdkObjectstoreDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreDeleteResponse.Size(m)
}
func (m *SdkObjectstoreDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreDeleteResponse proto.InternalMessageInfo

type SdkObjectstoreUpdateRequest struct {
	// Objectstore Id to update
	ObjectstoreId string `protobuf:"bytes,1,opt,name=objectstore_id,json=objectstoreId" json:"objectstore_id,omitempty"`
	// enable/disable objectstore
	Enable               bool     `protobuf:"varint,2,opt,name=enable" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreUpdateRequest) Reset()         { *m = SdkObjectstoreUpdateRequest{} }
func (m *SdkObjectstoreUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreUpdateRequest) ProtoMessage()    {}
func (*SdkObjectstoreUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{101}
}
func (m *SdkObjectstoreUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreUpdateRequest.Unmarshal(m, b)
}
func (m *SdkObjectstoreUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreUpdateRequest.Merge(dst, src)
}
func (m *SdkObjectstoreUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreUpdateRequest.Size(m)
}
func (m *SdkObjectstoreUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreUpdateRequest proto.InternalMessageInfo

func (m *SdkObjectstoreUpdateRequest) GetObjectstoreId() string {
	if m != nil {
		return m.ObjectstoreId
	}
	return ""
}

func (m *SdkObjectstoreUpdateRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type SdkObjectstoreUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkObjectstoreUpdateResponse) Reset()         { *m = SdkObjectstoreUpdateResponse{} }
func (m *SdkObjectstoreUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkObjectstoreUpdateResponse) ProtoMessage()    {}
func (*SdkObjectstoreUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{102}
}
func (m *SdkObjectstoreUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkObjectstoreUpdateResponse.Unmarshal(m, b)
}
func (m *SdkObjectstoreUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkObjectstoreUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkObjectstoreUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkObjectstoreUpdateResponse.Merge(dst, src)
}
func (m *SdkObjectstoreUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkObjectstoreUpdateResponse.Size(m)
}
func (m *SdkObjectstoreUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkObjectstoreUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkObjectstoreUpdateResponse proto.InternalMessageInfo

type SdkCloudBackupCreateRequest struct {
	// VolumeID of the volume for which cloudbackup is requested
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// CredentialUUID is cloud credential to be used for backup
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Full indicates if full backup is desired even though incremental is possible
	Full                 bool     `protobuf:"varint,3,opt,name=full" json:"full,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCreateRequest) Reset()         { *m = SdkCloudBackupCreateRequest{} }
func (m *SdkCloudBackupCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCreateRequest) ProtoMessage()    {}
func (*SdkCloudBackupCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{103}
}
func (m *SdkCloudBackupCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCreateRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCreateRequest.Merge(dst, src)
}
func (m *SdkCloudBackupCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCreateRequest.Size(m)
}
func (m *SdkCloudBackupCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCreateRequest proto.InternalMessageInfo

func (m *SdkCloudBackupCreateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkCloudBackupCreateRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupCreateRequest) GetFull() bool {
	if m != nil {
		return m.Full
	}
	return false
}

type SdkCloudBackupCreateResponse struct {
	// Id of the backup created
	BackupId             string   `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCreateResponse) Reset()         { *m = SdkCloudBackupCreateResponse{} }
func (m *SdkCloudBackupCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCreateResponse) ProtoMessage()    {}
func (*SdkCloudBackupCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{104}
}
func (m *SdkCloudBackupCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCreateResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCreateResponse.Merge(dst, src)
}
func (m *SdkCloudBackupCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCreateResponse.Size(m)
}
func (m *SdkCloudBackupCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCreateResponse proto.InternalMessageInfo

func (m *SdkCloudBackupCreateResponse) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

type SdkCloudBackupRestoreRequest struct {
	// Backup ID being restored
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// Optional volume Name of the new volume to be created
	// in the cluster for restoring the cloudbackup
	RestoreVolumeName string `protobuf:"bytes,2,opt,name=restore_volume_name,json=restoreVolumeName" json:"restore_volume_name,omitempty"`
	// The credential to be used for restore operation
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Optional for provisioning restore
	// volume (ResoreVolumeName should not be specified)
	NodeId               string   `protobuf:"bytes,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupRestoreRequest) Reset()         { *m = SdkCloudBackupRestoreRequest{} }
func (m *SdkCloudBackupRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupRestoreRequest) ProtoMessage()    {}
func (*SdkCloudBackupRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{105}
}
func (m *SdkCloudBackupRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupRestoreRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupRestoreRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupRestoreRequest.Merge(dst, src)
}
func (m *SdkCloudBackupRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupRestoreRequest.Size(m)
}
func (m *SdkCloudBackupRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupRestoreRequest proto.InternalMessageInfo

func (m *SdkCloudBackupRestoreRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupRestoreRequest) GetRestoreVolumeName() string {
	if m != nil {
		return m.RestoreVolumeName
	}
	return ""
}

func (m *SdkCloudBackupRestoreRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupRestoreRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type SdkCloudBackupRestoreResponse struct {
	// VolumeID to which the backup is being restored
	RestoreVolumeId      string   `protobuf:"bytes,1,opt,name=restore_volume_id,json=restoreVolumeId" json:"restore_volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupRestoreResponse) Reset()         { *m = SdkCloudBackupRestoreResponse{} }
func (m *SdkCloudBackupRestoreResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupRestoreResponse) ProtoMessage()    {}
func (*SdkCloudBackupRestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{106}
}
func (m *SdkCloudBackupRestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupRestoreResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupRestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupRestoreResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupRestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupRestoreResponse.Merge(dst, src)
}
func (m *SdkCloudBackupRestoreResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupRestoreResponse.Size(m)
}
func (m *SdkCloudBackupRestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupRestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupRestoreResponse proto.InternalMessageInfo

func (m *SdkCloudBackupRestoreResponse) GetRestoreVolumeId() string {
	if m != nil {
		return m.RestoreVolumeId
	}
	return ""
}

type SdkCloudBackupDeleteRequest struct {
	// ID is the ID of the cloud backup
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Force Delete cloudbackup even if there are dependencies
	Force                bool     `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteRequest) Reset()         { *m = SdkCloudBackupDeleteRequest{} }
func (m *SdkCloudBackupDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteRequest) ProtoMessage()    {}
func (*SdkCloudBackupDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{107}
}
func (m *SdkCloudBackupDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteRequest.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteRequest.Size(m)
}
func (m *SdkCloudBackupDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteRequest proto.InternalMessageInfo

func (m *SdkCloudBackupDeleteRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupDeleteRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupDeleteRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type SdkCloudBackupDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteResponse) Reset()         { *m = SdkCloudBackupDeleteResponse{} }
func (m *SdkCloudBackupDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteResponse) ProtoMessage()    {}
func (*SdkCloudBackupDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{108}
}
func (m *SdkCloudBackupDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteResponse.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteResponse.Size(m)
}
func (m *SdkCloudBackupDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteResponse proto.InternalMessageInfo

type SdkCloudBackupDeleteAllRequest struct {
	// id of the volume for the request
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid       string   `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteAllRequest) Reset()         { *m = SdkCloudBackupDeleteAllRequest{} }
func (m *SdkCloudBackupDeleteAllRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteAllRequest) ProtoMessage()    {}
func (*SdkCloudBackupDeleteAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{109}
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteAllRequest.Size(m)
}
func (m *SdkCloudBackupDeleteAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteAllRequest proto.InternalMessageInfo

func (m *SdkCloudBackupDeleteAllRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupDeleteAllRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

type SdkCloudBackupDeleteAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupDeleteAllResponse) Reset()         { *m = SdkCloudBackupDeleteAllResponse{} }
func (m *SdkCloudBackupDeleteAllResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupDeleteAllResponse) ProtoMessage()    {}
func (*SdkCloudBackupDeleteAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{110}
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupDeleteAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Merge(dst, src)
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupDeleteAllResponse.Size(m)
}
func (m *SdkCloudBackupDeleteAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupDeleteAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupDeleteAllResponse proto.InternalMessageInfo

type SdkCloudBackupEnumerateRequest struct {
	// Optional source id of the volume for the request
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// ClusterID is the optional clusterID for the request
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// All if set to true, backups for all clusters in the cloud are processed
	All                  bool     `protobuf:"varint,4,opt,name=all" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupEnumerateRequest) Reset()         { *m = SdkCloudBackupEnumerateRequest{} }
func (m *SdkCloudBackupEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupEnumerateRequest) ProtoMessage()    {}
func (*SdkCloudBackupEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{111}
}
func (m *SdkCloudBackupEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupEnumerateRequest.Merge(dst, src)
}
func (m *SdkCloudBackupEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupEnumerateRequest.Size(m)
}
func (m *SdkCloudBackupEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupEnumerateRequest proto.InternalMessageInfo

func (m *SdkCloudBackupEnumerateRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupEnumerateRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *SdkCloudBackupEnumerateRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *SdkCloudBackupEnumerateRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type SdkCloudBackupInfo struct {
	// ID is the ID of the cloud backup
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Source volumeID of the backup
	SrcVolumeId string `protobuf:"bytes,2,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// Name of the sourceVolume of the backup
	SrcVolumeName string `protobuf:"bytes,3,opt,name=src_volume_name,json=srcVolumeName" json:"src_volume_name,omitempty"`
	// Timestamp is the timestamp at which the source volume
	// was backed up to cloud
	Timestamp *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	// Metadata associated with the backup
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Status indicates the status of the backup
	Status               SdkCloudBackupStatusType `protobuf:"varint,6,opt,name=status,enum=openstorage.api.SdkCloudBackupStatusType" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SdkCloudBackupInfo) Reset()         { *m = SdkCloudBackupInfo{} }
func (m *SdkCloudBackupInfo) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupInfo) ProtoMessage()    {}
func (*SdkCloudBackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{112}
}
func (m *SdkCloudBackupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupInfo.Unmarshal(m, b)
}
func (m *SdkCloudBackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupInfo.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupInfo.Merge(dst, src)
}
func (m *SdkCloudBackupInfo) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupInfo.Size(m)
}
func (m *SdkCloudBackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupInfo proto.InternalMessageInfo

func (m *SdkCloudBackupInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SdkCloudBackupInfo) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupInfo) GetSrcVolumeName() string {
	if m != nil {
		return m.SrcVolumeName
	}
	return ""
}

func (m *SdkCloudBackupInfo) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SdkCloudBackupInfo) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SdkCloudBackupInfo) GetStatus() SdkCloudBackupStatusType {
	if m != nil {
		return m.Status
	}
	return SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown
}

type SdkCloudBackupEnumerateResponse struct {
	BackupIds            []string `protobuf:"bytes,1,rep,name=backup_ids,json=backupIds" json:"backup_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupEnumerateResponse) Reset()         { *m = SdkCloudBackupEnumerateResponse{} }
func (m *SdkCloudBackupEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupEnumerateResponse) ProtoMessage()    {}
func (*SdkCloudBackupEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{113}
}
func (m *SdkCloudBackupEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupEnumerateResponse.Merge(dst, src)
}
func (m *SdkCloudBackupEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupEnumerateResponse.Size(m)
}
func (m *SdkCloudBackupEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupEnumerateResponse proto.InternalMessageInfo

func (m *SdkCloudBackupEnumerateResponse) GetBackupIds() []string {
	if m != nil {
		return m.BackupIds
	}
	return nil
}

type SdkCloudBackupStatus struct {
	// ID is the ID for the operation
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// OpType indicates if this is a backup or restore
	Optype SdkCloudBackupOpType `protobuf:"varint,2,opt,name=optype,enum=openstorage.api.SdkCloudBackupOpType" json:"optype,omitempty"`
	// State indicates if the op is currently active/done/failed
	Status SdkCloudBackupStatusType `protobuf:"varint,3,opt,name=status,enum=openstorage.api.SdkCloudBackupStatusType" json:"status,omitempty"`
	// BytesDone indicates total Bytes uploaded/downloaded
	BytesDone uint64 `protobuf:"varint,4,opt,name=bytes_done,json=bytesDone" json:"bytes_done,omitempty"`
	// StartTime indicates Op's start time
	StartTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// CompletedTime indicates Op's completed time
	CompletedTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=completed_time,json=completedTime" json:"completed_time,omitempty"`
	// NodeID is the ID of the node where this Op is active
	NodeId               string   `protobuf:"bytes,7,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupStatus) Reset()         { *m = SdkCloudBackupStatus{} }
func (m *SdkCloudBackupStatus) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStatus) ProtoMessage()    {}
func (*SdkCloudBackupStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{114}
}
func (m *SdkCloudBackupStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStatus.Unmarshal(m, b)
}
func (m *SdkCloudBackupStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStatus.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStatus.Merge(dst, src)
}
func (m *SdkCloudBackupStatus) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStatus.Size(m)
}
func (m *SdkCloudBackupStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStatus proto.InternalMessageInfo

func (m *SdkCloudBackupStatus) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupStatus) GetOptype() SdkCloudBackupOpType {
	if m != nil {
		return m.Optype
	}
	return SdkCloudBackupOpType_SdkCloudBackupOpTypeUnknown
}

func (m *SdkCloudBackupStatus) GetStatus() SdkCloudBackupStatusType {
	if m != nil {
		return m.Status
	}
	return SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown
}

func (m *SdkCloudBackupStatus) GetBytesDone() uint64 {
	if m != nil {
		return m.BytesDone
	}
	return 0
}

func (m *SdkCloudBackupStatus) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *SdkCloudBackupStatus) GetCompletedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CompletedTime
	}
	return nil
}

func (m *SdkCloudBackupStatus) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type SdkCloudBackupStatusRequest struct {
	// SrcVolumeID optional volumeID to list status of backup/restore
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// Local indicates if only those backups/restores that are
	// active on current node must be returned
	Local                bool     `protobuf:"varint,2,opt,name=local" json:"local,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupStatusRequest) Reset()         { *m = SdkCloudBackupStatusRequest{} }
func (m *SdkCloudBackupStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStatusRequest) ProtoMessage()    {}
func (*SdkCloudBackupStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{115}
}
func (m *SdkCloudBackupStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStatusRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStatusRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStatusRequest.Merge(dst, src)
}
func (m *SdkCloudBackupStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStatusRequest.Size(m)
}
func (m *SdkCloudBackupStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStatusRequest proto.InternalMessageInfo

func (m *SdkCloudBackupStatusRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupStatusRequest) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

type SdkCloudBackupStatusResponse struct {
	// statuses is list of currently active/failed/done backup/restores
	Statuses             map[string]*SdkCloudBackupStatus `protobuf:"bytes,1,rep,name=statuses" json:"statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *SdkCloudBackupStatusResponse) Reset()         { *m = SdkCloudBackupStatusResponse{} }
func (m *SdkCloudBackupStatusResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStatusResponse) ProtoMessage()    {}
func (*SdkCloudBackupStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{116}
}
func (m *SdkCloudBackupStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStatusResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStatusResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStatusResponse.Merge(dst, src)
}
func (m *SdkCloudBackupStatusResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStatusResponse.Size(m)
}
func (m *SdkCloudBackupStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStatusResponse proto.InternalMessageInfo

func (m *SdkCloudBackupStatusResponse) GetStatuses() map[string]*SdkCloudBackupStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type SdkCloudBackupCatalogRequest struct {
	// Id of the backup
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId" json:"backup_id,omitempty"`
	// is the credential for cloud
	CredentialUuid       string   `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCatalogRequest) Reset()         { *m = SdkCloudBackupCatalogRequest{} }
func (m *SdkCloudBackupCatalogRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCatalogRequest) ProtoMessage()    {}
func (*SdkCloudBackupCatalogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{117}
}
func (m *SdkCloudBackupCatalogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCatalogRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupCatalogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCatalogRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCatalogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCatalogRequest.Merge(dst, src)
}
func (m *SdkCloudBackupCatalogRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCatalogRequest.Size(m)
}
func (m *SdkCloudBackupCatalogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCatalogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCatalogRequest proto.InternalMessageInfo

func (m *SdkCloudBackupCatalogRequest) GetBackupId() string {
	if m != nil {
		return m.BackupId
	}
	return ""
}

func (m *SdkCloudBackupCatalogRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

type SdkCloudBackupCatalogResponse struct {
	// Contents is listing of backup contents
	Contents             []string `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupCatalogResponse) Reset()         { *m = SdkCloudBackupCatalogResponse{} }
func (m *SdkCloudBackupCatalogResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupCatalogResponse) ProtoMessage()    {}
func (*SdkCloudBackupCatalogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{118}
}
func (m *SdkCloudBackupCatalogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupCatalogResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupCatalogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupCatalogResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupCatalogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupCatalogResponse.Merge(dst, src)
}
func (m *SdkCloudBackupCatalogResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupCatalogResponse.Size(m)
}
func (m *SdkCloudBackupCatalogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupCatalogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupCatalogResponse proto.InternalMessageInfo

func (m *SdkCloudBackupCatalogResponse) GetContents() []string {
	if m != nil {
		return m.Contents
	}
	return nil
}

type SdkCloudBackupHistoryItem struct {
	// SrcVolumeID is volume ID which was backedup
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// TimeStamp is the time at which either backup completed/failed
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	// Status indicates whether backup was completed/failed
	Status               SdkCloudBackupStatusType `protobuf:"varint,3,opt,name=status,enum=openstorage.api.SdkCloudBackupStatusType" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SdkCloudBackupHistoryItem) Reset()         { *m = SdkCloudBackupHistoryItem{} }
func (m *SdkCloudBackupHistoryItem) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupHistoryItem) ProtoMessage()    {}
func (*SdkCloudBackupHistoryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{119}
}
func (m *SdkCloudBackupHistoryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupHistoryItem.Unmarshal(m, b)
}
func (m *SdkCloudBackupHistoryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupHistoryItem.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupHistoryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupHistoryItem.Merge(dst, src)
}
func (m *SdkCloudBackupHistoryItem) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupHistoryItem.Size(m)
}
func (m *SdkCloudBackupHistoryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupHistoryItem.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupHistoryItem proto.InternalMessageInfo

func (m *SdkCloudBackupHistoryItem) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupHistoryItem) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SdkCloudBackupHistoryItem) GetStatus() SdkCloudBackupStatusType {
	if m != nil {
		return m.Status
	}
	return SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown
}

type SdkCloudBackupHistoryRequest struct {
	// volumeID for which history of backup/restore is being requested
	// (optional) If not provided, it will return the history for all volumes.
	SrcVolumeId          string   `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupHistoryRequest) Reset()         { *m = SdkCloudBackupHistoryRequest{} }
func (m *SdkCloudBackupHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupHistoryRequest) ProtoMessage()    {}
func (*SdkCloudBackupHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{120}
}
func (m *SdkCloudBackupHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupHistoryRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupHistoryRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupHistoryRequest.Merge(dst, src)
}
func (m *SdkCloudBackupHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupHistoryRequest.Size(m)
}
func (m *SdkCloudBackupHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupHistoryRequest proto.InternalMessageInfo

func (m *SdkCloudBackupHistoryRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

type SdkCloudBackupHistoryResponse struct {
	// HistoryList is list of past backup/restores in the cluster
	HistoryList          []*SdkCloudBackupHistoryItem `protobuf:"bytes,1,rep,name=history_list,json=historyList" json:"history_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SdkCloudBackupHistoryResponse) Reset()         { *m = SdkCloudBackupHistoryResponse{} }
func (m *SdkCloudBackupHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupHistoryResponse) ProtoMessage()    {}
func (*SdkCloudBackupHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{121}
}
func (m *SdkCloudBackupHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupHistoryResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupHistoryResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupHistoryResponse.Merge(dst, src)
}
func (m *SdkCloudBackupHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupHistoryResponse.Size(m)
}
func (m *SdkCloudBackupHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupHistoryResponse proto.InternalMessageInfo

func (m *SdkCloudBackupHistoryResponse) GetHistoryList() []*SdkCloudBackupHistoryItem {
	if m != nil {
		return m.HistoryList
	}
	return nil
}

type SdkCloudBackupStateChangeRequest struct {
	// SrcVolumeID is volume ID on which backup/restore
	// state change is being requested
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// RequestedState is desired state of the op
	// can be pause/resume/stop
	RequestedState       SdkCloudBackupRequestedState `protobuf:"varint,2,opt,name=requested_state,json=requestedState,enum=openstorage.api.SdkCloudBackupRequestedState" json:"requested_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SdkCloudBackupStateChangeRequest) Reset()         { *m = SdkCloudBackupStateChangeRequest{} }
func (m *SdkCloudBackupStateChangeRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStateChangeRequest) ProtoMessage()    {}
func (*SdkCloudBackupStateChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{122}
}
func (m *SdkCloudBackupStateChangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStateChangeRequest.Unmarshal(m, b)
}
func (m *SdkCloudBackupStateChangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStateChangeRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStateChangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStateChangeRequest.Merge(dst, src)
}
func (m *SdkCloudBackupStateChangeRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStateChangeRequest.Size(m)
}
func (m *SdkCloudBackupStateChangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStateChangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStateChangeRequest proto.InternalMessageInfo

func (m *SdkCloudBackupStateChangeRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *SdkCloudBackupStateChangeRequest) GetRequestedState() SdkCloudBackupRequestedState {
	if m != nil {
		return m.RequestedState
	}
	return SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateUnknown
}

type SdkCloudBackupStateChangeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCloudBackupStateChangeResponse) Reset()         { *m = SdkCloudBackupStateChangeResponse{} }
func (m *SdkCloudBackupStateChangeResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCloudBackupStateChangeResponse) ProtoMessage()    {}
func (*SdkCloudBackupStateChangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_feccc90d7cea2234, []int{123}
}
func (m *SdkCloudBackupStateChangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCloudBackupStateChangeResponse.Unmarshal(m, b)
}
func (m *SdkCloudBackupStateChangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCloudBackupStateChangeResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCloudBackupStateChangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCloudBackupStateChangeResponse.Merge(dst, src)
}
func (m *SdkCloudBackupStateChangeResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCloudBackupStateChangeResponse.Size(m)
}
func (m *SdkCloudBackupStateChangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCloudBackupStateChangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCloudBackupStateChangeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*StorageResource)(nil), "openstorage.api.StorageResource")
	proto.RegisterType((*StoragePool)(nil), "openstorage.api.StoragePool")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.StoragePool.LabelsEntry")
	proto.RegisterType((*VolumeLocator)(nil), "openstorage.api.VolumeLocator")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeLocator.VolumeLabelsEntry")
	proto.RegisterType((*Source)(nil), "openstorage.api.Source")
	proto.RegisterType((*Group)(nil), "openstorage.api.Group")
	proto.RegisterType((*VolumeSpec)(nil), "openstorage.api.VolumeSpec")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSpec.VolumeLabelsEntry")
	proto.RegisterType((*ReplicaSet)(nil), "openstorage.api.ReplicaSet")
	proto.RegisterType((*RuntimeStateMap)(nil), "openstorage.api.RuntimeStateMap")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.RuntimeStateMap.RuntimeStateEntry")
	proto.RegisterType((*Volume)(nil), "openstorage.api.Volume")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.Volume.AttachInfoEntry")
	proto.RegisterType((*Stats)(nil), "openstorage.api.Stats")
	proto.RegisterType((*Alert)(nil), "openstorage.api.Alert")
	proto.RegisterType((*Alerts)(nil), "openstorage.api.Alerts")
	proto.RegisterType((*ObjectstoreInfo)(nil), "openstorage.api.ObjectstoreInfo")
	proto.RegisterType((*VolumeCreateRequest)(nil), "openstorage.api.VolumeCreateRequest")
	proto.RegisterType((*VolumeResponse)(nil), "openstorage.api.VolumeResponse")
	proto.RegisterType((*VolumeCreateResponse)(nil), "openstorage.api.VolumeCreateResponse")
	proto.RegisterType((*VolumeStateAction)(nil), "openstorage.api.VolumeStateAction")
	proto.RegisterType((*VolumeSetRequest)(nil), "openstorage.api.VolumeSetRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSetRequest.OptionsEntry")
	proto.RegisterType((*VolumeSetResponse)(nil), "openstorage.api.VolumeSetResponse")
	proto.RegisterType((*SnapCreateRequest)(nil), "openstorage.api.SnapCreateRequest")
	proto.RegisterType((*SnapCreateResponse)(nil), "openstorage.api.SnapCreateResponse")
	proto.RegisterType((*VolumeInfo)(nil), "openstorage.api.VolumeInfo")
	proto.RegisterType((*VolumeConsumer)(nil), "openstorage.api.VolumeConsumer")
	proto.RegisterType((*GraphDriverChanges)(nil), "openstorage.api.GraphDriverChanges")
	proto.RegisterType((*ClusterResponse)(nil), "openstorage.api.ClusterResponse")
	proto.RegisterType((*ActiveRequest)(nil), "openstorage.api.ActiveRequest")
	proto.RegisterMapType((map[int64]string)(nil), "openstorage.api.ActiveRequest.ReqestKVEntry")
	proto.RegisterType((*ActiveRequests)(nil), "openstorage.api.ActiveRequests")
	proto.RegisterType((*GroupSnapCreateRequest)(nil), "openstorage.api.GroupSnapCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.GroupSnapCreateRequest.LabelsEntry")
	proto.RegisterType((*GroupSnapCreateResponse)(nil), "openstorage.api.GroupSnapCreateResponse")
	proto.RegisterMapType((map[string]*SnapCreateResponse)(nil), "openstorage.api.GroupSnapCreateResponse.SnapshotsEntry")
	proto.RegisterType((*StorageNode)(nil), "openstorage.api.StorageNode")
	proto.RegisterMapType((map[string]*StorageResource)(nil), "openstorage.api.StorageNode.DisksEntry")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.StorageNode.NodeLabelsEntry")
	proto.RegisterType((*StorageCluster)(nil), "openstorage.api.StorageCluster")
	proto.RegisterType((*SdkSchedulePolicyCreateRequest)(nil), "openstorage.api.SdkSchedulePolicyCreateRequest")
	proto.RegisterType((*SdkSchedulePolicyCreateResponse)(nil), "openstorage.api.SdkSchedulePolicyCreateResponse")
	proto.RegisterType((*SdkSchedulePolicyUpdateRequest)(nil), "openstorage.api.SdkSchedulePolicyUpdateRequest")
	proto.RegisterType((*SdkSchedulePolicyUpdateResponse)(nil), "openstorage.api.SdkSchedulePolicyUpdateResponse")
	proto.RegisterType((*SdkSchedulePolicyEnumerateRequest)(nil), "openstorage.api.SdkSchedulePolicyEnumerateRequest")
	proto.RegisterType((*SdkSchedulePolicyEnumerateResponse)(nil), "openstorage.api.SdkSchedulePolicyEnumerateResponse")
	proto.RegisterType((*SdkSchedulePolicyInspectRequest)(nil), "openstorage.api.SdkSchedulePolicyInspectRequest")
	proto.RegisterType((*SdkSchedulePolicyInspectResponse)(nil), "openstorage.api.SdkSchedulePolicyInspectResponse")
	proto.RegisterType((*SdkSchedulePolicyDeleteRequest)(nil), "openstorage.api.SdkSchedulePolicyDeleteRequest")
	proto.RegisterType((*SdkSchedulePolicyDeleteResponse)(nil), "openstorage.api.SdkSchedulePolicyDeleteResponse")
	proto.RegisterType((*SdkSchedulePolicy)(nil), "openstorage.api.SdkSchedulePolicy")
	proto.RegisterType((*SdkCredentialCreateAzureRequest)(nil), "openstorage.api.SdkCredentialCreateAzureRequest")
	proto.RegisterType((*SdkCredentialCreateAzureResponse)(nil), "openstorage.api.SdkCredentialCreateAzureResponse")
	proto.RegisterType((*SdkCredentialCreateGoogleRequest)(nil), "openstorage.api.SdkCredentialCreateGoogleRequest")
	proto.RegisterType((*SdkCredentialCreateGoogleResponse)(nil), "openstorage.api.SdkCredentialCreateGoogleResponse")
	proto.RegisterType((*SdkCredentialCreateAWSRequest)(nil), "openstorage.api.SdkCredentialCreateAWSRequest")
	proto.RegisterType((*SdkCredentialCreateAWSResponse)(nil), "openstorage.api.SdkCredentialCreateAWSResponse")
	proto.RegisterType((*S3Credential)(nil), "openstorage.api.S3Credential")
	proto.RegisterType((*AzureCredential)(nil), "openstorage.api.AzureCredential")
	proto.RegisterType((*GoogleCredential)(nil), "openstorage.api.GoogleCredential")
	proto.RegisterType((*SdkCredentialEnumerateAWSRequest)(nil), "openstorage.api.SdkCredentialEnumerateAWSRequest")
	proto.RegisterType((*SdkCredentialEnumerateAWSResponse)(nil), "openstorage.api.SdkCredentialEnumerateAWSResponse")
	proto.RegisterType((*SdkCredentialEnumerateAzureRequest)(nil), "openstorage.api.SdkCredentialEnumerateAzureRequest")
	proto.RegisterType((*SdkCredentialEnumerateAzureResponse)(nil), "openstorage.api.SdkCredentialEnumerateAzureResponse")
	proto.RegisterType((*SdkCredentialEnumerateGoogleRequest)(nil), "openstorage.api.SdkCredentialEnumerateGoogleRequest")
	proto.RegisterType((*SdkCredentialEnumerateGoogleResponse)(nil), "openstorage.api.SdkCredentialEnumerateGoogleResponse")
	proto.RegisterType((*SdkCredentialDeleteRequest)(nil), "openstorage.api.SdkCredentialDeleteRequest")
	proto.RegisterType((*SdkCredentialDeleteResponse)(nil), "openstorage.api.SdkCredentialDeleteResponse")
	proto.RegisterType((*SdkCredentialValidateRequest)(nil), "openstorage.api.SdkCredentialValidateRequest")
	proto.RegisterType((*SdkCredentialValidateResponse)(nil), "openstorage.api.SdkCredentialValidateResponse")
	proto.RegisterType((*SdkVolumeMountRequest)(nil), "openstorage.api.SdkVolumeMountRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeMountRequest.OptionsEntry")
	proto.RegisterType((*SdkVolumeMountResponse)(nil), "openstorage.api.SdkVolumeMountResponse")
	proto.RegisterType((*SdkVolumeUnmountRequest)(nil), "openstorage.api.SdkVolumeUnmountRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeUnmountRequest.OptionsEntry")
	proto.RegisterType((*SdkVolumeUnmountResponse)(nil), "openstorage.api.SdkVolumeUnmountResponse")
	proto.RegisterType((*SdkVolumeAttachRequest)(nil), "openstorage.api.SdkVolumeAttachRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeAttachRequest.OptionsEntry")
	proto.RegisterType((*SdkVolumeAttachResponse)(nil), "openstorage.api.SdkVolumeAttachResponse")
	proto.RegisterType((*SdkVolumeDetachRequest)(nil), "openstorage.api.SdkVolumeDetachRequest")
	proto.RegisterType((*SdkVolumeDetachResponse)(nil), "openstorage.api.SdkVolumeDetachResponse")
	proto.RegisterType((*SdkVolumeCreateRequest)(nil), "openstorage.api.SdkVolumeCreateRequest")
	proto.RegisterType((*SdkVolumeCreateResponse)(nil), "openstorage.api.SdkVolumeCreateResponse")
	proto.RegisterType((*SdkVolumeCloneRequest)(nil), "openstorage.api.SdkVolumeCloneRequest")
	proto.RegisterType((*SdkVolumeCloneResponse)(nil), "openstorage.api.SdkVolumeCloneResponse")
	proto.RegisterType((*SdkVolumeDeleteRequest)(nil), "openstorage.api.SdkVolumeDeleteRequest")
	proto.RegisterType((*SdkVolumeDeleteResponse)(nil), "openstorage.api.SdkVolumeDeleteResponse")
	proto.RegisterType((*SdkVolumeInspectRequest)(nil), "openstorage.api.SdkVolumeInspectRequest")
	proto.RegisterType((*SdkVolumeInspectResponse)(nil), "openstorage.api.SdkVolumeInspectResponse")
	proto.RegisterType((*SdkVolumeEnumerateRequest)(nil), "openstorage.api.SdkVolumeEnumerateRequest")
	proto.RegisterType((*SdkVolumeEnumerateResponse)(nil), "openstorage.api.SdkVolumeEnumerateResponse")
	proto.RegisterType((*SdkVolumeSnapshotCreateRequest)(nil), "openstorage.api.SdkVolumeSnapshotCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeSnapshotCreateRequest.LabelsEntry")
	proto.RegisterType((*SdkVolumeSnapshotCreateResponse)(nil), "openstorage.api.SdkVolumeSnapshotCreateResponse")
	proto.RegisterType((*SdkVolumeSnapshotRestoreRequest)(nil), "openstorage.api.SdkVolumeSnapshotRestoreRequest")
	proto.RegisterType((*SdkVolumeSnapshotRestoreResponse)(nil), "openstorage.api.SdkVolumeSnapshotRestoreResponse")
	proto.RegisterType((*SdkVolumeSnapshotEnumerateRequest)(nil), "openstorage.api.SdkVolumeSnapshotEnumerateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkVolumeSnapshotEnumerateRequest.LabelsEntry")
	proto.RegisterType((*SdkVolumeSnapshotEnumerateResponse)(nil), "openstorage.api.SdkVolumeSnapshotEnumerateResponse")
	proto.RegisterType((*SdkClusterEnumerateRequest)(nil), "openstorage.api.SdkClusterEnumerateRequest")
	proto.RegisterType((*SdkClusterEnumerateResponse)(nil), "openstorage.api.SdkClusterEnumerateResponse")
	proto.RegisterType((*SdkClusterInspectRequest)(nil), "openstorage.api.SdkClusterInspectRequest")
	proto.RegisterType((*SdkClusterInspectResponse)(nil), "openstorage.api.SdkClusterInspectResponse")
	proto.RegisterType((*SdkClusterAlertEnumerateRequest)(nil), "openstorage.api.SdkClusterAlertEnumerateRequest")
	proto.RegisterType((*SdkClusterAlertEnumerateResponse)(nil), "openstorage.api.SdkClusterAlertEnumerateResponse")
	proto.RegisterType((*SdkClusterAlertClearRequest)(nil), "openstorage.api.SdkClusterAlertClearRequest")
	proto.RegisterType((*SdkClusterAlertClearResponse)(nil), "openstorage.api.SdkClusterAlertClearResponse")
	proto.RegisterType((*SdkClusterAlertDeleteRequest)(nil), "openstorage.api.SdkClusterAlertDeleteRequest")
	proto.RegisterType((*SdkClusterAlertDeleteResponse)(nil), "openstorage.api.SdkClusterAlertDeleteResponse")
	proto.RegisterType((*SdkObjectstoreInspectRequest)(nil), "openstorage.api.SdkObjectstoreInspectRequest")
	proto.RegisterType((*SdkObjectstoreInspectResponse)(nil), "openstorage.api.SdkObjectstoreInspectResponse")
	proto.RegisterType((*SdkObjectstoreCreateRequest)(nil), "openstorage.api.SdkObjectstoreCreateRequest")
	proto.RegisterType((*SdkObjectstoreCreateResponse)(nil), "openstorage.api.SdkObjectstoreCreateResponse")
	proto.RegisterType((*SdkObjectstoreDeleteRequest)(nil), "openstorage.api.SdkObjectstoreDeleteRequest")
	proto.RegisterType((*SdkObjectstoreDeleteResponse)(nil), "openstorage.api.SdkObjectstoreDeleteResponse")
	proto.RegisterType((*SdkObjectstoreUpdateRequest)(nil), "openstorage.api.SdkObjectstoreUpdateRequest")
	proto.RegisterType((*SdkObjectstoreUpdateResponse)(nil), "openstorage.api.SdkObjectstoreUpdateResponse")
	proto.RegisterType((*SdkCloudBackupCreateRequest)(nil), "openstorage.api.SdkCloudBackupCreateRequest")
	proto.RegisterType((*SdkCloudBackupCreateResponse)(nil), "openstorage.api.SdkCloudBackupCreateResponse")
	proto.RegisterType((*SdkCloudBackupRestoreRequest)(nil), "openstorage.api.SdkCloudBackupRestoreRequest")
	proto.RegisterType((*SdkCloudBackupRestoreResponse)(nil), "openstorage.api.SdkCloudBackupRestoreResponse")
	proto.RegisterType((*SdkCloudBackupDeleteRequest)(nil), "openstorage.api.SdkCloudBackupDeleteRequest")
	proto.RegisterType((*SdkCloudBackupDeleteResponse)(nil), "openstorage.api.SdkCloudBackupDeleteResponse")
	proto.RegisterType((*SdkCloudBackupDeleteAllRequest)(nil), "openstorage.api.SdkCloudBackupDeleteAllRequest")
	proto.RegisterType((*SdkCloudBackupDeleteAllResponse)(nil), "openstorage.api.SdkCloudBackupDeleteAllResponse")
	proto.RegisterType((*SdkCloudBackupEnumerateRequest)(nil), "openstorage.api.SdkCloudBackupEnumerateRequest")
	proto.RegisterType((*SdkCloudBackupInfo)(nil), "openstorage.api.SdkCloudBackupInfo")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.SdkCloudBackupInfo.MetadataEntry")
	proto.RegisterType((*SdkCloudBackupEnumerateResponse)(nil), "openstorage.api.SdkCloudBackupEnumerateResponse")
	proto.RegisterType((*SdkCloudBackupStatus)(nil), "openstorage.api.SdkCloudBackupStatus")
	proto.RegisterType((*SdkCloudBackupStatusRequest)(nil), "openstorage.api.SdkCloudBackupStatusRequest")
	proto.RegisterType((*SdkCloudBackupStatusResponse)(nil), "openstorage.api.SdkCloudBackupStatusResponse")
	proto.RegisterMapType((map[string]*SdkCloudBackupStatus)(nil), "openstorage.api.SdkCloudBackupStatusResponse.StatusesEntry")
	proto.RegisterType((*SdkCloudBackupCatalogRequest)(nil), "openstorage.api.SdkCloudBackupCatalogRequest")
	proto.RegisterType((*SdkCloudBackupCatalogResponse)(nil), "openstorage.api.SdkCloudBackupCatalogResponse")
	proto.RegisterType((*SdkCloudBackupHistoryItem)(nil), "openstorage.api.SdkCloudBackupHistoryItem")
	proto.RegisterType((*SdkCloudBackupHistoryRequest)(nil), "openstorage.api.SdkCloudBackupHistoryRequest")
	proto.RegisterType((*SdkCloudBackupHistoryResponse)(nil), "openstorage.api.SdkCloudBackupHistoryResponse")
	proto.RegisterType((*SdkCloudBackupStateChangeRequest)(nil), "openstorage.api.SdkCloudBackupStateChangeRequest")
	proto.RegisterType((*SdkCloudBackupStateChangeResponse)(nil), "openstorage.api.SdkCloudBackupStateChangeResponse")
	proto.RegisterEnum("openstorage.api.Status", Status_name, Status_value)
	proto.RegisterEnum("openstorage.api.DriverType", DriverType_name, DriverType_value)
	proto.RegisterEnum("openstorage.api.FSType", FSType_name, FSType_value)
	proto.RegisterEnum("openstorage.api.GraphDriverChangeType", GraphDriverChangeType_name, GraphDriverChangeType_value)
	proto.RegisterEnum("openstorage.api.SeverityType", SeverityType_name, SeverityType_value)
	proto.RegisterEnum("openstorage.api.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterEnum("openstorage.api.AlertActionType", AlertActionType_name, AlertActionType_value)
	proto.RegisterEnum("openstorage.api.VolumeActionParam", VolumeActionParam_name, VolumeActionParam_value)
	proto.RegisterEnum("openstorage.api.CosType", CosType_name, CosType_value)
	proto.RegisterEnum("openstorage.api.IoProfile", IoProfile_name, IoProfile_value)
	proto.RegisterEnum("openstorage.api.VolumeState", VolumeState_name, VolumeState_value)
	proto.RegisterEnum("openstorage.api.VolumeStatus", VolumeStatus_name, VolumeStatus_value)
	proto.RegisterEnum("openstorage.api.StorageMedium", StorageMedium_name, StorageMedium_value)
	proto.RegisterEnum("openstorage.api.ClusterNotify", ClusterNotify_name, ClusterNotify_value)
	proto.RegisterEnum("openstorage.api.AttachState", AttachState_name, AttachState_value)
	proto.RegisterEnum("openstorage.api.OperationFlags", OperationFlags_name, OperationFlags_value)
	proto.RegisterEnum("openstorage.api.SdkCloudBackupOpType", SdkCloudBackupOpType_name, SdkCloudBackupOpType_value)
	proto.RegisterEnum("openstorage.api.SdkCloudBackupStatusType", SdkCloudBackupStatusType_name, SdkCloudBackupStatusType_value)
	proto.RegisterEnum("openstorage.api.SdkCloudBackupRequestedState", SdkCloudBackupRequestedState_name, SdkCloudBackupRequestedState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OpenStorageCluster service

type OpenStorageClusterClient interface {
	// Enumerate lists all the nodes in the cluster.
	Enumerate(ctx context.Context, in *SdkClusterEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterEnumerateResponse, error)
	// Inspect the node given a UUID.
	Inspect(ctx context.Context, in *SdkClusterInspectRequest, opts ...grpc.CallOption) (*SdkClusterInspectResponse, error)
	// Get a list of alerts from the storage cluster
	AlertEnumerate(ctx context.Context, in *SdkClusterAlertEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterAlertEnumerateResponse, error)
	// Clear the alert for a given resource
	AlertClear(ctx context.Context, in *SdkClusterAlertClearRequest, opts ...grpc.CallOption) (*SdkClusterAlertClearResponse, error)
	// Erases an alert for a given resource
	AlertDelete(ctx context.Context, in *SdkClusterAlertDeleteRequest, opts ...grpc.CallOption) (*SdkClusterAlertDeleteResponse, error)
}

type openStorageClusterClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageClusterClient(cc *grpc.ClientConn) OpenStorageClusterClient {
	return &openStorageClusterClient{cc}
}

func (c *openStorageClusterClient) Enumerate(ctx context.Context, in *SdkClusterEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterEnumerateResponse, error) {
	out := new(SdkClusterEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) Inspect(ctx context.Context, in *SdkClusterInspectRequest, opts ...grpc.CallOption) (*SdkClusterInspectResponse, error) {
	out := new(SdkClusterInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertEnumerate(ctx context.Context, in *SdkClusterAlertEnumerateRequest, opts ...grpc.CallOption) (*SdkClusterAlertEnumerateResponse, error) {
	out := new(SdkClusterAlertEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertEnumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertClear(ctx context.Context, in *SdkClusterAlertClearRequest, opts ...grpc.CallOption) (*SdkClusterAlertClearResponse, error) {
	out := new(SdkClusterAlertClearResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertClear", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertDelete(ctx context.Context, in *SdkClusterAlertDeleteRequest, opts ...grpc.CallOption) (*SdkClusterAlertDeleteResponse, error) {
	out := new(SdkClusterAlertDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCluster service

type OpenStorageClusterServer interface {
	// Enumerate lists all the nodes in the cluster.
	Enumerate(context.Context, *SdkClusterEnumerateRequest) (*SdkClusterEnumerateResponse, error)
	// Inspect the node given a UUID.
	Inspect(context.Context, *SdkClusterInspectRequest) (*SdkClusterInspectResponse, error)
	// Get a list of alerts from the storage cluster
	AlertEnumerate(context.Context, *SdkClusterAlertEnumerateRequest) (*SdkClusterAlertEnumerateResponse, error)
	// Clear the alert for a given resource
	AlertClear(context.Context, *SdkClusterAlertClearRequest) (*SdkClusterAlertClearResponse, error)
	// Erases an alert for a given resource
	AlertDelete(context.Context, *SdkClusterAlertDeleteRequest) (*SdkClusterAlertDeleteResponse, error)
}

func RegisterOpenStorageClusterServer(s *grpc.Server, srv OpenStorageClusterServer) {
	s.RegisterService(&_OpenStorageCluster_serviceDesc, srv)
}

func _OpenStorageCluster_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).Enumerate(ctx, req.(*SdkClusterEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).Inspect(ctx, req.(*SdkClusterInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertEnumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterAlertEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertEnumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertEnumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertEnumerate(ctx, req.(*SdkClusterAlertEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertClear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterAlertClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertClear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertClear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertClear(ctx, req.(*SdkClusterAlertClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkClusterAlertDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertDelete(ctx, req.(*SdkClusterAlertDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCluster",
	HandlerType: (*OpenStorageClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageCluster_Enumerate_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageCluster_Inspect_Handler,
		},
		{
			MethodName: "AlertEnumerate",
			Handler:    _OpenStorageCluster_AlertEnumerate_Handler,
		},
		{
			MethodName: "AlertClear",
			Handler:    _OpenStorageCluster_AlertClear_Handler,
		},
		{
			MethodName: "AlertDelete",
			Handler:    _OpenStorageCluster_AlertDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageVolume service

type OpenStorageVolumeClient interface {
	// Creates a new volume
	Create(ctx context.Context, in *SdkVolumeCreateRequest, opts ...grpc.CallOption) (*SdkVolumeCreateResponse, error)
	// Clone creates a new volume cloned from an existing volume
	Clone(ctx context.Context, in *SdkVolumeCloneRequest, opts ...grpc.CallOption) (*SdkVolumeCloneResponse, error)
	// Delete a volume
	Delete(ctx context.Context, in *SdkVolumeDeleteRequest, opts ...grpc.CallOption) (*SdkVolumeDeleteResponse, error)
	// Get information on a volume
	Inspect(ctx context.Context, in *SdkVolumeInspectRequest, opts ...grpc.CallOption) (*SdkVolumeInspectResponse, error)
	// Get a list of volumes
	Enumerate(ctx context.Context, in *SdkVolumeEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeEnumerateResponse, error)
	// Create a snapshot of a volume. This creates an immutable (read-only),
	// point-in-time snapshot of a volume.
	SnapshotCreate(ctx context.Context, in *SdkVolumeSnapshotCreateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotCreateResponse, error)
	// Restores a volume to a specified snapshot
	SnapshotRestore(ctx context.Context, in *SdkVolumeSnapshotRestoreRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotRestoreResponse, error)
	// List the number of snapshots for a specific volume
	SnapshotEnumerate(ctx context.Context, in *SdkVolumeSnapshotEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotEnumerateResponse, error)
	// Attach device to host
	Attach(ctx context.Context, in *SdkVolumeAttachRequest, opts ...grpc.CallOption) (*SdkVolumeAttachResponse, error)
	// Detaches the volume from the node.
	Detach(ctx context.Context, in *SdkVolumeDetachRequest, opts ...grpc.CallOption) (*SdkVolumeDetachResponse, error)
	// Attaches the volume to a node.
	Mount(ctx context.Context, in *SdkVolumeMountRequest, opts ...grpc.CallOption) (*SdkVolumeMountResponse, error)
	// Unmount volume at specified path
	Unmount(ctx context.Context, in *SdkVolumeUnmountRequest, opts ...grpc.CallOption) (*SdkVolumeUnmountResponse, error)
}

type openStorageVolumeClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageVolumeClient(cc *grpc.ClientConn) OpenStorageVolumeClient {
	return &openStorageVolumeClient{cc}
}

func (c *openStorageVolumeClient) Create(ctx context.Context, in *SdkVolumeCreateRequest, opts ...grpc.CallOption) (*SdkVolumeCreateResponse, error) {
	out := new(SdkVolumeCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Clone(ctx context.Context, in *SdkVolumeCloneRequest, opts ...grpc.CallOption) (*SdkVolumeCloneResponse, error) {
	out := new(SdkVolumeCloneResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Clone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Delete(ctx context.Context, in *SdkVolumeDeleteRequest, opts ...grpc.CallOption) (*SdkVolumeDeleteResponse, error) {
	out := new(SdkVolumeDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Inspect(ctx context.Context, in *SdkVolumeInspectRequest, opts ...grpc.CallOption) (*SdkVolumeInspectResponse, error) {
	out := new(SdkVolumeInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Enumerate(ctx context.Context, in *SdkVolumeEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeEnumerateResponse, error) {
	out := new(SdkVolumeEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotCreate(ctx context.Context, in *SdkVolumeSnapshotCreateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotCreateResponse, error) {
	out := new(SdkVolumeSnapshotCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotRestore(ctx context.Context, in *SdkVolumeSnapshotRestoreRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotRestoreResponse, error) {
	out := new(SdkVolumeSnapshotRestoreResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotRestore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotEnumerate(ctx context.Context, in *SdkVolumeSnapshotEnumerateRequest, opts ...grpc.CallOption) (*SdkVolumeSnapshotEnumerateResponse, error) {
	out := new(SdkVolumeSnapshotEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotEnumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Attach(ctx context.Context, in *SdkVolumeAttachRequest, opts ...grpc.CallOption) (*SdkVolumeAttachResponse, error) {
	out := new(SdkVolumeAttachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Attach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Detach(ctx context.Context, in *SdkVolumeDetachRequest, opts ...grpc.CallOption) (*SdkVolumeDetachResponse, error) {
	out := new(SdkVolumeDetachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Detach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Mount(ctx context.Context, in *SdkVolumeMountRequest, opts ...grpc.CallOption) (*SdkVolumeMountResponse, error) {
	out := new(SdkVolumeMountResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Mount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Unmount(ctx context.Context, in *SdkVolumeUnmountRequest, opts ...grpc.CallOption) (*SdkVolumeUnmountResponse, error) {
	out := new(SdkVolumeUnmountResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Unmount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageVolume service

type OpenStorageVolumeServer interface {
	// Creates a new volume
	Create(context.Context, *SdkVolumeCreateRequest) (*SdkVolumeCreateResponse, error)
	// Clone creates a new volume cloned from an existing volume
	Clone(context.Context, *SdkVolumeCloneRequest) (*SdkVolumeCloneResponse, error)
	// Delete a volume
	Delete(context.Context, *SdkVolumeDeleteRequest) (*SdkVolumeDeleteResponse, error)
	// Get information on a volume
	Inspect(context.Context, *SdkVolumeInspectRequest) (*SdkVolumeInspectResponse, error)
	// Get a list of volumes
	Enumerate(context.Context, *SdkVolumeEnumerateRequest) (*SdkVolumeEnumerateResponse, error)
	// Create a snapshot of a volume. This creates an immutable (read-only),
	// point-in-time snapshot of a volume.
	SnapshotCreate(context.Context, *SdkVolumeSnapshotCreateRequest) (*SdkVolumeSnapshotCreateResponse, error)
	// Restores a volume to a specified snapshot
	SnapshotRestore(context.Context, *SdkVolumeSnapshotRestoreRequest) (*SdkVolumeSnapshotRestoreResponse, error)
	// List the number of snapshots for a specific volume
	SnapshotEnumerate(context.Context, *SdkVolumeSnapshotEnumerateRequest) (*SdkVolumeSnapshotEnumerateResponse, error)
	// Attach device to host
	Attach(context.Context, *SdkVolumeAttachRequest) (*SdkVolumeAttachResponse, error)
	// Detaches the volume from the node.
	Detach(context.Context, *SdkVolumeDetachRequest) (*SdkVolumeDetachResponse, error)
	// Attaches the volume to a node.
	Mount(context.Context, *SdkVolumeMountRequest) (*SdkVolumeMountResponse, error)
	// Unmount volume at specified path
	Unmount(context.Context, *SdkVolumeUnmountRequest) (*SdkVolumeUnmountResponse, error)
}

func RegisterOpenStorageVolumeServer(s *grpc.Server, srv OpenStorageVolumeServer) {
	s.RegisterService(&_OpenStorageVolume_serviceDesc, srv)
}

func _OpenStorageVolume_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Create(ctx, req.(*SdkVolumeCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Clone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeCloneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Clone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Clone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Clone(ctx, req.(*SdkVolumeCloneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Delete(ctx, req.(*SdkVolumeDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Inspect(ctx, req.(*SdkVolumeInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Enumerate(ctx, req.(*SdkVolumeEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeSnapshotCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotCreate(ctx, req.(*SdkVolumeSnapshotCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeSnapshotRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotRestore(ctx, req.(*SdkVolumeSnapshotRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotEnumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeSnapshotEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotEnumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotEnumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotEnumerate(ctx, req.(*SdkVolumeSnapshotEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Attach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeAttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Attach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Attach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Attach(ctx, req.(*SdkVolumeAttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Detach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeDetachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Detach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Detach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Detach(ctx, req.(*SdkVolumeDetachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Mount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeMountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Mount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Mount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Mount(ctx, req.(*SdkVolumeMountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Unmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkVolumeUnmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Unmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Unmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Unmount(ctx, req.(*SdkVolumeUnmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageVolume_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageVolume",
	HandlerType: (*OpenStorageVolumeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageVolume_Create_Handler,
		},
		{
			MethodName: "Clone",
			Handler:    _OpenStorageVolume_Clone_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageVolume_Delete_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageVolume_Inspect_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageVolume_Enumerate_Handler,
		},
		{
			MethodName: "SnapshotCreate",
			Handler:    _OpenStorageVolume_SnapshotCreate_Handler,
		},
		{
			MethodName: "SnapshotRestore",
			Handler:    _OpenStorageVolume_SnapshotRestore_Handler,
		},
		{
			MethodName: "SnapshotEnumerate",
			Handler:    _OpenStorageVolume_SnapshotEnumerate_Handler,
		},
		{
			MethodName: "Attach",
			Handler:    _OpenStorageVolume_Attach_Handler,
		},
		{
			MethodName: "Detach",
			Handler:    _OpenStorageVolume_Detach_Handler,
		},
		{
			MethodName: "Mount",
			Handler:    _OpenStorageVolume_Mount_Handler,
		},
		{
			MethodName: "Unmount",
			Handler:    _OpenStorageVolume_Unmount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageObjectstore service

type OpenStorageObjectstoreClient interface {
	// Inspect returns current status of objectstore
	Inspect(ctx context.Context, in *SdkObjectstoreInspectRequest, opts ...grpc.CallOption) (*SdkObjectstoreInspectResponse, error)
	// Creates objectstore on specified volume
	Create(ctx context.Context, in *SdkObjectstoreCreateRequest, opts ...grpc.CallOption) (*SdkObjectstoreCreateResponse, error)
	// Deletes objectstore by id
	Delete(ctx context.Context, in *SdkObjectstoreDeleteRequest, opts ...grpc.CallOption) (*SdkObjectstoreDeleteResponse, error)
	// Updates provided objectstore status
	Update(ctx context.Context, in *SdkObjectstoreUpdateRequest, opts ...grpc.CallOption) (*SdkObjectstoreUpdateResponse, error)
}

type openStorageObjectstoreClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageObjectstoreClient(cc *grpc.ClientConn) OpenStorageObjectstoreClient {
	return &openStorageObjectstoreClient{cc}
}

func (c *openStorageObjectstoreClient) Inspect(ctx context.Context, in *SdkObjectstoreInspectRequest, opts ...grpc.CallOption) (*SdkObjectstoreInspectResponse, error) {
	out := new(SdkObjectstoreInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageObjectstoreClient) Create(ctx context.Context, in *SdkObjectstoreCreateRequest, opts ...grpc.CallOption) (*SdkObjectstoreCreateResponse, error) {
	out := new(SdkObjectstoreCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageObjectstoreClient) Delete(ctx context.Context, in *SdkObjectstoreDeleteRequest, opts ...grpc.CallOption) (*SdkObjectstoreDeleteResponse, error) {
	out := new(SdkObjectstoreDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageObjectstoreClient) Update(ctx context.Context, in *SdkObjectstoreUpdateRequest, opts ...grpc.CallOption) (*SdkObjectstoreUpdateResponse, error) {
	out := new(SdkObjectstoreUpdateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageObjectstore/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageObjectstore service

type OpenStorageObjectstoreServer interface {
	// Inspect returns current status of objectstore
	Inspect(context.Context, *SdkObjectstoreInspectRequest) (*SdkObjectstoreInspectResponse, error)
	// Creates objectstore on specified volume
	Create(context.Context, *SdkObjectstoreCreateRequest) (*SdkObjectstoreCreateResponse, error)
	// Deletes objectstore by id
	Delete(context.Context, *SdkObjectstoreDeleteRequest) (*SdkObjectstoreDeleteResponse, error)
	// Updates provided objectstore status
	Update(context.Context, *SdkObjectstoreUpdateRequest) (*SdkObjectstoreUpdateResponse, error)
}

func RegisterOpenStorageObjectstoreServer(s *grpc.Server, srv OpenStorageObjectstoreServer) {
	s.RegisterService(&_OpenStorageObjectstore_serviceDesc, srv)
}

func _OpenStorageObjectstore_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Inspect(ctx, req.(*SdkObjectstoreInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageObjectstore_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Create(ctx, req.(*SdkObjectstoreCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageObjectstore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Delete(ctx, req.(*SdkObjectstoreDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageObjectstore_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkObjectstoreUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageObjectstoreServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageObjectstore/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageObjectstoreServer).Update(ctx, req.(*SdkObjectstoreUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageObjectstore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageObjectstore",
	HandlerType: (*OpenStorageObjectstoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageObjectstore_Inspect_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _OpenStorageObjectstore_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageObjectstore_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OpenStorageObjectstore_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageCredentials service

type OpenStorageCredentialsClient interface {
	// Create credential for AWS S3 and if valid ,
	// returns a unique identifier
	CreateForAWS(ctx context.Context, in *SdkCredentialCreateAWSRequest, opts ...grpc.CallOption) (*SdkCredentialCreateAWSResponse, error)
	// Create credential for Azure and if valid ,
	// returns a unique identifier
	CreateForAzure(ctx context.Context, in *SdkCredentialCreateAzureRequest, opts ...grpc.CallOption) (*SdkCredentialCreateAzureResponse, error)
	// Create credential for Google and if valid ,
	// returns a unique identifier
	CreateForGoogle(ctx context.Context, in *SdkCredentialCreateGoogleRequest, opts ...grpc.CallOption) (*SdkCredentialCreateGoogleResponse, error)
	// EnumerateForAWS lists the configured AWS credentials
	EnumerateForAWS(ctx context.Context, in *SdkCredentialEnumerateAWSRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateAWSResponse, error)
	// EnumerateForAzure lists the configured Azure credentials
	EnumerateForAzure(ctx context.Context, in *SdkCredentialEnumerateAzureRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateAzureResponse, error)
	// EnumerateForGoogle lists the configured Google credentials
	EnumerateForGoogle(ctx context.Context, in *SdkCredentialEnumerateGoogleRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateGoogleResponse, error)
	// Delete a specified credential
	Delete(ctx context.Context, in *SdkCredentialDeleteRequest, opts ...grpc.CallOption) (*SdkCredentialDeleteResponse, error)
	// Validate a specified credential
	Validate(ctx context.Context, in *SdkCredentialValidateRequest, opts ...grpc.CallOption) (*SdkCredentialValidateResponse, error)
}

type openStorageCredentialsClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageCredentialsClient(cc *grpc.ClientConn) OpenStorageCredentialsClient {
	return &openStorageCredentialsClient{cc}
}

func (c *openStorageCredentialsClient) CreateForAWS(ctx context.Context, in *SdkCredentialCreateAWSRequest, opts ...grpc.CallOption) (*SdkCredentialCreateAWSResponse, error) {
	out := new(SdkCredentialCreateAWSResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/CreateForAWS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) CreateForAzure(ctx context.Context, in *SdkCredentialCreateAzureRequest, opts ...grpc.CallOption) (*SdkCredentialCreateAzureResponse, error) {
	out := new(SdkCredentialCreateAzureResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/CreateForAzure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) CreateForGoogle(ctx context.Context, in *SdkCredentialCreateGoogleRequest, opts ...grpc.CallOption) (*SdkCredentialCreateGoogleResponse, error) {
	out := new(SdkCredentialCreateGoogleResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/CreateForGoogle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) EnumerateForAWS(ctx context.Context, in *SdkCredentialEnumerateAWSRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateAWSResponse, error) {
	out := new(SdkCredentialEnumerateAWSResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/EnumerateForAWS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) EnumerateForAzure(ctx context.Context, in *SdkCredentialEnumerateAzureRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateAzureResponse, error) {
	out := new(SdkCredentialEnumerateAzureResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/EnumerateForAzure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) EnumerateForGoogle(ctx context.Context, in *SdkCredentialEnumerateGoogleRequest, opts ...grpc.CallOption) (*SdkCredentialEnumerateGoogleResponse, error) {
	out := new(SdkCredentialEnumerateGoogleResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/EnumerateForGoogle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) Delete(ctx context.Context, in *SdkCredentialDeleteRequest, opts ...grpc.CallOption) (*SdkCredentialDeleteResponse, error) {
	out := new(SdkCredentialDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCredentialsClient) Validate(ctx context.Context, in *SdkCredentialValidateRequest, opts ...grpc.CallOption) (*SdkCredentialValidateResponse, error) {
	out := new(SdkCredentialValidateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCredentials/Validate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCredentials service

type OpenStorageCredentialsServer interface {
	// Create credential for AWS S3 and if valid ,
	// returns a unique identifier
	CreateForAWS(context.Context, *SdkCredentialCreateAWSRequest) (*SdkCredentialCreateAWSResponse, error)
	// Create credential for Azure and if valid ,
	// returns a unique identifier
	CreateForAzure(context.Context, *SdkCredentialCreateAzureRequest) (*SdkCredentialCreateAzureResponse, error)
	// Create credential for Google and if valid ,
	// returns a unique identifier
	CreateForGoogle(context.Context, *SdkCredentialCreateGoogleRequest) (*SdkCredentialCreateGoogleResponse, error)
	// EnumerateForAWS lists the configured AWS credentials
	EnumerateForAWS(context.Context, *SdkCredentialEnumerateAWSRequest) (*SdkCredentialEnumerateAWSResponse, error)
	// EnumerateForAzure lists the configured Azure credentials
	EnumerateForAzure(context.Context, *SdkCredentialEnumerateAzureRequest) (*SdkCredentialEnumerateAzureResponse, error)
	// EnumerateForGoogle lists the configured Google credentials
	EnumerateForGoogle(context.Context, *SdkCredentialEnumerateGoogleRequest) (*SdkCredentialEnumerateGoogleResponse, error)
	// Delete a specified credential
	Delete(context.Context, *SdkCredentialDeleteRequest) (*SdkCredentialDeleteResponse, error)
	// Validate a specified credential
	Validate(context.Context, *SdkCredentialValidateRequest) (*SdkCredentialValidateResponse, error)
}

func RegisterOpenStorageCredentialsServer(s *grpc.Server, srv OpenStorageCredentialsServer) {
	s.RegisterService(&_OpenStorageCredentials_serviceDesc, srv)
}

func _OpenStorageCredentials_CreateForAWS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialCreateAWSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).CreateForAWS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/CreateForAWS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).CreateForAWS(ctx, req.(*SdkCredentialCreateAWSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_CreateForAzure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialCreateAzureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).CreateForAzure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/CreateForAzure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).CreateForAzure(ctx, req.(*SdkCredentialCreateAzureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_CreateForGoogle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialCreateGoogleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).CreateForGoogle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/CreateForGoogle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).CreateForGoogle(ctx, req.(*SdkCredentialCreateGoogleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_EnumerateForAWS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialEnumerateAWSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).EnumerateForAWS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/EnumerateForAWS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).EnumerateForAWS(ctx, req.(*SdkCredentialEnumerateAWSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_EnumerateForAzure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialEnumerateAzureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).EnumerateForAzure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/EnumerateForAzure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).EnumerateForAzure(ctx, req.(*SdkCredentialEnumerateAzureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_EnumerateForGoogle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialEnumerateGoogleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).EnumerateForGoogle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/EnumerateForGoogle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).EnumerateForGoogle(ctx, req.(*SdkCredentialEnumerateGoogleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).Delete(ctx, req.(*SdkCredentialDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCredentials_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCredentialValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCredentialsServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCredentials/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCredentialsServer).Validate(ctx, req.(*SdkCredentialValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCredentials_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCredentials",
	HandlerType: (*OpenStorageCredentialsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateForAWS",
			Handler:    _OpenStorageCredentials_CreateForAWS_Handler,
		},
		{
			MethodName: "CreateForAzure",
			Handler:    _OpenStorageCredentials_CreateForAzure_Handler,
		},
		{
			MethodName: "CreateForGoogle",
			Handler:    _OpenStorageCredentials_CreateForGoogle_Handler,
		},
		{
			MethodName: "EnumerateForAWS",
			Handler:    _OpenStorageCredentials_EnumerateForAWS_Handler,
		},
		{
			MethodName: "EnumerateForAzure",
			Handler:    _OpenStorageCredentials_EnumerateForAzure_Handler,
		},
		{
			MethodName: "EnumerateForGoogle",
			Handler:    _OpenStorageCredentials_EnumerateForGoogle_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageCredentials_Delete_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _OpenStorageCredentials_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageSchedulePolicy service

type OpenStorageSchedulePolicyClient interface {
	// Create Schedule Policy for snapshots
	Create(ctx context.Context, in *SdkSchedulePolicyCreateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyCreateResponse, error)
	// Update Schedule Policy
	Update(ctx context.Context, in *SdkSchedulePolicyUpdateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyUpdateResponse, error)
	Enumerate(ctx context.Context, in *SdkSchedulePolicyEnumerateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyEnumerateResponse, error)
	// Inspect Schedule Policy
	Inspect(ctx context.Context, in *SdkSchedulePolicyInspectRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyInspectResponse, error)
	// Delete Schedule Policy
	Delete(ctx context.Context, in *SdkSchedulePolicyDeleteRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyDeleteResponse, error)
}

type openStorageSchedulePolicyClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageSchedulePolicyClient(cc *grpc.ClientConn) OpenStorageSchedulePolicyClient {
	return &openStorageSchedulePolicyClient{cc}
}

func (c *openStorageSchedulePolicyClient) Create(ctx context.Context, in *SdkSchedulePolicyCreateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyCreateResponse, error) {
	out := new(SdkSchedulePolicyCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Update(ctx context.Context, in *SdkSchedulePolicyUpdateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyUpdateResponse, error) {
	out := new(SdkSchedulePolicyUpdateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Enumerate(ctx context.Context, in *SdkSchedulePolicyEnumerateRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyEnumerateResponse, error) {
	out := new(SdkSchedulePolicyEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Inspect(ctx context.Context, in *SdkSchedulePolicyInspectRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyInspectResponse, error) {
	out := new(SdkSchedulePolicyInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageSchedulePolicyClient) Delete(ctx context.Context, in *SdkSchedulePolicyDeleteRequest, opts ...grpc.CallOption) (*SdkSchedulePolicyDeleteResponse, error) {
	out := new(SdkSchedulePolicyDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageSchedulePolicy/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageSchedulePolicy service

type OpenStorageSchedulePolicyServer interface {
	// Create Schedule Policy for snapshots
	Create(context.Context, *SdkSchedulePolicyCreateRequest) (*SdkSchedulePolicyCreateResponse, error)
	// Update Schedule Policy
	Update(context.Context, *SdkSchedulePolicyUpdateRequest) (*SdkSchedulePolicyUpdateResponse, error)
	Enumerate(context.Context, *SdkSchedulePolicyEnumerateRequest) (*SdkSchedulePolicyEnumerateResponse, error)
	// Inspect Schedule Policy
	Inspect(context.Context, *SdkSchedulePolicyInspectRequest) (*SdkSchedulePolicyInspectResponse, error)
	// Delete Schedule Policy
	Delete(context.Context, *SdkSchedulePolicyDeleteRequest) (*SdkSchedulePolicyDeleteResponse, error)
}

func RegisterOpenStorageSchedulePolicyServer(s *grpc.Server, srv OpenStorageSchedulePolicyServer) {
	s.RegisterService(&_OpenStorageSchedulePolicy_serviceDesc, srv)
}

func _OpenStorageSchedulePolicy_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Create(ctx, req.(*SdkSchedulePolicyCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Update(ctx, req.(*SdkSchedulePolicyUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Enumerate(ctx, req.(*SdkSchedulePolicyEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Inspect(ctx, req.(*SdkSchedulePolicyInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageSchedulePolicy_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkSchedulePolicyDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageSchedulePolicyServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageSchedulePolicy/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageSchedulePolicyServer).Delete(ctx, req.(*SdkSchedulePolicyDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageSchedulePolicy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageSchedulePolicy",
	HandlerType: (*OpenStorageSchedulePolicyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageSchedulePolicy_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _OpenStorageSchedulePolicy_Update_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageSchedulePolicy_Enumerate_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageSchedulePolicy_Inspect_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageSchedulePolicy_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageCloudBackup service

type OpenStorageCloudBackupClient interface {
	// Create
	Create(ctx context.Context, in *SdkCloudBackupCreateRequest, opts ...grpc.CallOption) (*SdkCloudBackupCreateResponse, error)
	// Restore
	Restore(ctx context.Context, in *SdkCloudBackupRestoreRequest, opts ...grpc.CallOption) (*SdkCloudBackupRestoreResponse, error)
	// Delete
	Delete(ctx context.Context, in *SdkCloudBackupDeleteRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteResponse, error)
	// DeleteAll
	DeleteAll(ctx context.Context, in *SdkCloudBackupDeleteAllRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteAllResponse, error)
	// Enumerate
	Enumerate(ctx context.Context, in *SdkCloudBackupEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudBackupEnumerateResponse, error)
	// Status
	Status(ctx context.Context, in *SdkCloudBackupStatusRequest, opts ...grpc.CallOption) (*SdkCloudBackupStatusResponse, error)
	// Catalog
	Catalog(ctx context.Context, in *SdkCloudBackupCatalogRequest, opts ...grpc.CallOption) (*SdkCloudBackupCatalogResponse, error)
	// History
	History(ctx context.Context, in *SdkCloudBackupHistoryRequest, opts ...grpc.CallOption) (*SdkCloudBackupHistoryResponse, error)
	// StateChange
	StateChange(ctx context.Context, in *SdkCloudBackupStateChangeRequest, opts ...grpc.CallOption) (*SdkCloudBackupStateChangeResponse, error)
}

type openStorageCloudBackupClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageCloudBackupClient(cc *grpc.ClientConn) OpenStorageCloudBackupClient {
	return &openStorageCloudBackupClient{cc}
}

func (c *openStorageCloudBackupClient) Create(ctx context.Context, in *SdkCloudBackupCreateRequest, opts ...grpc.CallOption) (*SdkCloudBackupCreateResponse, error) {
	out := new(SdkCloudBackupCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Restore(ctx context.Context, in *SdkCloudBackupRestoreRequest, opts ...grpc.CallOption) (*SdkCloudBackupRestoreResponse, error) {
	out := new(SdkCloudBackupRestoreResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Restore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Delete(ctx context.Context, in *SdkCloudBackupDeleteRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteResponse, error) {
	out := new(SdkCloudBackupDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) DeleteAll(ctx context.Context, in *SdkCloudBackupDeleteAllRequest, opts ...grpc.CallOption) (*SdkCloudBackupDeleteAllResponse, error) {
	out := new(SdkCloudBackupDeleteAllResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/DeleteAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Enumerate(ctx context.Context, in *SdkCloudBackupEnumerateRequest, opts ...grpc.CallOption) (*SdkCloudBackupEnumerateResponse, error) {
	out := new(SdkCloudBackupEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Status(ctx context.Context, in *SdkCloudBackupStatusRequest, opts ...grpc.CallOption) (*SdkCloudBackupStatusResponse, error) {
	out := new(SdkCloudBackupStatusResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) Catalog(ctx context.Context, in *SdkCloudBackupCatalogRequest, opts ...grpc.CallOption) (*SdkCloudBackupCatalogResponse, error) {
	out := new(SdkCloudBackupCatalogResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/Catalog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) History(ctx context.Context, in *SdkCloudBackupHistoryRequest, opts ...grpc.CallOption) (*SdkCloudBackupHistoryResponse, error) {
	out := new(SdkCloudBackupHistoryResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/History", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageCloudBackupClient) StateChange(ctx context.Context, in *SdkCloudBackupStateChangeRequest, opts ...grpc.CallOption) (*SdkCloudBackupStateChangeResponse, error) {
	out := new(SdkCloudBackupStateChangeResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCloudBackup/StateChange", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCloudBackup service

type OpenStorageCloudBackupServer interface {
	// Create
	Create(context.Context, *SdkCloudBackupCreateRequest) (*SdkCloudBackupCreateResponse, error)
	// Restore
	Restore(context.Context, *SdkCloudBackupRestoreRequest) (*SdkCloudBackupRestoreResponse, error)
	// Delete
	Delete(context.Context, *SdkCloudBackupDeleteRequest) (*SdkCloudBackupDeleteResponse, error)
	// DeleteAll
	DeleteAll(context.Context, *SdkCloudBackupDeleteAllRequest) (*SdkCloudBackupDeleteAllResponse, error)
	// Enumerate
	Enumerate(context.Context, *SdkCloudBackupEnumerateRequest) (*SdkCloudBackupEnumerateResponse, error)
	// Status
	Status(context.Context, *SdkCloudBackupStatusRequest) (*SdkCloudBackupStatusResponse, error)
	// Catalog
	Catalog(context.Context, *SdkCloudBackupCatalogRequest) (*SdkCloudBackupCatalogResponse, error)
	// History
	History(context.Context, *SdkCloudBackupHistoryRequest) (*SdkCloudBackupHistoryResponse, error)
	// StateChange
	StateChange(context.Context, *SdkCloudBackupStateChangeRequest) (*SdkCloudBackupStateChangeResponse, error)
}

func RegisterOpenStorageCloudBackupServer(s *grpc.Server, srv OpenStorageCloudBackupServer) {
	s.RegisterService(&_OpenStorageCloudBackup_serviceDesc, srv)
}

func _OpenStorageCloudBackup_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Create(ctx, req.(*SdkCloudBackupCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Restore(ctx, req.(*SdkCloudBackupRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Delete(ctx, req.(*SdkCloudBackupDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_DeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupDeleteAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).DeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/DeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).DeleteAll(ctx, req.(*SdkCloudBackupDeleteAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Enumerate(ctx, req.(*SdkCloudBackupEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Status(ctx, req.(*SdkCloudBackupStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_Catalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupCatalogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).Catalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/Catalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).Catalog(ctx, req.(*SdkCloudBackupCatalogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_History_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).History(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/History",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).History(ctx, req.(*SdkCloudBackupHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCloudBackup_StateChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SdkCloudBackupStateChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageCloudBackupServer).StateChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCloudBackup/StateChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageCloudBackupServer).StateChange(ctx, req.(*SdkCloudBackupStateChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCloudBackup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCloudBackup",
	HandlerType: (*OpenStorageCloudBackupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageCloudBackup_Create_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _OpenStorageCloudBackup_Restore_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageCloudBackup_Delete_Handler,
		},
		{
			MethodName: "DeleteAll",
			Handler:    _OpenStorageCloudBackup_DeleteAll_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageCloudBackup_Enumerate_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _OpenStorageCloudBackup_Status_Handler,
		},
		{
			MethodName: "Catalog",
			Handler:    _OpenStorageCloudBackup_Catalog_Handler,
		},
		{
			MethodName: "History",
			Handler:    _OpenStorageCloudBackup_History_Handler,
		},
		{
			MethodName: "StateChange",
			Handler:    _OpenStorageCloudBackup_StateChange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor_api_feccc90d7cea2234) }

var fileDescriptor_api_feccc90d7cea2234 = []byte{
	// 6797 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5c, 0x4d, 0x8c, 0x1b, 0xc9,
	0x75, 0xde, 0x26, 0x87, 0x7f, 0x6f, 0xfe, 0x7a, 0x4a, 0xd2, 0x88, 0xa2, 0x46, 0xd2, 0xa8, 0xd7,
	0xfa, 0x59, 0xae, 0x76, 0x46, 0x3b, 0xbb, 0x5a, 0xef, 0x4a, 0xd9, 0xcd, 0x52, 0x43, 0x8e, 0xc4,
	0xd5, 0x0c, 0x39, 0x6e, 0x72, 0xa4, 0x5d, 0x27, 0x36, 0xd1, 0x22, 0x4b, 0x23, 0xae, 0x48, 0x36,
	0xd5, 0xdd, 0x9c, 0xc5, 0xac, 0x22, 0x07, 0x09, 0x60, 0x38, 0x30, 0xfc, 0x93, 0xc4, 0x71, 0x02,
	0x23, 0x89, 0x83, 0x1c, 0x92, 0x8b, 0x61, 0x20, 0x39, 0xc7, 0x80, 0x11, 0x20, 0x97, 0x00, 0xb1,
	0x73, 0xf0, 0x21, 0x87, 0x00, 0x39, 0xe4, 0xe7, 0x10, 0x24, 0xc8, 0x29, 0x17, 0xdf, 0x82, 0xfa,
	0xe9, 0x66, 0x55, 0xff, 0x90, 0x4d, 0x5b, 0x9b, 0x8b, 0xc4, 0xaa, 0x7a, 0x55, 0xef, 0xab, 0x57,
	0xaf, 0xde, 0x7b, 0x55, 0xf5, 0x7a, 0x60, 0xd1, 0x18, 0x76, 0x37, 0x8d, 0x61, 0x77, 0x63, 0x68,
	0x99, 0x8e, 0x89, 0x96, 0xcd, 0x21, 0x1e, 0xd8, 0x8e, 0x69, 0x19, 0x87, 0x78, 0xc3, 0x18, 0x76,
	0x0b, 0x17, 0x0e, 0x4d, 0xf3, 0xb0, 0x87, 0x37, 0x69, 0xf3, 0xc3, 0xd1, 0xa3, 0x4d, 0xa7, 0xdb,
	0xc7, 0xb6, 0x63, 0xf4, 0x87, 0xac, 0x47, 0x61, 0x8d, 0x13, 0xd0, 0x71, 0x06, 0x03, 0xd3, 0x31,
	0x9c, 0xae, 0x39, 0xb0, 0x59, 0xab, 0xf6, 0xcd, 0x24, 0x2c, 0x37, 0xd8, 0x70, 0x3a, 0xb6, 0xcd,
	0x91, 0xd5, 0xc6, 0x68, 0x09, 0x12, 0xdd, 0x4e, 0x5e, 0x59, 0x57, 0xae, 0xe6, 0xf4, 0x44, 0xb7,
	0x83, 0x10, 0xcc, 0x0d, 0x0d, 0xe7, 0x71, 0x3e, 0x41, 0x6b, 0xe8, 0x6f, 0xf4, 0x16, 0xa4, 0xfb,
	0xb8, 0xd3, 0x1d, 0xf5, 0xf3, 0xc9, 0x75, 0xe5, 0xea, 0xd2, 0xd6, 0xf9, 0x0d, 0x1f, 0xb0, 0x0d,
	0x3e, 0xea, 0x1e, 0xa5, 0xd2, 0x39, 0x35, 0x5a, 0x85, 0xb4, 0x39, 0xe8, 0x75, 0x07, 0x38, 0x3f,
	0xb7, 0xae, 0x5c, 0xcd, 0xea, 0xbc, 0x44, 0x78, 0x74, 0xcd, 0xa1, 0x9d, 0x4f, 0xad, 0x2b, 0x57,
	0xe7, 0x74, 0xfa, 0x1b, 0x9d, 0x85, 0x9c, 0x8d, 0x9f, 0xb6, 0x3e, 0xb1, 0xba, 0x0e, 0xce, 0xa7,
	0xd7, 0x95, 0xab, 0x8a, 0x9e, 0xb5, 0xf1, 0xd3, 0x07, 0xa4, 0x8c, 0xce, 0x00, 0xf9, 0xdd, 0xb2,
	0xb0, 0xd1, 0xc9, 0x67, 0x68, 0x5b, 0xc6, 0xc6, 0x4f, 0x75, 0x6c, 0x74, 0x08, 0x0f, 0xcb, 0x18,
	0x74, 0xf4, 0x07, 0xf9, 0x2c, 0x6d, 0xe0, 0x25, 0xc2, 0xc3, 0xee, 0x7e, 0x8a, 0xf3, 0x39, 0xc6,
	0x83, 0xfc, 0x26, 0x75, 0x23, 0x1b, 0x77, 0xf2, 0xc0, 0xea, 0xc8, 0x6f, 0x74, 0x09, 0x96, 0x2c,
	0x2e, 0xa6, 0x96, 0x3d, 0xc4, 0xb8, 0x93, 0x9f, 0xa7, 0x33, 0x5f, 0x74, 0x6b, 0x1b, 0xa4, 0x12,
	0x7d, 0x1e, 0x72, 0x3d, 0xc3, 0x76, 0x5a, 0x76, 0xdb, 0x18, 0xe4, 0x17, 0xd6, 0x95, 0xab, 0xf3,
	0x5b, 0x85, 0x0d, 0x26, 0xec, 0x0d, 0x77, 0x35, 0x36, 0x9a, 0xee, 0x6a, 0xe8, 0x59, 0x42, 0xdc,
	0x68, 0x1b, 0x03, 0x54, 0x80, 0x6c, 0x1f, 0x3b, 0x46, 0xc7, 0x70, 0x8c, 0xfc, 0x22, 0x95, 0x82,
	0x57, 0xd6, 0x7e, 0x9a, 0x80, 0x79, 0x2e, 0xb9, 0x7d, 0xd3, 0xec, 0x91, 0xb5, 0xa8, 0x96, 0xe9,
	0x5a, 0xa4, 0xf4, 0x44, 0xb5, 0x8c, 0x8a, 0x90, 0xdc, 0x36, 0x6d, 0xba, 0x14, 0x4b, 0x5b, 0xf9,
	0x80, 0xd0, 0xb7, 0x4d, 0xbb, 0x79, 0x3c, 0xc4, 0x3a, 0x21, 0x22, 0x6b, 0xb4, 0x37, 0xd3, 0x1a,
	0xb1, 0xff, 0xd1, 0x1a, 0xe4, 0x74, 0xa3, 0xdb, 0xd9, 0xc5, 0x47, 0xb8, 0x47, 0x97, 0x29, 0xa7,
	0x8f, 0x2b, 0x48, 0x6b, 0xd3, 0x74, 0x8c, 0x5e, 0x83, 0x88, 0x32, 0x43, 0xc5, 0x36, 0xae, 0x20,
	0xf2, 0x3c, 0x20, 0xf2, 0xcc, 0x32, 0x79, 0x92, 0xdf, 0xe8, 0x7d, 0x48, 0xf7, 0x8c, 0x87, 0xb8,
	0x67, 0xe7, 0x73, 0xeb, 0xc9, 0xab, 0xf3, 0x5b, 0x57, 0xa3, 0x70, 0x90, 0x19, 0x6f, 0xec, 0x52,
	0xd2, 0xca, 0xc0, 0xb1, 0x8e, 0x75, 0xde, 0xaf, 0xf0, 0x0e, 0xcc, 0x0b, 0xd5, 0x48, 0x85, 0xe4,
	0x13, 0x7c, 0xcc, 0x35, 0x94, 0xfc, 0x44, 0x27, 0x21, 0x75, 0x64, 0xf4, 0x46, 0x98, 0xeb, 0x28,
	0x2b, 0xdc, 0x4c, 0xbc, 0xad, 0x68, 0x7f, 0xa3, 0xc0, 0xe2, 0x7d, 0xb3, 0x37, 0xea, 0xe3, 0x5d,
	0xb3, 0x6d, 0x38, 0xa6, 0x45, 0x20, 0x0e, 0x8c, 0x3e, 0xe6, 0xdd, 0xe9, 0x6f, 0x74, 0x00, 0x8b,
	0x47, 0x94, 0xa8, 0xc5, 0x91, 0x26, 0x28, 0xd2, 0xeb, 0x01, 0xa4, 0xd2, 0x50, 0x6e, 0x49, 0x40,
	0xbc, 0x70, 0x24, 0x54, 0x15, 0x7e, 0x15, 0x56, 0x02, 0x24, 0x33, 0xa1, 0x7f, 0x13, 0xd2, 0x0d,
	0xb6, 0x29, 0x57, 0x21, 0x3d, 0x34, 0x2c, 0x3c, 0x70, 0x78, 0x47, 0x5e, 0xa2, 0x4a, 0x4d, 0x54,
	0x94, 0x6f, 0x4e, 0xf2, 0x5b, 0x3b, 0x0d, 0xa9, 0x3b, 0x96, 0x39, 0x1a, 0xfa, 0x77, 0xb2, 0xf6,
	0x93, 0x0c, 0x00, 0x03, 0xd4, 0x18, 0xe2, 0x36, 0x59, 0x4a, 0x3c, 0x7c, 0x8c, 0xfb, 0xd8, 0x32,
	0x7a, 0x94, 0x2a, 0xab, 0x8f, 0x2b, 0xbc, 0xed, 0x92, 0x10, 0xb6, 0xcb, 0x26, 0xa4, 0x1f, 0x99,
	0x56, 0xdf, 0x70, 0xb8, 0x4a, 0x9d, 0x0e, 0x08, 0x68, 0xa7, 0x41, 0x15, 0x90, 0x93, 0xa1, 0x73,
	0x00, 0x0f, 0x7b, 0x66, 0xfb, 0x49, 0x8b, 0x0e, 0x45, 0x94, 0x29, 0xa9, 0xe7, 0x68, 0x0d, 0x55,
	0x97, 0x33, 0x90, 0x7d, 0x6c, 0xb4, 0x7a, 0x54, 0xd3, 0x52, 0xb4, 0x31, 0xf3, 0xd8, 0x60, 0x7a,
	0x56, 0x84, 0x64, 0xdb, 0xb4, 0xe9, 0xbe, 0x9f, 0xa8, 0xe9, 0x6d, 0xd3, 0x46, 0xef, 0x00, 0x74,
	0xcd, 0xd6, 0xd0, 0x32, 0x1f, 0x75, 0x7b, 0x4c, 0x29, 0x97, 0xb6, 0x0a, 0x81, 0x2e, 0x55, 0x73,
	0x9f, 0x51, 0xe8, 0xb9, 0xae, 0xfb, 0x93, 0xc8, 0xb5, 0x83, 0x3b, 0xa3, 0x21, 0xa6, 0x2a, 0x9b,
	0xd5, 0x79, 0x09, 0xbd, 0x0a, 0x2b, 0xf6, 0xc0, 0x18, 0xda, 0x8f, 0x4d, 0xa7, 0xd5, 0x1d, 0x38,
	0xd8, 0x3a, 0x32, 0x7a, 0xd4, 0x72, 0x2c, 0xea, 0xaa, 0xdb, 0x50, 0xe5, 0xf5, 0x48, 0xf7, 0xab,
	0x0f, 0x50, 0xf5, 0x79, 0x2d, 0x42, 0x7d, 0x88, 0xf0, 0xa7, 0xe9, 0x0e, 0x01, 0x66, 0x3f, 0x36,
	0x2c, 0x6e, 0x7d, 0xb2, 0x3a, 0x2f, 0xa1, 0x5f, 0x81, 0x79, 0x0b, 0x0f, 0x7b, 0xdd, 0xb6, 0xd1,
	0xb2, 0xb1, 0xc3, 0x0d, 0xcf, 0xd9, 0x00, 0x27, 0x9d, 0xd1, 0x34, 0xb0, 0xa3, 0x83, 0xe5, 0xfd,
	0x26, 0xd3, 0x32, 0x0e, 0x0f, 0x2d, 0x7c, 0xc8, 0xcc, 0x1b, 0x93, 0xfc, 0x22, 0x9b, 0x96, 0xd0,
	0xe0, 0x6d, 0x75, 0x3c, 0x68, 0x5b, 0xc7, 0x43, 0x07, 0x77, 0xf2, 0x4b, 0x5c, 0x3f, 0xdc, 0x0a,
	0x74, 0x1e, 0x60, 0x68, 0xd8, 0xf6, 0xf0, 0xb1, 0x65, 0xd8, 0x38, 0xbf, 0x4c, 0x95, 0x4c, 0xa8,
	0x91, 0x24, 0x68, 0xb7, 0x1f, 0xe3, 0xce, 0xa8, 0x87, 0xf3, 0x2a, 0x25, 0xf3, 0x24, 0xd8, 0xe0,
	0xf5, 0x64, 0x0b, 0xd8, 0x6d, 0xa3, 0x87, 0xf3, 0x2b, 0x14, 0x0b, 0x2b, 0x50, 0x19, 0x38, 0xdd,
	0xf6, 0x93, 0xe3, 0x3c, 0xe2, 0x32, 0xa0, 0x25, 0x74, 0x0d, 0x52, 0x87, 0x44, 0xc1, 0xf3, 0xa7,
	0xe8, 0xec, 0x57, 0x03, 0xb3, 0xa7, 0xea, 0xaf, 0x33, 0x22, 0x62, 0xcf, 0xe9, 0x8f, 0x16, 0x1e,
	0x3c, 0x32, 0xad, 0x36, 0xee, 0xe4, 0x57, 0xe9, 0x68, 0x8b, 0xb4, 0xb6, 0xc2, 0x2b, 0xc9, 0x7c,
	0xda, 0x66, 0x7f, 0x68, 0x61, 0x9b, 0x18, 0xb0, 0xd3, 0x94, 0x44, 0xa8, 0x21, 0x66, 0xbb, 0x6d,
	0xd8, 0x6d, 0xa3, 0x83, 0x3b, 0xf9, 0x3c, 0x33, 0xdb, 0x6e, 0x19, 0xe5, 0x21, 0xf3, 0xb1, 0x39,
	0xb2, 0x06, 0x46, 0x2f, 0x7f, 0x86, 0x36, 0xb9, 0x45, 0xd2, 0x8b, 0x2d, 0xdc, 0xd1, 0x9b, 0xf9,
	0x02, 0xeb, 0xe5, 0x96, 0x7f, 0x79, 0xf3, 0xa0, 0x01, 0x8c, 0xd7, 0x99, 0xd0, 0x0d, 0xcc, 0x0e,
	0xb6, 0xf3, 0xca, 0x7a, 0x92, 0xd0, 0xd1, 0x82, 0xf6, 0x03, 0x05, 0x96, 0xf5, 0xd1, 0x80, 0x84,
	0x05, 0x0d, 0xc7, 0x70, 0xf0, 0x9e, 0x31, 0x44, 0x0f, 0x60, 0xd1, 0x62, 0x55, 0x2d, 0x9b, 0xd4,
	0xd1, 0x1e, 0xf3, 0x5b, 0x5b, 0x41, 0x2d, 0x92, 0x3b, 0x4a, 0x65, 0xae, 0xb4, 0x96, 0x50, 0x45,
	0x66, 0x14, 0x20, 0x99, 0x69, 0x46, 0xff, 0x96, 0x85, 0x34, 0x93, 0x49, 0x20, 0x0c, 0xd9, 0x84,
	0x34, 0x0b, 0x50, 0x68, 0xaf, 0xf9, 0x10, 0xdb, 0xc3, 0x4c, 0xa5, 0xce, 0xc9, 0xc6, 0x5a, 0x92,
	0x8c, 0xa3, 0x25, 0x05, 0xc8, 0x92, 0x60, 0xc2, 0x1c, 0xf4, 0x8e, 0x79, 0x6c, 0xe2, 0x95, 0xd1,
	0xdb, 0x90, 0xe9, 0x31, 0x93, 0x4f, 0xad, 0xd4, 0x7c, 0x88, 0x2b, 0x95, 0x1c, 0x83, 0xee, 0x92,
	0xa3, 0xeb, 0x90, 0x6a, 0x13, 0x71, 0x50, 0x3b, 0x36, 0x39, 0x40, 0x60, 0x84, 0x68, 0x13, 0xe6,
	0xec, 0x21, 0x6e, 0x53, 0x2b, 0x16, 0xb6, 0xb1, 0xc7, 0x26, 0x44, 0xa7, 0x84, 0x44, 0x98, 0x23,
	0xdb, 0x38, 0xc4, 0xdc, 0xe7, 0xb2, 0x82, 0x1c, 0x9d, 0xe4, 0x66, 0x88, 0x4e, 0xc6, 0x26, 0x1e,
	0xe2, 0x99, 0xf8, 0x1b, 0x64, 0x93, 0x1a, 0xce, 0xc8, 0xa6, 0x86, 0x6a, 0x69, 0xeb, 0x5c, 0x14,
	0x64, 0x4a, 0xa4, 0x73, 0x62, 0xb4, 0x05, 0x29, 0xa6, 0x7b, 0x0b, 0xb4, 0xd7, 0xda, 0x84, 0x5e,
	0x58, 0x67, 0xa4, 0xe8, 0x02, 0xcc, 0x1b, 0x8e, 0x63, 0x10, 0xa3, 0xd1, 0x32, 0x07, 0xd4, 0x6e,
	0xe5, 0x74, 0x70, 0xab, 0xea, 0x03, 0xb4, 0x0d, 0x4b, 0x1e, 0x01, 0x1b, 0x7d, 0x29, 0x62, 0xf4,
	0x12, 0x25, 0x63, 0xa3, 0x2f, 0xba, 0x7d, 0x1a, 0x2e, 0x97, 0x0e, 0x3e, 0xea, 0xb6, 0x71, 0x8b,
	0x86, 0xbd, 0xdc, 0xb2, 0xb1, 0xaa, 0x7d, 0x12, 0xfc, 0x5e, 0x03, 0x64, 0xe3, 0xf6, 0xc8, 0xc2,
	0x2d, 0x91, 0xce, 0x35, 0x6d, 0xb4, 0xa5, 0x3c, 0xa6, 0xf6, 0x40, 0x33, 0xb2, 0x15, 0xba, 0x39,
	0x39, 0x68, 0x4a, 0x70, 0xd7, 0x23, 0xe8, 0x0e, 0x1e, 0x99, 0x79, 0x44, 0xf7, 0xe2, 0x95, 0x08,
	0x79, 0x70, 0xe0, 0xd5, 0xc1, 0x23, 0x93, 0x6d, 0x40, 0x3e, 0x12, 0xa9, 0x40, 0xef, 0xc1, 0x82,
	0xe0, 0x1b, 0xec, 0xfc, 0x09, 0x3a, 0xd4, 0x44, 0xe7, 0x30, 0x3f, 0x76, 0x0e, 0x36, 0xaa, 0xf8,
	0xed, 0xc2, 0x49, 0x3a, 0xc0, 0xfa, 0x34, 0xbb, 0x20, 0x5b, 0x01, 0xa2, 0x91, 0xd8, 0xb2, 0x4c,
	0x8b, 0x9a, 0xe7, 0x9c, 0xce, 0x0a, 0xe8, 0x03, 0x50, 0xb9, 0x93, 0x6c, 0x9b, 0x03, 0x7b, 0xd4,
	0xc7, 0x96, 0x9d, 0x5f, 0xa5, 0xe3, 0x5f, 0x88, 0x98, 0xeb, 0x36, 0xa7, 0xd3, 0x97, 0x8f, 0xa4,
	0xb2, 0x5d, 0x78, 0x17, 0x96, 0x7d, 0x72, 0x98, 0xc9, 0xca, 0xfc, 0x59, 0x02, 0x52, 0x04, 0xaa,
	0x4d, 0x68, 0xc8, 0x2e, 0xb7, 0x69, 0xbf, 0x39, 0x9d, 0x15, 0xd0, 0x69, 0xc8, 0x90, 0x1f, 0xad,
	0xbe, 0xcd, 0xa3, 0x9f, 0x34, 0x29, 0xee, 0xd9, 0x24, 0x9c, 0xa1, 0x0d, 0x0f, 0x8f, 0x1d, 0x6c,
	0x53, 0xbb, 0x32, 0xa7, 0xe7, 0x48, 0xcd, 0x6d, 0x52, 0x41, 0xfc, 0x15, 0x3d, 0xad, 0xd8, 0xd4,
	0x82, 0xcc, 0xe9, 0xbc, 0x44, 0xc2, 0x1c, 0xfa, 0x8b, 0x0c, 0xc8, 0x4e, 0x38, 0x19, 0x5a, 0xde,
	0xb3, 0x89, 0x76, 0xb0, 0x26, 0x36, 0x64, 0x9a, 0xb6, 0x02, 0xad, 0x62, 0x63, 0x5e, 0x80, 0x79,
	0x16, 0xdb, 0x1c, 0x12, 0x3f, 0xc4, 0x23, 0x6e, 0xa0, 0x01, 0x0c, 0xad, 0x41, 0x27, 0x20, 0xd5,
	0x35, 0xc9, 0xc8, 0x59, 0xf7, 0xec, 0xc4, 0x80, 0xd2, 0x01, 0x5b, 0xf4, 0x74, 0xc3, 0x4e, 0x3c,
	0x39, 0x5a, 0x43, 0x43, 0x72, 0x32, 0x28, 0x0f, 0x5e, 0x48, 0x4f, 0xe0, 0x83, 0xf2, 0xaa, 0x3d,
	0x5b, 0xfb, 0xef, 0x04, 0xa4, 0x4a, 0x3d, 0x6c, 0x39, 0x82, 0x19, 0x4e, 0x52, 0x33, 0xfc, 0x0e,
	0x39, 0x78, 0x1d, 0x61, 0xab, 0xeb, 0x1c, 0xf3, 0x63, 0x48, 0x70, 0xc3, 0x37, 0x38, 0x01, 0xb5,
	0x13, 0x1e, 0x39, 0x01, 0x65, 0x90, 0x31, 0x5b, 0xce, 0xf1, 0x10, 0x53, 0xe9, 0x25, 0xf5, 0x1c,
	0xad, 0x21, 0x84, 0xc4, 0x89, 0xf6, 0xb1, 0x4d, 0x4d, 0x19, 0x3b, 0x75, 0xb8, 0x45, 0xf4, 0x36,
	0xe4, 0xbc, 0x63, 0x2d, 0xb7, 0xc0, 0x93, 0x8c, 0xd9, 0x98, 0x98, 0x4c, 0xd4, 0xe2, 0xe7, 0xda,
	0x56, 0xb7, 0x43, 0xc5, 0x9b, 0x23, 0x01, 0x11, 0xab, 0xaa, 0xd2, 0xe9, 0xb8, 0x25, 0x1e, 0x38,
	0x9e, 0x0b, 0xd9, 0x2e, 0x8c, 0x80, 0x4d, 0xc7, 0x25, 0x27, 0x78, 0xdb, 0x3d, 0x4c, 0x43, 0x34,
	0x16, 0x3b, 0xba, 0x45, 0xa2, 0x8b, 0x8e, 0xd3, 0xe3, 0x62, 0x27, 0x3f, 0xc9, 0xd4, 0x47, 0x83,
	0xee, 0xd3, 0x11, 0x6e, 0x39, 0xc6, 0x21, 0x95, 0x77, 0x4e, 0xcf, 0xb1, 0x9a, 0xa6, 0x71, 0xa8,
	0xbd, 0x05, 0x69, 0x2a, 0x6d, 0x9b, 0x38, 0x2d, 0x2a, 0x11, 0xee, 0x92, 0x83, 0x4e, 0x8b, 0xd2,
	0xe9, 0x8c, 0x48, 0xfb, 0x87, 0x04, 0x2c, 0xd7, 0x1f, 0x7e, 0x8c, 0xdb, 0x0e, 0x21, 0xc1, 0xd4,
	0x08, 0x90, 0x23, 0xed, 0xc8, 0xf3, 0x9c, 0xf4, 0x37, 0x39, 0x4a, 0xf3, 0xbd, 0xd7, 0x75, 0x8f,
	0x0a, 0x59, 0x56, 0x51, 0xa5, 0xc1, 0x0b, 0x1e, 0x18, 0x0f, 0x7b, 0xb8, 0x43, 0xd7, 0x24, 0xab,
	0xbb, 0x45, 0x16, 0x7f, 0x51, 0xd3, 0xce, 0x16, 0xc4, 0xb5, 0xdd, 0xab, 0x90, 0x36, 0xda, 0x24,
	0x4e, 0xe4, 0x41, 0x3b, 0x2f, 0xd1, 0x05, 0x6e, 0xb7, 0xb1, 0x6d, 0xb7, 0xc8, 0x56, 0x64, 0xc2,
	0xce, 0xb1, 0x9a, 0x7b, 0x98, 0xae, 0xbf, 0x8d, 0xdb, 0x16, 0x76, 0x68, 0x73, 0x86, 0x35, 0xb3,
	0x1a, 0xd2, 0x4c, 0xc3, 0xcd, 0xce, 0xd0, 0xec, 0x0e, 0x1c, 0xa2, 0xcc, 0xc4, 0x4c, 0x8e, 0x2b,
	0xd0, 0x2b, 0xa0, 0xb6, 0x47, 0x16, 0x39, 0xf3, 0xb4, 0xf0, 0xa0, 0xb3, 0x4f, 0x2a, 0xa9, 0x80,
	0x73, 0xfa, 0x32, 0xaf, 0xaf, 0xf0, 0x6a, 0x6a, 0x71, 0x19, 0x8c, 0xa1, 0x69, 0x31, 0x3f, 0x96,
	0xd4, 0x39, 0xb2, 0x7d, 0xd3, 0x72, 0xe8, 0x0d, 0x01, 0x3e, 0x24, 0xf8, 0xd9, 0xc9, 0x9e, 0x97,
	0xb4, 0xbf, 0x56, 0xe0, 0x04, 0x37, 0x3d, 0x16, 0x26, 0x9e, 0x01, 0x3f, 0x1d, 0x61, 0xdb, 0x11,
	0xfd, 0xbf, 0x32, 0x9b, 0xff, 0x9f, 0x39, 0x68, 0x71, 0xdd, 0x7f, 0x32, 0xa6, 0xfb, 0xd7, 0x2e,
	0xc3, 0x12, 0xab, 0xd3, 0xb1, 0x3d, 0x34, 0x07, 0xb6, 0x60, 0x7e, 0x15, 0xc1, 0xfc, 0x6a, 0x43,
	0x38, 0x29, 0x4f, 0x8d, 0x53, 0xfb, 0xc3, 0xac, 0xbb, 0xc0, 0xad, 0x6d, 0xcb, 0xe2, 0x24, 0x1c,
	0x7a, 0x94, 0x95, 0x76, 0x47, 0xd2, 0x97, 0x8e, 0xa4, 0xb2, 0xf6, 0xf7, 0x8a, 0x1b, 0xdf, 0x52,
	0xb7, 0x50, 0x62, 0x3a, 0x72, 0x13, 0xd2, 0xcc, 0x63, 0x51, 0x9e, 0x4b, 0x5b, 0x5a, 0xc4, 0xb0,
	0x8c, 0x7c, 0xdf, 0xb0, 0x8c, 0xbe, 0xce, 0x7b, 0xa0, 0xb7, 0x21, 0xd5, 0x37, 0x47, 0x03, 0x87,
	0x1b, 0x9e, 0x38, 0x5d, 0x59, 0x07, 0xa2, 0x7a, 0xf4, 0x07, 0xf3, 0xc1, 0x49, 0xa6, 0x7a, 0xb4,
	0xc6, 0xf5, 0xd1, 0xa2, 0x2b, 0x9f, 0xf3, 0xbb, 0x7c, 0xed, 0xc7, 0x09, 0x50, 0xf9, 0x5c, 0xb0,
	0xf3, 0x22, 0xd4, 0x82, 0xad, 0x72, 0x22, 0x6e, 0x90, 0x77, 0xd3, 0xdb, 0x71, 0x4c, 0x31, 0xb4,
	0x49, 0xe1, 0x12, 0x9b, 0xbf, 0xb7, 0x2b, 0xef, 0x42, 0xc6, 0x1c, 0xd2, 0x4b, 0xbf, 0xfc, 0x1c,
	0x35, 0x2a, 0x1b, 0x51, 0x9d, 0xbd, 0xa9, 0x6d, 0xd4, 0x59, 0x07, 0x16, 0x62, 0xb8, 0xdd, 0x0b,
	0x37, 0x61, 0x41, 0x6c, 0x98, 0xc9, 0xe7, 0x7e, 0x6b, 0xac, 0x0d, 0x84, 0x0d, 0xd7, 0xbe, 0x4d,
	0x48, 0x33, 0xad, 0xe1, 0x12, 0x3c, 0x1d, 0xa5, 0x64, 0x9c, 0xec, 0x05, 0xaa, 0xe7, 0x31, 0xac,
	0x34, 0x06, 0xc6, 0x50, 0xde, 0xe9, 0xfe, 0xdd, 0x20, 0x2c, 0x71, 0x62, 0xb6, 0x25, 0x16, 0xcf,
	0x13, 0x49, 0xf9, 0x3c, 0xa1, 0x3d, 0x05, 0x24, 0xb2, 0xe6, 0xb2, 0xf8, 0x35, 0x58, 0x75, 0x03,
	0x24, 0xda, 0x30, 0x9e, 0x21, 0x93, 0xcd, 0xa5, 0xa8, 0x30, 0x49, 0x1a, 0x46, 0x3f, 0x79, 0x14,
	0x52, 0xab, 0x39, 0xee, 0xcd, 0x0f, 0xf5, 0x11, 0x92, 0x3f, 0x50, 0x7c, 0xfe, 0x20, 0xec, 0xbe,
	0xf7, 0x06, 0x64, 0x38, 0xe3, 0x38, 0x96, 0xc9, 0xa5, 0xd5, 0x7e, 0xa8, 0xb8, 0xd6, 0xc9, 0x8d,
	0xdd, 0x42, 0xaf, 0xdf, 0xd6, 0x20, 0x47, 0xfe, 0xb7, 0x87, 0x46, 0xdb, 0xd5, 0x9c, 0x71, 0x05,
	0xe9, 0xe1, 0x05, 0x0c, 0x39, 0x9d, 0xfe, 0x26, 0x11, 0x1a, 0x39, 0xde, 0x12, 0xf8, 0xdc, 0x35,
	0x91, 0x62, 0xb5, 0x43, 0x36, 0xba, 0xf9, 0xc9, 0x00, 0x5b, 0x2d, 0xca, 0x24, 0xc5, 0xc6, 0xa2,
	0x35, 0x35, 0xc2, 0xc9, 0x6b, 0xa6, 0x23, 0xa6, 0x85, 0x66, 0xe2, 0xdc, 0xb5, 0x0e, 0xa0, 0x3b,
	0x96, 0x31, 0x7c, 0x5c, 0xb6, 0xba, 0x47, 0xd8, 0xda, 0x7e, 0x6c, 0x0c, 0x0e, 0xb1, 0xed, 0x09,
	0x44, 0x11, 0x04, 0x72, 0x13, 0xe6, 0x9e, 0x74, 0x07, 0x1d, 0x6e, 0x89, 0x2e, 0x87, 0x9c, 0x2d,
	0x7d, 0xc3, 0xd0, 0xe0, 0x81, 0xf6, 0xd1, 0xae, 0xc0, 0xf2, 0x76, 0x6f, 0x64, 0x3b, 0xd8, 0x9a,
	0x62, 0xb3, 0xff, 0x50, 0x81, 0x45, 0xb2, 0x99, 0x8f, 0x3c, 0xfd, 0xbc, 0x0b, 0x59, 0x1d, 0x3f,
	0xc5, 0xb6, 0x73, 0xef, 0x3e, 0x8f, 0x10, 0xae, 0x05, 0x23, 0x04, 0xb1, 0xc7, 0x86, 0x4b, 0xce,
	0xb6, 0xb2, 0xd7, 0xbb, 0x70, 0x0b, 0x16, 0xa5, 0x26, 0x71, 0x33, 0x27, 0xa7, 0x6d, 0xe6, 0x4f,
	0x61, 0x49, 0xe2, 0x62, 0x23, 0x0d, 0x16, 0xf8, 0xef, 0x6d, 0x6a, 0xa1, 0xd9, 0x30, 0x52, 0x1d,
	0x2a, 0xfb, 0x66, 0xc3, 0x6f, 0x59, 0xcf, 0x4f, 0x9e, 0x81, 0x2e, 0x77, 0xd2, 0xfe, 0x4a, 0x81,
	0x55, 0x7a, 0x72, 0x9f, 0xbe, 0x7b, 0xef, 0x41, 0x7a, 0x57, 0xbc, 0xcf, 0x7d, 0x23, 0xfc, 0x0a,
	0x20, 0x30, 0x90, 0x7c, 0x09, 0xbd, 0xfb, 0x4b, 0x5f, 0x42, 0xff, 0xa7, 0x02, 0xa7, 0x03, 0x9c,
	0xf8, 0xca, 0x1f, 0x40, 0xce, 0xbd, 0x0d, 0xb3, 0xf9, 0x92, 0x7e, 0x7e, 0x3a, 0x4c, 0xd6, 0x79,
	0xa3, 0xe1, 0xf6, 0x64, 0x50, 0xc7, 0x23, 0x8d, 0x15, 0x2a, 0x21, 0x28, 0x54, 0xc1, 0x80, 0x25,
	0xb9, 0x4b, 0xc8, 0x34, 0xde, 0x11, 0xa7, 0x31, 0xbf, 0xf5, 0x72, 0x30, 0x62, 0x09, 0xe0, 0x10,
	0xe7, 0xfa, 0xf3, 0x39, 0xef, 0x05, 0xa3, 0x66, 0x76, 0x82, 0xf1, 0x85, 0x0a, 0xc9, 0xf6, 0x70,
	0x44, 0x07, 0x57, 0x74, 0xf2, 0x93, 0x18, 0xa3, 0x3e, 0xee, 0xb7, 0x1c, 0xd3, 0x31, 0x7a, 0xfc,
	0x4c, 0x95, 0xed, 0xe3, 0x3e, 0x7d, 0x54, 0x20, 0x47, 0x27, 0xd2, 0x48, 0x8f, 0x31, 0xec, 0x50,
	0x95, 0xe9, 0xe3, 0x3e, 0x3d, 0xc4, 0xf0, 0xa6, 0x47, 0x16, 0xc6, 0xee, 0xa9, 0xaa, 0x8f, 0xfb,
	0x3b, 0x16, 0xa6, 0xf7, 0xca, 0xc6, 0xd1, 0x61, 0xab, 0x67, 0x1a, 0x2c, 0xe6, 0x4f, 0xea, 0x19,
	0xe3, 0xe8, 0x70, 0xd7, 0x34, 0xd8, 0x35, 0x12, 0x8b, 0x69, 0x33, 0x11, 0xf7, 0x1b, 0xbe, 0x8b,
	0x8a, 0x77, 0x21, 0xd5, 0xe9, 0xda, 0x4f, 0xdc, 0xd7, 0x8b, 0x2b, 0x51, 0xaf, 0x17, 0x64, 0xb6,
	0x1b, 0x65, 0x42, 0xc9, 0x16, 0x83, 0xf5, 0x42, 0x5b, 0x90, 0x1a, 0x9a, 0xa6, 0x77, 0x27, 0xbc,
	0x36, 0xe9, 0xf1, 0x43, 0x67, 0xa4, 0xc4, 0xba, 0xf5, 0x0f, 0xfb, 0x4e, 0xab, 0x3b, 0x74, 0x03,
	0x54, 0x52, 0xac, 0x0e, 0x49, 0x43, 0xc7, 0x70, 0x0c, 0xd2, 0xb0, 0xc0, 0x1a, 0x48, 0xb1, 0x4a,
	0x6f, 0xaf, 0x1e, 0x9b, 0xb6, 0x43, 0x8d, 0x1e, 0xbb, 0xb0, 0xf0, 0xca, 0x68, 0x0f, 0xe6, 0xa9,
	0xad, 0xe4, 0x77, 0xd3, 0x6a, 0x84, 0xd9, 0x10, 0xa7, 0x41, 0xfe, 0x11, 0xf7, 0x00, 0x0c, 0xbc,
	0x8a, 0xc2, 0x17, 0x01, 0xc6, 0xb3, 0x0c, 0xd1, 0x9f, 0xb7, 0x64, 0xfd, 0x59, 0x8f, 0x62, 0xe4,
	0x9e, 0xaa, 0x04, 0xe5, 0x21, 0xe7, 0x7a, 0x1f, 0xeb, 0x99, 0xf6, 0xd9, 0x57, 0x15, 0x58, 0xe2,
	0xa3, 0x73, 0x03, 0x2b, 0x2c, 0xb7, 0x12, 0x6f, 0xb9, 0x99, 0xbe, 0x26, 0x3c, 0x7d, 0x15, 0x3c,
	0x4d, 0x52, 0xf2, 0x34, 0x67, 0x20, 0xcb, 0x1b, 0x58, 0x5c, 0x95, 0xd3, 0x33, 0xac, 0xc5, 0xd6,
	0x7a, 0x70, 0xbe, 0xd1, 0x79, 0xe2, 0x5e, 0x6e, 0xef, 0x9b, 0xbd, 0x6e, 0xfb, 0x58, 0xb6, 0x54,
	0x1f, 0xc0, 0x92, 0xdc, 0xcc, 0x7d, 0x7c, 0x30, 0xae, 0x0b, 0x0c, 0xa4, 0xfb, 0x7a, 0x6a, 0x17,
	0xe1, 0x42, 0x24, 0x37, 0xee, 0xfd, 0xc3, 0x00, 0x1d, 0x0c, 0x3b, 0xff, 0x8f, 0x80, 0x5c, 0x6e,
	0x1c, 0xd0, 0xcb, 0x70, 0x31, 0x40, 0x52, 0x19, 0x90, 0x00, 0x61, 0x8c, 0x49, 0xeb, 0x80, 0x36,
	0x89, 0x88, 0x1b, 0xd0, 0xf7, 0x20, 0x3b, 0x24, 0x4d, 0x5d, 0xec, 0xda, 0xcf, 0x38, 0x98, 0xbd,
	0x3e, 0xda, 0x8d, 0x10, 0xb4, 0xd5, 0x01, 0x89, 0xba, 0xbd, 0x40, 0x3f, 0x24, 0x66, 0xd1, 0xbe,
	0x0c, 0xeb, 0xd1, 0xdd, 0x38, 0xb4, 0x9b, 0x90, 0x1e, 0xce, 0x2a, 0x4c, 0xde, 0x43, 0x7b, 0x33,
	0x64, 0xc9, 0xca, 0xb8, 0x87, 0xc7, 0x4b, 0x16, 0x86, 0x2a, 0x4c, 0xf4, 0x6e, 0x2f, 0x2e, 0xfa,
	0x6d, 0x58, 0x09, 0x90, 0x84, 0x46, 0x65, 0x05, 0xc8, 0x7a, 0xef, 0x36, 0xfc, 0xce, 0xc0, 0x2d,
	0x6b, 0x6d, 0xca, 0x67, 0xdb, 0xc2, 0x1d, 0x3c, 0x70, 0xba, 0x46, 0x8f, 0xe9, 0x5b, 0xe9, 0xd3,
	0x91, 0xe5, 0xc1, 0x7b, 0x1f, 0xa0, 0xed, 0xb5, 0x73, 0x01, 0x04, 0x8d, 0x01, 0xed, 0x32, 0x1e,
	0x47, 0x17, 0xfa, 0x68, 0x77, 0xa8, 0x88, 0x23, 0x98, 0x70, 0x11, 0xbf, 0x0c, 0x8b, 0xe3, 0x1e,
	0xe3, 0x68, 0x76, 0x61, 0x5c, 0x59, 0xed, 0x68, 0x38, 0x74, 0xa0, 0x3b, 0xf4, 0x02, 0xc9, 0x85,
	0x5b, 0x0a, 0x81, 0x7b, 0x31, 0xe8, 0x88, 0x69, 0x9f, 0x08, 0xbc, 0x77, 0xa9, 0x52, 0x47, 0xb1,
	0x99, 0x05, 0xf0, 0x97, 0xe1, 0x5c, 0xd8, 0xcc, 0x1f, 0x34, 0x5c, 0xb4, 0xef, 0x86, 0xa0, 0x0d,
	0xb9, 0x87, 0x7b, 0x23, 0x02, 0x69, 0x85, 0x2a, 0x57, 0xe8, 0xf8, 0xb3, 0xc0, 0xfc, 0x0b, 0x05,
	0x16, 0x44, 0x1e, 0xb1, 0x7a, 0xf9, 0x6e, 0x89, 0x12, 0x93, 0x6f, 0x89, 0x92, 0xfe, 0x5b, 0xa2,
	0x02, 0x64, 0xdd, 0x4b, 0x21, 0x1e, 0xfa, 0x7b, 0x65, 0xe1, 0x5e, 0x27, 0x25, 0xdd, 0xeb, 0x7c,
	0x0a, 0xcb, 0x3e, 0x3d, 0x8b, 0x87, 0xf4, 0x22, 0x2c, 0x18, 0xed, 0x36, 0xbd, 0x37, 0xa0, 0xbb,
	0x83, 0x61, 0x9d, 0xe7, 0x75, 0xf4, 0x40, 0xc1, 0xee, 0x9a, 0x28, 0xc9, 0x18, 0x2e, 0xf0, 0xaa,
	0x7b, 0x98, 0x9c, 0xf5, 0x54, 0xbf, 0xd2, 0xc4, 0x16, 0xd3, 0xd0, 0x32, 0x3f, 0xc6, 0x6d, 0x67,
	0x7c, 0x69, 0x97, 0xe3, 0x35, 0xcc, 0xfd, 0x7c, 0x6c, 0x9b, 0x03, 0x81, 0x6b, 0x86, 0x94, 0x09,
	0x4b, 0xff, 0xbe, 0xf1, 0x6c, 0xa6, 0xa0, 0x40, 0xb1, 0xd6, 0xf7, 0xa1, 0x4f, 0xa1, 0xe5, 0x81,
	0xb8, 0xa6, 0xf8, 0x55, 0x31, 0x39, 0x9b, 0x2a, 0x56, 0xa9, 0x91, 0x0f, 0xe3, 0x21, 0x1a, 0x93,
	0x58, 0x70, 0x0f, 0xe1, 0xe5, 0x89, 0x43, 0x71, 0xc0, 0xef, 0x87, 0x00, 0x9e, 0xcd, 0x30, 0x7d,
	0x10, 0xc5, 0x48, 0x36, 0x29, 0xb1, 0x40, 0x77, 0xe1, 0x73, 0x93, 0xc7, 0xe2, 0xa8, 0x4b, 0x21,
	0xa8, 0x67, 0xb4, 0x4f, 0x25, 0x28, 0x48, 0xac, 0x64, 0x77, 0x12, 0x0b, 0xed, 0x39, 0x38, 0x1b,
	0x3a, 0x84, 0xe7, 0x5b, 0xd6, 0xa4, 0xe6, 0xfb, 0x46, 0xaf, 0x2b, 0x46, 0x19, 0xb1, 0x78, 0x5c,
	0xf0, 0x19, 0xbf, 0xf1, 0x20, 0x9c, 0xcb, 0xbf, 0x28, 0x70, 0xaa, 0xd1, 0x79, 0xc2, 0x2e, 0x16,
	0xf6, 0xc8, 0x46, 0x73, 0xc7, 0x9f, 0x78, 0xaf, 0x21, 0xdf, 0x01, 0x26, 0xfc, 0x77, 0x80, 0x7b,
	0xe3, 0x6b, 0xb2, 0x64, 0xc4, 0x69, 0x31, 0x94, 0xe9, 0x67, 0x70, 0x57, 0x96, 0x87, 0x55, 0x3f,
	0x2b, 0x3e, 0xf5, 0x7f, 0x55, 0xe0, 0xb4, 0xd7, 0x74, 0x30, 0xe8, 0xbf, 0xa8, 0xc9, 0xd7, 0xfd,
	0x93, 0xbf, 0x11, 0x3d, 0x79, 0x99, 0xed, 0x67, 0x30, 0xfd, 0x02, 0xe4, 0x83, 0xcc, 0xb8, 0x00,
	0xfe, 0x56, 0x11, 0x64, 0xc3, 0xde, 0x00, 0x63, 0xcd, 0xbf, 0x36, 0x9e, 0x20, 0xbb, 0x0b, 0x78,
	0x33, 0x7a, 0x82, 0xd2, 0xb0, 0x9f, 0xc1, 0xfc, 0x6e, 0x0a, 0x6b, 0xe8, 0xf2, 0xe2, 0xbb, 0xdc,
	0x77, 0x11, 0xad, 0x04, 0x2e, 0xa2, 0x6f, 0x08, 0xd3, 0x2f, 0xe3, 0xb8, 0xd3, 0xd7, 0xce, 0x08,
	0x2c, 0xdd, 0x6e, 0x5c, 0xa2, 0x5f, 0x12, 0x46, 0x94, 0x0f, 0x29, 0x61, 0x41, 0xe1, 0xac, 0x37,
	0xd7, 0xda, 0x5b, 0x02, 0x67, 0xdf, 0xd5, 0xc7, 0x44, 0xc4, 0xc7, 0xc2, 0x1e, 0xdf, 0xee, 0x99,
	0x83, 0x89, 0xa8, 0xce, 0x42, 0x8e, 0xe5, 0xc3, 0x09, 0xef, 0x5b, 0xac, 0xa2, 0xda, 0x99, 0xfd,
	0x49, 0x45, 0x94, 0x31, 0x67, 0x1d, 0x07, 0xb1, 0xbc, 0x34, 0xa2, 0x69, 0x9d, 0x61, 0x69, 0x24,
	0x73, 0x2a, 0xca, 0xce, 0x77, 0x24, 0x99, 0x38, 0xe4, 0x3d, 0x61, 0x03, 0xf9, 0xcf, 0x24, 0xb3,
	0xde, 0xb8, 0x6b, 0x07, 0x70, 0xc6, 0x1b, 0xcc, 0x7f, 0x44, 0xfb, 0xc5, 0x9f, 0x40, 0xb4, 0x5b,
	0xd4, 0x19, 0x05, 0x86, 0xe5, 0x28, 0xcf, 0x01, 0x78, 0xd3, 0x73, 0x13, 0x9a, 0x72, 0xee, 0xfc,
	0x6c, 0xed, 0x27, 0x0a, 0x0d, 0x60, 0xf9, 0xca, 0xf1, 0x1b, 0x2d, 0x59, 0x79, 0x27, 0x5a, 0x83,
	0x86, 0x97, 0x92, 0xca, 0x8c, 0xc1, 0xad, 0x68, 0x63, 0x10, 0x3a, 0xfa, 0x8b, 0xce, 0x52, 0xbd,
	0x4d, 0x8f, 0x53, 0xe1, 0x0c, 0xc7, 0x96, 0x61, 0x9c, 0x90, 0xe8, 0xce, 0x08, 0xbc, 0x54, 0xc4,
	0x8e, 0xd6, 0x0a, 0x19, 0x43, 0xc7, 0xf4, 0x5d, 0x38, 0x96, 0x4c, 0x7c, 0x0c, 0x12, 0x01, 0x06,
	0x1a, 0x0d, 0x2b, 0x23, 0x18, 0x70, 0x8d, 0xfd, 0x99, 0x42, 0x43, 0x46, 0x99, 0x28, 0xa0, 0x35,
	0x13, 0x71, 0xdc, 0xf7, 0xad, 0xcd, 0x7b, 0xd3, 0xd7, 0xc6, 0xcf, 0xe0, 0x45, 0x2f, 0x4f, 0x93,
	0xc6, 0xa8, 0x91, 0x3c, 0xf9, 0x0a, 0x6d, 0xc0, 0x09, 0x3e, 0x2b, 0x41, 0x8e, 0xae, 0xf2, 0xae,
	0x1c, 0x49, 0xbd, 0x89, 0x12, 0xaf, 0xb1, 0x70, 0x8c, 0x5d, 0x54, 0x05, 0x2e, 0x3f, 0x3e, 0x64,
	0x91, 0x56, 0xa0, 0x95, 0x33, 0x7b, 0x07, 0x32, 0x6d, 0xd6, 0xc6, 0x37, 0xde, 0x85, 0xa8, 0x7b,
	0x36, 0xf7, 0xa9, 0xc1, 0xa5, 0xd7, 0xde, 0xa0, 0xd6, 0x81, 0x57, 0xfb, 0xcc, 0x8a, 0x70, 0xdb,
	0xa5, 0x88, 0xb7, 0x5d, 0xda, 0x1e, 0xb5, 0x02, 0xfe, 0x4e, 0x1c, 0xcc, 0x75, 0x98, 0x23, 0x64,
	0x1c, 0xc9, 0xda, 0xa4, 0xab, 0x45, 0x9d, 0x52, 0x6a, 0x3f, 0x55, 0xd8, 0x05, 0x02, 0x1b, 0x8f,
	0xe6, 0x34, 0x04, 0xb4, 0xe4, 0x1d, 0x00, 0x37, 0x15, 0xc9, 0x72, 0xf8, 0xd8, 0x53, 0xd3, 0x3e,
	0x1a, 0x84, 0x18, 0xdd, 0x80, 0x2c, 0xed, 0x8a, 0xf9, 0x0b, 0xcd, 0xe4, 0x8e, 0x19, 0x42, 0x5b,
	0x19, 0xc8, 0xc9, 0x20, 0xc9, 0x99, 0x92, 0x41, 0x34, 0x9d, 0x9d, 0xb9, 0xc2, 0xe7, 0xe3, 0x29,
	0x48, 0x9a, 0xa6, 0x6d, 0xd8, 0x53, 0x92, 0x3b, 0x38, 0x95, 0x66, 0x8b, 0x2a, 0x40, 0x9b, 0xb6,
	0x7b, 0xd8, 0xb0, 0xc6, 0xf2, 0x19, 0xa3, 0x55, 0x66, 0x4b, 0x5d, 0x39, 0x03, 0x59, 0x96, 0x89,
	0xc3, 0x37, 0x7a, 0x52, 0xcf, 0xd0, 0x72, 0xb5, 0xa3, 0x9d, 0x67, 0x21, 0x7c, 0x90, 0xa9, 0xf7,
	0x90, 0xe8, 0x6f, 0x97, 0x7d, 0xdd, 0x67, 0x83, 0x8a, 0x9f, 0x09, 0x42, 0xb8, 0x72, 0x58, 0x15,
	0x0a, 0x4b, 0xca, 0x85, 0x91, 0x14, 0xfb, 0x12, 0x2c, 0x99, 0xe3, 0xc6, 0xb1, 0x7e, 0x2f, 0x0a,
	0xb5, 0xd5, 0x8e, 0x36, 0xa4, 0x7c, 0xc2, 0x86, 0xe1, 0x6b, 0x58, 0x07, 0x24, 0x8e, 0x23, 0xdc,
	0x2d, 0x87, 0x1d, 0x22, 0x7d, 0xb9, 0x39, 0xfa, 0x8a, 0xd0, 0x97, 0xdd, 0x3b, 0x6b, 0xef, 0xd1,
	0x45, 0x16, 0x08, 0x65, 0x37, 0x76, 0x01, 0xe6, 0xb9, 0x51, 0x11, 0x82, 0x1e, 0xee, 0x1b, 0x6b,
	0x46, 0x1f, 0x6b, 0xa6, 0x7f, 0xe2, 0x3e, 0xbf, 0xf1, 0xc2, 0x01, 0x97, 0xfd, 0x80, 0xe5, 0xf5,
	0x8f, 0x29, 0xe8, 0xf3, 0x7e, 0xd8, 0xbe, 0xf5, 0xfc, 0x75, 0x3f, 0x17, 0xf9, 0xba, 0x3a, 0x1e,
	0x17, 0xb4, 0x0a, 0x69, 0x96, 0xcb, 0x44, 0xf5, 0x29, 0xab, 0xf3, 0x52, 0x90, 0xbb, 0xef, 0x7a,
	0xfa, 0x13, 0xbe, 0xf3, 0xcc, 0x51, 0xe7, 0xb6, 0xd1, 0x7e, 0x32, 0x1a, 0xce, 0x10, 0x5b, 0x5c,
	0x81, 0x65, 0xe1, 0x8c, 0x4b, 0x53, 0xb1, 0x98, 0x43, 0x59, 0x1a, 0x57, 0x1f, 0x8c, 0xd8, 0x77,
	0x55, 0x8f, 0x46, 0xbd, 0x1e, 0xcf, 0x0e, 0xa0, 0xbf, 0xb5, 0x5b, 0x7c, 0x77, 0x05, 0x18, 0x8f,
	0x03, 0xd0, 0x87, 0xb4, 0x5e, 0xe0, 0xcc, 0x2a, 0xaa, 0x1d, 0xed, 0x87, 0x8a, 0xbf, 0x77, 0xd0,
	0xff, 0x47, 0xf6, 0x26, 0xee, 0xcb, 0x62, 0xe4, 0x2d, 0x51, 0xe3, 0x18, 0xf6, 0x15, 0xde, 0x74,
	0xdf, 0x53, 0xbc, 0xb0, 0x79, 0x26, 0x43, 0xe7, 0x19, 0xf5, 0x56, 0xaf, 0xdd, 0xe3, 0x9b, 0x3a,
	0x08, 0x97, 0xcf, 0xb6, 0x08, 0x2b, 0x3e, 0x48, 0x1e, 0xee, 0x65, 0x09, 0x10, 0x3d, 0x2f, 0xf8,
	0x96, 0x2c, 0x10, 0x82, 0x47, 0x4f, 0x3d, 0xf6, 0x92, 0x9d, 0x84, 0x14, 0xfd, 0x5a, 0x80, 0xaf,
	0x19, 0x2b, 0x78, 0x26, 0x33, 0xc0, 0x9a, 0x6b, 0x53, 0x9f, 0xdd, 0xb6, 0xfa, 0xdb, 0x4b, 0xbd,
	0x9e, 0x8b, 0x4e, 0x83, 0x45, 0xdb, 0x6a, 0x07, 0x26, 0x39, 0x6f, 0x5b, 0xed, 0xfb, 0xb3, 0xea,
	0x15, 0x7f, 0x03, 0x08, 0x67, 0xc7, 0x11, 0x7d, 0x5f, 0xf1, 0x43, 0x0a, 0x78, 0xdf, 0x38, 0x90,
	0xce, 0x01, 0xf0, 0xa0, 0x42, 0xb8, 0xa2, 0xe4, 0x35, 0xe1, 0x88, 0xc3, 0x35, 0x44, 0x85, 0xa4,
	0xd1, 0xeb, 0xf1, 0xb4, 0x7b, 0xf2, 0x53, 0xfb, 0x79, 0x02, 0x90, 0x0c, 0x90, 0xe6, 0xad, 0xf8,
	0x1f, 0x93, 0x03, 0x20, 0x13, 0x41, 0x90, 0x97, 0x61, 0x59, 0xa0, 0xa1, 0x3a, 0xcd, 0x50, 0x2c,
	0x7a, 0x54, 0x54, 0x9f, 0xa5, 0x24, 0xd3, 0xb9, 0x59, 0x92, 0x4c, 0xf7, 0x84, 0x0f, 0xfa, 0x52,
	0xd4, 0xb3, 0xbf, 0x1e, 0x16, 0xb3, 0xfa, 0x26, 0xb3, 0xb1, 0xc7, 0xfb, 0xf0, 0xcc, 0x0c, 0x77,
	0x08, 0x54, 0xf2, 0x9e, 0x2c, 0xd9, 0xc7, 0x4f, 0xaf, 0x4c, 0x19, 0x8c, 0xd9, 0x65, 0x96, 0x93,
	0xcf, 0x3a, 0x16, 0x6e, 0xc1, 0xa2, 0x34, 0xfa, 0x4c, 0xd1, 0xee, 0xfb, 0x7e, 0xfd, 0x09, 0x3d,
	0x9e, 0x79, 0xbb, 0xc9, 0x3b, 0x9e, 0xb9, 0xdb, 0xc9, 0xd6, 0xfe, 0x2b, 0x01, 0x27, 0xc3, 0x30,
	0x4e, 0xde, 0x85, 0xef, 0x42, 0xda, 0x1c, 0xd2, 0xbc, 0x1c, 0x96, 0x54, 0x73, 0x69, 0xca, 0xbc,
	0xeb, 0x43, 0x36, 0x67, 0xd6, 0x49, 0x10, 0x5b, 0xf2, 0x17, 0x14, 0xdb, 0x38, 0x6b, 0xba, 0x63,
	0xf2, 0x2f, 0x54, 0xdd, 0xac, 0xe9, 0xb2, 0x39, 0x20, 0x31, 0x37, 0xd0, 0x58, 0xb4, 0x45, 0xbf,
	0xe8, 0x88, 0x91, 0x87, 0x4c, 0xa9, 0x49, 0x19, 0x95, 0x60, 0xa9, 0x6d, 0xf6, 0x87, 0x64, 0x1f,
	0x76, 0x5a, 0x31, 0x3f, 0x08, 0x59, 0xf4, 0x7a, 0xd0, 0x21, 0x04, 0x33, 0x9a, 0x91, 0xcc, 0xe8,
	0x03, 0xbf, 0xe5, 0xe3, 0x2f, 0xda, 0x33, 0x6c, 0xe4, 0x93, 0x90, 0x22, 0xe7, 0xf2, 0x1e, 0x77,
	0x93, 0xac, 0xa0, 0xfd, 0x73, 0xc0, 0x9f, 0xb8, 0x23, 0x73, 0x35, 0x78, 0x00, 0x59, 0x26, 0x39,
	0xef, 0xe9, 0xf5, 0x56, 0x2c, 0xa1, 0x8f, 0xf3, 0x57, 0x78, 0x6f, 0xbe, 0x05, 0xdc, 0xc1, 0x0a,
	0x0f, 0x61, 0x51, 0x6a, 0x0a, 0xd1, 0xdf, 0x5b, 0x72, 0x9a, 0xc1, 0xa5, 0x78, 0x8c, 0x05, 0x35,
	0xef, 0x04, 0x5c, 0xad, 0xe1, 0x18, 0x3d, 0xf3, 0xf0, 0x85, 0x7a, 0x0c, 0xed, 0x96, 0xdf, 0xc7,
	0x79, 0x5c, 0xb8, 0x0c, 0x0b, 0x90, 0x6d, 0x9b, 0x03, 0x07, 0x0f, 0x1c, 0x77, 0x23, 0x79, 0x65,
	0xed, 0x47, 0x0a, 0x3f, 0x75, 0x79, 0xbd, 0xef, 0x76, 0xc9, 0x14, 0x8f, 0xab, 0x0e, 0xee, 0xc7,
	0x5a, 0x58, 0xc9, 0xa8, 0x25, 0x66, 0x31, 0x6a, 0xbf, 0xfc, 0x76, 0xd2, 0x6e, 0xfb, 0x25, 0xcc,
	0xd1, 0xcf, 0xa0, 0x99, 0xda, 0xc0, 0x2f, 0x3f, 0x6f, 0x0c, 0x2e, 0xbf, 0x3d, 0x58, 0x78, 0xcc,
	0xaa, 0x5a, 0xbd, 0xae, 0xed, 0xe6, 0xcd, 0x17, 0xa7, 0xa0, 0x15, 0xe4, 0xa8, 0xcf, 0xf3, 0xfe,
	0xbb, 0x5d, 0xdb, 0x21, 0x9e, 0x71, 0x3d, 0x38, 0x31, 0xcc, 0x72, 0xf8, 0x66, 0xd9, 0x52, 0xf7,
	0x61, 0xd9, 0x62, 0xe4, 0xde, 0xb7, 0x48, 0xcc, 0xac, 0xbd, 0x36, 0x05, 0x9a, 0xee, 0xf6, 0x62,
	0x1f, 0x27, 0x2d, 0x59, 0x52, 0x99, 0x67, 0x4e, 0x44, 0xe1, 0x63, 0x42, 0x29, 0xfe, 0x4f, 0x02,
	0xd2, 0xdc, 0xe4, 0x2e, 0xc3, 0x7c, 0xa3, 0x59, 0x6a, 0x1e, 0x34, 0x5a, 0xb5, 0x7a, 0xad, 0xa2,
	0xbe, 0x24, 0x54, 0x54, 0x6b, 0xd5, 0xa6, 0xaa, 0xa0, 0x45, 0xc8, 0xf1, 0x8a, 0xfa, 0x3d, 0x35,
	0x81, 0x10, 0x2c, 0xb9, 0xc5, 0x9d, 0x9d, 0xdd, 0x6a, 0xad, 0xa2, 0x26, 0x91, 0x0a, 0x0b, 0xbc,
	0xae, 0xa2, 0xeb, 0x75, 0x5d, 0x9d, 0x43, 0x79, 0x38, 0xe9, 0x0d, 0xdb, 0x6c, 0x55, 0x6b, 0xad,
	0x2f, 0x1c, 0xd4, 0xf5, 0x83, 0x3d, 0x35, 0x85, 0x4e, 0xc3, 0x09, 0xde, 0x52, 0xae, 0x6c, 0xd7,
	0xf7, 0xf6, 0xaa, 0x8d, 0x46, 0xb5, 0x5e, 0x53, 0xd3, 0x68, 0x15, 0x10, 0x6f, 0xd8, 0x2b, 0x55,
	0x6b, 0xcd, 0x4a, 0xad, 0x54, 0xdb, 0xae, 0xa8, 0x19, 0xa1, 0x43, 0xa3, 0x59, 0xd7, 0x4b, 0x77,
	0x2a, 0xad, 0x72, 0xfd, 0x41, 0x4d, 0xcd, 0xa2, 0xb3, 0x70, 0xda, 0xdf, 0x50, 0xb9, 0xa3, 0x97,
	0xca, 0x95, 0xb2, 0x9a, 0x13, 0x7a, 0xd5, 0x2a, 0x95, 0x72, 0xa3, 0xa5, 0x57, 0x6e, 0xd7, 0xeb,
	0x4d, 0x15, 0xd0, 0x1a, 0xe4, 0x7d, 0xbd, 0xf4, 0xca, 0xed, 0xd2, 0x2e, 0x65, 0x36, 0x8f, 0xd6,
	0x61, 0xcd, 0x3f, 0xa6, 0x5e, 0xbd, 0x4f, 0x68, 0xf6, 0x77, 0x4b, 0xdb, 0x15, 0x75, 0x01, 0xbd,
	0x0c, 0x17, 0xc2, 0x66, 0xd6, 0xaa, 0xd5, 0xdd, 0x2e, 0xea, 0x22, 0x5a, 0x02, 0xf0, 0xe6, 0xf2,
	0xa1, 0xba, 0x54, 0xfc, 0x9e, 0x02, 0xc0, 0xb2, 0x3d, 0xe9, 0xa7, 0x2c, 0x27, 0x41, 0xa5, 0xc3,
	0xea, 0xad, 0xe6, 0x47, 0xfb, 0x15, 0x57, 0xf2, 0xbe, 0xda, 0x9d, 0xea, 0x6e, 0x45, 0x55, 0xd0,
	0x29, 0x58, 0x11, 0x6b, 0x6f, 0xef, 0xd6, 0xb7, 0xc9, 0x32, 0xac, 0x02, 0x12, 0xab, 0xeb, 0xb7,
	0x3f, 0xa8, 0x6c, 0x37, 0xd5, 0x24, 0x3a, 0x03, 0xa7, 0xc4, 0xfa, 0xed, 0xdd, 0x83, 0x46, 0xb3,
	0xa2, 0x57, 0xca, 0xea, 0x9c, 0x7f, 0xa4, 0x3b, 0x7a, 0x69, 0xff, 0xae, 0x9a, 0x2a, 0x7e, 0x57,
	0x81, 0x34, 0xfb, 0x66, 0x8f, 0xac, 0xe3, 0x4e, 0x43, 0xc2, 0xb4, 0x02, 0x8b, 0x6e, 0xcd, 0xed,
	0xa6, 0xbe, 0xd3, 0x50, 0x15, 0x91, 0xa8, 0xf2, 0x61, 0xf3, 0x4d, 0x35, 0x21, 0xd6, 0xec, 0x1c,
	0x34, 0x88, 0x42, 0x2c, 0xc3, 0xbc, 0x37, 0xd0, 0x4e, 0x43, 0x9d, 0x13, 0x2b, 0xee, 0xef, 0x34,
	0xd4, 0x94, 0x58, 0xf1, 0xe1, 0x4e, 0x43, 0x4d, 0x8b, 0x15, 0x5f, 0xdc, 0x69, 0xa8, 0x99, 0xe2,
	0x0f, 0x14, 0x38, 0x15, 0x9a, 0x26, 0x8b, 0x2e, 0xc2, 0x39, 0x0a, 0xbe, 0xc5, 0xa7, 0xb3, 0x7d,
	0xb7, 0x54, 0xbb, 0x53, 0x91, 0x70, 0x5f, 0x82, 0x8b, 0x91, 0x24, 0x7b, 0xf5, 0x72, 0x75, 0xa7,
	0x5a, 0x29, 0xab, 0x0a, 0xd2, 0xe0, 0x7c, 0x24, 0x59, 0xa9, 0x4c, 0x34, 0x29, 0x81, 0x3e, 0x07,
	0xeb, 0x91, 0x34, 0xe5, 0xca, 0x6e, 0xa5, 0x59, 0x29, 0xab, 0xc9, 0xa2, 0x03, 0x0b, 0xe2, 0x67,
	0x4d, 0x54, 0x9b, 0x2b, 0xf7, 0x2b, 0x7a, 0xb5, 0xf9, 0x91, 0x04, 0x8c, 0xe8, 0xa5, 0x54, 0x5f,
	0xda, 0x2d, 0xe9, 0x7b, 0xaa, 0x42, 0x16, 0x4e, 0x6e, 0x78, 0x50, 0xd2, 0x6b, 0xd5, 0xda, 0x1d,
	0x35, 0x41, 0x37, 0x93, 0x6f, 0xac, 0x66, 0x75, 0xe7, 0x23, 0x35, 0x59, 0xfc, 0x86, 0x02, 0x0b,
	0xe2, 0x6d, 0x09, 0x61, 0xab, 0x57, 0x1a, 0xf5, 0x03, 0x7d, 0x5b, 0x96, 0x47, 0x1e, 0x4e, 0xca,
	0xf5, 0xf7, 0xeb, 0xbb, 0x07, 0x7b, 0x44, 0xbf, 0x42, 0x7a, 0x94, 0x2b, 0x6a, 0x82, 0xe0, 0x91,
	0xeb, 0xb9, 0x2a, 0xa9, 0x49, 0x32, 0x07, 0xb9, 0x89, 0x4a, 0x46, 0x9d, 0x2b, 0x7e, 0x4d, 0x81,
	0x65, 0x7a, 0xfb, 0xc2, 0x3e, 0x31, 0xa0, 0x88, 0x0a, 0xb0, 0x5a, 0xda, 0xad, 0xe8, 0xcd, 0x56,
	0x69, 0xbb, 0x59, 0xad, 0xd7, 0x24, 0x54, 0x6b, 0x90, 0x0f, 0xb6, 0x31, 0x99, 0xaa, 0x4a, 0x78,
	0xeb, 0xb6, 0x5e, 0x29, 0x35, 0x09, 0xbe, 0xd0, 0xd6, 0x83, 0xfd, 0x32, 0x69, 0x4d, 0x16, 0x3f,
	0x76, 0xbf, 0x26, 0x10, 0x3e, 0xf6, 0x20, 0x5d, 0xd8, 0xb4, 0xdd, 0x3e, 0xfb, 0x25, 0xbd, 0xb4,
	0xe7, 0x82, 0x39, 0x0b, 0xa7, 0xc3, 0x5a, 0xeb, 0x3b, 0x3b, 0xaa, 0x42, 0x66, 0x11, 0xda, 0x58,
	0x53, 0x13, 0xc5, 0x2d, 0xc8, 0xf0, 0x3f, 0x37, 0x80, 0xb2, 0x30, 0xc7, 0x47, 0xcb, 0x40, 0x72,
	0xb7, 0xfe, 0x40, 0x55, 0x10, 0x40, 0x7a, 0xaf, 0x52, 0xae, 0x1e, 0xec, 0xa9, 0x09, 0xd2, 0x7c,
	0xb7, 0x7a, 0xe7, 0xae, 0x9a, 0x2c, 0x7e, 0x05, 0x72, 0xde, 0xdf, 0x1b, 0x20, 0xa2, 0xae, 0xd6,
	0x5b, 0xfb, 0x7a, 0x9d, 0x6c, 0xf9, 0x56, 0xa3, 0xf2, 0x85, 0x83, 0x4a, 0xad, 0x59, 0x2d, 0xed,
	0xaa, 0x2f, 0x91, 0x3d, 0x2b, 0x34, 0xe9, 0xa5, 0x5a, 0xb9, 0x4e, 0x94, 0x65, 0x05, 0x16, 0x85,
	0xea, 0xf2, 0x6d, 0xa6, 0x24, 0x52, 0x55, 0x4b, 0xaf, 0xec, 0xd5, 0x89, 0x2c, 0x88, 0xc5, 0x16,
	0x5a, 0xb6, 0xf7, 0x1a, 0xea, 0x5c, 0xf1, 0x7b, 0x09, 0x98, 0x17, 0x3e, 0x09, 0x21, 0x7c, 0xf8,
	0xfc, 0x88, 0xdd, 0x12, 0xd5, 0x46, 0xaa, 0xde, 0xaf, 0xd4, 0xca, 0x44, 0x27, 0x45, 0x81, 0xb0,
	0x96, 0xd2, 0xfd, 0x52, 0x75, 0xb7, 0x74, 0x7b, 0x97, 0xab, 0x8e, 0xdc, 0xd6, 0x6c, 0x96, 0xb6,
	0xef, 0x92, 0x6d, 0x12, 0x68, 0x2a, 0x57, 0x78, 0xd3, 0x9c, 0x20, 0xff, 0x71, 0x53, 0x73, 0xfb,
	0x2e, 0x61, 0x97, 0x22, 0x5a, 0x2a, 0x35, 0x32, 0x3f, 0x93, 0x0e, 0x00, 0x74, 0x37, 0x64, 0x06,
	0x9d, 0x87, 0x82, 0xd4, 0xd2, 0xd4, 0x3f, 0xe2, 0xdc, 0xc8, 0x88, 0xd9, 0x40, 0x4f, 0xbd, 0x42,
	0xcc, 0x77, 0x45, 0xcd, 0x15, 0xbf, 0xad, 0xc0, 0x82, 0xf8, 0x4d, 0xb2, 0x8f, 0xf9, 0xd8, 0x55,
	0x9e, 0x83, 0x33, 0xfe, 0xfa, 0x66, 0x6b, 0x5f, 0xaf, 0x34, 0x2a, 0x35, 0xe2, 0x38, 0x4f, 0x82,
	0x2a, 0x37, 0x1f, 0xec, 0x33, 0xc3, 0x2d, 0xd7, 0x52, 0x6f, 0x96, 0xf4, 0x09, 0x94, 0xba, 0x47,
	0xee, 0xcc, 0xe6, 0x8a, 0x5f, 0x22, 0xf1, 0xae, 0xf0, 0xb7, 0x58, 0x98, 0xeb, 0x63, 0xfe, 0x89,
	0x29, 0x57, 0x6b, 0xaf, 0x74, 0xa7, 0x56, 0x69, 0x56, 0xb7, 0xd5, 0x97, 0x98, 0x23, 0x95, 0x1a,
	0x1b, 0x0d, 0x62, 0xec, 0xa8, 0x4b, 0x94, 0xea, 0x6b, 0xf7, 0xf7, 0x2a, 0x6a, 0xa2, 0x78, 0x15,
	0x16, 0xf9, 0xd5, 0x69, 0xcd, 0x74, 0xba, 0x8f, 0x8e, 0x09, 0x25, 0xdf, 0xed, 0xdc, 0xd4, 0x30,
	0x90, 0x2f, 0x15, 0x31, 0xcc, 0x0b, 0x5f, 0x46, 0x93, 0xd5, 0x64, 0x6b, 0xeb, 0xae, 0xca, 0x87,
	0xcd, 0x8a, 0x5e, 0xa3, 0x8a, 0xeb, 0x6f, 0x22, 0x1e, 0x9d, 0x36, 0x29, 0xc4, 0xc7, 0x86, 0x36,
	0xb5, 0x1a, 0x0f, 0xaa, 0xcd, 0xed, 0xbb, 0x6a, 0xa2, 0xd8, 0x84, 0xa5, 0xfa, 0x90, 0x1c, 0x29,
	0xbb, 0xe6, 0x60, 0xa7, 0x67, 0x1c, 0xda, 0x44, 0x96, 0xf5, 0xfd, 0xd6, 0xce, 0x6e, 0xe9, 0x4e,
	0xa3, 0x75, 0x50, 0xbb, 0x57, 0xa3, 0x70, 0xc8, 0x36, 0xf0, 0x6a, 0xe9, 0x9a, 0x50, 0x33, 0xea,
	0x55, 0xb1, 0xe5, 0x6e, 0xed, 0xd4, 0xf5, 0x6d, 0x32, 0xcd, 0xdf, 0xf0, 0x9f, 0x3a, 0xd9, 0x09,
	0x11, 0x5d, 0xf0, 0x1f, 0x90, 0x58, 0xfd, 0xc1, 0xe0, 0xc9, 0xc0, 0xfc, 0x64, 0xa0, 0xbe, 0x44,
	0x83, 0x82, 0x10, 0x02, 0xf7, 0xb7, 0xaa, 0x10, 0x8f, 0x14, 0x7a, 0xf8, 0x64, 0x97, 0x50, 0xf5,
	0xa1, 0x9a, 0x28, 0xfe, 0x38, 0xc1, 0xdf, 0x55, 0x42, 0x42, 0x62, 0x1a, 0x54, 0x44, 0xb4, 0x8d,
	0x61, 0x5c, 0x66, 0xa9, 0x50, 0x61, 0x44, 0x35, 0xd3, 0xa1, 0x2f, 0x1b, 0xb8, 0xc3, 0xe4, 0x1b,
	0x45, 0x47, 0xce, 0xa9, 0x6a, 0x62, 0x12, 0xbb, 0xd2, 0x43, 0x93, 0x0e, 0x93, 0x24, 0xbe, 0x31,
	0x8a, 0x68, 0xdf, 0x18, 0xd9, 0xb8, 0xa3, 0xce, 0x4d, 0x1a, 0xa8, 0xe1, 0x98, 0xc3, 0x21, 0xee,
	0xa8, 0xa9, 0x49, 0x03, 0xb1, 0x4f, 0x37, 0xd4, 0xf4, 0x24, 0x9a, 0x1d, 0xa3, 0xdb, 0xc3, 0x1d,
	0x35, 0x53, 0xfc, 0x51, 0xc8, 0xfd, 0xa5, 0x18, 0xfb, 0xa2, 0x2b, 0x2c, 0xef, 0x2a, 0xaa, 0x7d,
	0x2c, 0xc9, 0x4b, 0xfe, 0x20, 0x59, 0x26, 0xa4, 0xd3, 0x53, 0x95, 0xa0, 0xc0, 0x7d, 0xb1, 0x37,
	0xb6, 0x47, 0x7d, 0xcc, 0x22, 0x84, 0x49, 0x74, 0x44, 0x12, 0x6a, 0x72, 0xeb, 0x9f, 0x52, 0x80,
	0xea, 0x43, 0x3c, 0xf0, 0x65, 0xa0, 0x3f, 0x83, 0x9c, 0x77, 0x81, 0x82, 0x5e, 0x0d, 0x0f, 0xfe,
	0x43, 0x9f, 0x00, 0x0b, 0xd7, 0xe2, 0x11, 0xf3, 0x3b, 0xbd, 0x13, 0xbf, 0xfd, 0xb3, 0x7f, 0xff,
	0x4e, 0x62, 0x11, 0xcd, 0x6f, 0x1e, 0xbd, 0xbe, 0xc9, 0x2f, 0xe1, 0xd0, 0x6f, 0x42, 0x86, 0xbf,
	0x60, 0xa0, 0x57, 0x26, 0x8c, 0x26, 0x3f, 0x96, 0x14, 0x8a, 0x71, 0x48, 0x39, 0xdb, 0x73, 0x94,
	0xed, 0x69, 0x74, 0x4a, 0x60, 0xbb, 0xf9, 0x8c, 0xdf, 0x54, 0x3c, 0x47, 0x7f, 0xaa, 0xc0, 0x92,
	0xfc, 0x1c, 0x86, 0xae, 0x4f, 0x18, 0x3d, 0xf4, 0x25, 0xb0, 0xf0, 0xfa, 0x0c, 0x3d, 0x38, 0xac,
	0xcb, 0x14, 0xd6, 0xba, 0x76, 0x56, 0x84, 0x45, 0x5f, 0x93, 0x36, 0xb1, 0x4b, 0x7c, 0x53, 0x29,
	0xa2, 0x6f, 0x2a, 0x00, 0xe3, 0x57, 0x2e, 0x74, 0x6d, 0x1a, 0x27, 0xf1, 0x05, 0xae, 0xf0, 0x5a,
	0x4c, 0x6a, 0x8e, 0x49, 0xa3, 0x98, 0xd6, 0xb4, 0xd3, 0x41, 0x4c, 0xf4, 0xcb, 0x71, 0x82, 0xe7,
	0xf7, 0x15, 0x98, 0x17, 0xde, 0xb7, 0xd0, 0x54, 0x16, 0xd2, 0x35, 0x77, 0x61, 0x23, 0x2e, 0x39,
	0x87, 0xf4, 0x39, 0x0a, 0xe9, 0x7c, 0x71, 0x2d, 0x08, 0xe9, 0x99, 0xfb, 0x16, 0xf7, 0x7c, 0xeb,
	0x1f, 0x17, 0x60, 0x45, 0xd0, 0x6c, 0xfe, 0x07, 0x5a, 0x2c, 0x48, 0xb3, 0xd7, 0x09, 0x74, 0x25,
	0xfa, 0x89, 0x5e, 0x7a, 0x38, 0x29, 0x5c, 0x9d, 0x4e, 0xc8, 0x81, 0x9d, 0xa2, 0xc0, 0x96, 0x35,
	0x20, 0xc0, 0xd8, 0x41, 0x9b, 0x88, 0x67, 0x04, 0x29, 0x9a, 0x91, 0x83, 0x2e, 0x4f, 0x18, 0x49,
	0xc8, 0x16, 0x2a, 0x5c, 0x99, 0x4a, 0xc7, 0x19, 0x9e, 0xa5, 0x0c, 0x4f, 0x69, 0xea, 0x98, 0xe1,
	0x66, 0x9b, 0x50, 0x10, 0xb6, 0xcf, 0x20, 0xcd, 0xd7, 0x63, 0xc2, 0x78, 0xf2, 0x4a, 0x5c, 0x9d,
	0x4e, 0xc8, 0x39, 0x9f, 0xa7, 0x9c, 0xf3, 0xc5, 0x55, 0x81, 0xf3, 0x33, 0xef, 0x6e, 0xe1, 0x39,
	0xfa, 0xca, 0x78, 0x0f, 0x4f, 0x18, 0xd4, 0xb7, 0x85, 0x5f, 0x89, 0x41, 0x29, 0xf3, 0x47, 0x51,
	0xfc, 0xbf, 0xaa, 0x88, 0x16, 0xac, 0x18, 0x3d, 0x70, 0x60, 0xdf, 0xbe, 0x1a, 0x8b, 0x96, 0xc3,
	0xb8, 0x40, 0x61, 0x9c, 0xd1, 0x4e, 0x0a, 0x30, 0xa4, 0xad, 0xfa, 0x1d, 0x65, 0xfc, 0xf5, 0x1a,
	0x57, 0xbc, 0xcd, 0x19, 0xf3, 0x76, 0x0a, 0xd7, 0xe3, 0x77, 0x90, 0xa5, 0xa3, 0x9d, 0x10, 0x60,
	0xb9, 0xf9, 0x1d, 0x04, 0xd5, 0xf7, 0x15, 0x58, 0xf6, 0x65, 0xc3, 0xa0, 0x18, 0x5c, 0xe4, 0x97,
	0xb9, 0x70, 0x0b, 0x37, 0x39, 0xd5, 0x46, 0xb2, 0x70, 0x3e, 0x60, 0x9b, 0xfc, 0x75, 0x8c, 0x00,
	0xfc, 0x4b, 0x85, 0x7d, 0xe8, 0x2c, 0x25, 0xad, 0xa0, 0xad, 0xd9, 0xb3, 0x6a, 0x0a, 0x6f, 0xcc,
	0xd4, 0x87, 0xc3, 0xbc, 0x4a, 0x61, 0x6a, 0xda, 0xb9, 0x30, 0x98, 0xd2, 0xfa, 0x1e, 0x43, 0x9a,
	0xc5, 0x9e, 0x93, 0x36, 0x99, 0x94, 0x9b, 0x39, 0x69, 0x93, 0xc9, 0x89, 0x95, 0xda, 0x1a, 0x85,
	0xb1, 0xaa, 0xad, 0x08, 0x30, 0xd8, 0x5f, 0x15, 0xe0, 0xac, 0x59, 0x56, 0xe4, 0xe4, 0xfd, 0x1d,
	0x93, 0xb5, 0x2f, 0xc1, 0x32, 0x8c, 0x75, 0x07, 0xbb, 0xac, 0x47, 0x90, 0xa2, 0x29, 0xbe, 0x93,
	0x2c, 0x9a, 0x98, 0x6e, 0x3c, 0xc9, 0xa2, 0xc9, 0xb9, 0xc2, 0x61, 0x16, 0x8d, 0x26, 0xd3, 0x12,
	0xb6, 0xcf, 0x21, 0xc3, 0x53, 0x6b, 0x27, 0x19, 0x15, 0x39, 0xd5, 0x77, 0x92, 0x51, 0xf1, 0xe7,
	0xe9, 0xf2, 0xb0, 0x40, 0x43, 0x02, 0xf3, 0xd1, 0xc0, 0x65, 0xbf, 0xf5, 0xd3, 0x39, 0x58, 0x15,
	0x3c, 0x8a, 0xf0, 0x12, 0x4f, 0x3c, 0xa0, 0x67, 0xef, 0x42, 0xbd, 0x5f, 0x64, 0x92, 0x47, 0xb8,
	0xf7, 0x8b, 0x4e, 0xe6, 0x70, 0x75, 0x13, 0xad, 0x13, 0x90, 0x42, 0xe6, 0xc0, 0xe6, 0x33, 0x39,
	0xb9, 0xe0, 0x39, 0xfa, 0x2d, 0xc5, 0x73, 0x76, 0xd7, 0xa6, 0x30, 0x91, 0x0d, 0xce, 0x6b, 0x31,
	0xa9, 0x39, 0xa2, 0x02, 0x45, 0x74, 0x52, 0x5b, 0xf6, 0x21, 0x22, 0x4b, 0xf6, 0x6d, 0xc5, 0xf3,
	0x42, 0xd3, 0x30, 0xc8, 0xae, 0xe8, 0xb5, 0x98, 0xd4, 0xb2, 0x54, 0x8a, 0xd3, 0xa5, 0xf2, 0x3b,
	0x0a, 0xa4, 0x59, 0xe6, 0xc4, 0x54, 0x44, 0x52, 0xfa, 0xc6, 0x54, 0x44, 0xbe, 0x74, 0x8c, 0x8b,
	0x14, 0xd1, 0x59, 0x6d, 0xd5, 0x8f, 0x68, 0x44, 0xe9, 0x88, 0x42, 0xfd, 0x47, 0x4e, 0x52, 0xa8,
	0xf1, 0xd7, 0x03, 0x36, 0x91, 0xdb, 0x02, 0x13, 0xf3, 0x8e, 0x69, 0x95, 0x1e, 0x34, 0x50, 0x78,
	0x90, 0x14, 0xf9, 0xb1, 0x55, 0x61, 0x33, 0x36, 0x7d, 0x98, 0xcf, 0x18, 0x3f, 0x08, 0xd9, 0x9b,
	0xc6, 0x27, 0x36, 0x59, 0xc9, 0x3f, 0x52, 0x60, 0x69, 0x8c, 0xe8, 0xd3, 0x51, 0x94, 0xcb, 0x98,
	0xf4, 0x7d, 0x5d, 0x44, 0x50, 0x3c, 0xe9, 0x63, 0x39, 0x6d, 0x9d, 0xe2, 0x2a, 0x68, 0xa7, 0x02,
	0xb8, 0x08, 0x19, 0x41, 0xf6, 0xc7, 0x0a, 0x2c, 0x7b, 0xc8, 0xd8, 0xc7, 0x24, 0x28, 0x16, 0x23,
	0xe9, 0xcb, 0x97, 0xc2, 0xd6, 0x2c, 0x5d, 0xc2, 0x16, 0x59, 0x04, 0xc7, 0x9e, 0xab, 0x08, 0xba,
	0xef, 0x2a, 0xb0, 0xec, 0x79, 0x18, 0xbe, 0x98, 0x53, 0xd0, 0x85, 0x7c, 0xfb, 0x34, 0x0d, 0x5d,
	0xd8, 0x57, 0x4e, 0xae, 0x31, 0x45, 0x61, 0x4b, 0x4a, 0x0e, 0x39, 0x2b, 0x12, 0x2e, 0xba, 0xa4,
	0x6f, 0xc4, 0x65, 0x23, 0xae, 0xea, 0x9b, 0xb3, 0x75, 0x0a, 0x3d, 0x84, 0xf9, 0x17, 0x16, 0xfd,
	0xb9, 0x02, 0x48, 0xc4, 0xc7, 0x17, 0x36, 0x2e, 0x2f, 0x79, 0x6d, 0x6f, 0xcc, 0xd8, 0x2b, 0x2c,
	0xca, 0x0c, 0x2e, 0x2f, 0x89, 0xee, 0x5c, 0xeb, 0xf6, 0xea, 0x64, 0x0e, 0xb2, 0x71, 0xbb, 0x16,
	0x8f, 0x98, 0xa3, 0xd8, 0xa0, 0x28, 0xae, 0x16, 0x2f, 0xfb, 0x51, 0x74, 0x28, 0xdd, 0xe6, 0x33,
	0xe9, 0xf3, 0xa4, 0xe7, 0xe8, 0x5b, 0x0a, 0x64, 0xdd, 0xef, 0x8f, 0x22, 0xce, 0x62, 0x51, 0x1f,
	0x3b, 0x15, 0x36, 0xe2, 0x92, 0xbb, 0xdf, 0x44, 0x53, 0x6c, 0xe7, 0xb4, 0xbc, 0x1f, 0xdb, 0x11,
	0xa7, 0x24, 0x76, 0xee, 0x7f, 0x53, 0x70, 0x46, 0xb0, 0x73, 0xbe, 0xcf, 0x78, 0xbf, 0x3e, 0x76,
	0x53, 0x9b, 0xd3, 0xbf, 0x35, 0x8e, 0x11, 0x1a, 0x4f, 0xfc, 0xaa, 0x5c, 0xf2, 0xf1, 0xee, 0xa7,
	0xc1, 0xec, 0xf3, 0x65, 0xb2, 0x5b, 0x7f, 0x6f, 0xec, 0x1d, 0x62, 0x80, 0x91, 0x1d, 0xc4, 0xf5,
	0xf8, 0x1d, 0xe4, 0x93, 0xac, 0x76, 0x26, 0x08, 0x66, 0xec, 0x26, 0xd0, 0xef, 0x4a, 0x67, 0x99,
	0xad, 0xe9, 0x5c, 0xe2, 0x05, 0xc1, 0x53, 0xbe, 0x51, 0x77, 0xdd, 0x3a, 0x0a, 0x91, 0x14, 0x11,
	0x93, 0x17, 0xef, 0xc4, 0x98, 0xb6, 0x2f, 0xe4, 0x79, 0x7d, 0x86, 0x1e, 0xb2, 0xa1, 0x45, 0x61,
	0x92, 0x7a, 0x36, 0x30, 0xfa, 0x98, 0xaa, 0xbd, 0xbb, 0x19, 0x63, 0x2c, 0x9d, 0xbc, 0x21, 0xaf,
	0xc7, 0xef, 0x20, 0x03, 0x2a, 0x46, 0x03, 0xda, 0xfa, 0x3b, 0x90, 0xdd, 0xfb, 0xf8, 0x2a, 0x6e,
	0x6a, 0x68, 0x16, 0x95, 0xc5, 0x59, 0x78, 0x2d, 0x26, 0x75, 0x58, 0x68, 0xd6, 0x26, 0x64, 0x2c,
	0x1b, 0x84, 0xa8, 0xd5, 0x37, 0x14, 0xc8, 0xb8, 0x87, 0xbf, 0xe9, 0xef, 0xfb, 0xd2, 0xc9, 0x6f,
	0x23, 0x2e, 0x79, 0xf8, 0x25, 0x92, 0x07, 0x43, 0x3c, 0xf2, 0x7d, 0x7d, 0x4a, 0xa4, 0x18, 0x95,
	0x25, 0x39, 0x55, 0x24, 0xbe, 0x85, 0xe3, 0x16, 0xab, 0x78, 0xd6, 0x8f, 0xe5, 0x99, 0x97, 0x39,
	0xf3, 0x1c, 0xfd, 0x81, 0x02, 0x39, 0x2f, 0x03, 0x31, 0x5c, 0x9d, 0x26, 0xa4, 0x46, 0x16, 0xae,
	0xc7, 0xef, 0x10, 0x66, 0x09, 0x44, 0x54, 0xcc, 0xc6, 0x1b, 0xbd, 0x1e, 0x91, 0xd1, 0xd7, 0x24,
	0x4b, 0x30, 0x0d, 0x56, 0xc0, 0x0c, 0x5c, 0x8f, 0xdf, 0x81, 0xc3, 0x3a, 0x4d, 0x61, 0xad, 0x20,
	0xbf, 0xfe, 0x90, 0xa8, 0xc6, 0x4d, 0xd6, 0xb8, 0x16, 0x33, 0x7d, 0x2a, 0xde, 0x6a, 0xc9, 0xc9,
	0x56, 0xae, 0xef, 0x43, 0x97, 0xfd, 0x72, 0x61, 0xe9, 0x3a, 0x9b, 0xcf, 0xa4, 0x9c, 0x96, 0xe7,
	0x04, 0x57, 0x86, 0x67, 0x2b, 0x4d, 0x55, 0x6a, 0x39, 0x77, 0x6a, 0xaa, 0x52, 0xfb, 0x92, 0xa0,
	0xb4, 0x57, 0x29, 0xb4, 0x4b, 0xe8, 0x65, 0x3f, 0xb4, 0x36, 0x23, 0x94, 0x14, 0xea, 0x7b, 0x0a,
	0x64, 0x78, 0xfe, 0xce, 0x54, 0x5c, 0x72, 0xc6, 0xd1, 0x54, 0x5c, 0xbe, 0xe4, 0x22, 0x6d, 0x93,
	0xe2, 0x7a, 0x05, 0x5d, 0xf1, 0xe3, 0xe2, 0x29, 0x43, 0x01, 0x99, 0xfd, 0x89, 0x02, 0xf3, 0x42,
	0x42, 0x0e, 0x7a, 0x3d, 0xc6, 0x12, 0xc9, 0xc9, 0x45, 0x11, 0xd1, 0xe9, 0xc4, 0x7c, 0x1f, 0xff,
	0x6d, 0xb7, 0xbc, 0xb4, 0xb8, 0x4d, 0x89, 0x6f, 0x2a, 0xc5, 0xdb, 0x6b, 0x70, 0xa2, 0x6d, 0xf6,
	0xfd, 0x0c, 0xf6, 0x95, 0x2f, 0x26, 0x8d, 0x61, 0xf7, 0x61, 0x9a, 0x66, 0x84, 0xbd, 0xf1, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x43, 0x81, 0x8c, 0x74, 0x64, 0x00, 0x00,
}
